

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 21 14:38:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	functab,global,class=ENTRY,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 2.05
    66                           ; Generated 20/12/2018 GMT
    67                           ; 
    68                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F886 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0009                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001B                     	;# 
   128  001B                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  0081                     	;# 
   134  0085                     	;# 
   135  0086                     	;# 
   136  0087                     	;# 
   137  0089                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0092                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  0105                     	;# 
   161  0107                     	;# 
   162  0108                     	;# 
   163  0109                     	;# 
   164  010C                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  0185                     	;# 
   170  0187                     	;# 
   171  0188                     	;# 
   172  0189                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  008F                     	;# 
   218  0090                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0093                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  009F                     	;# 
   236  0105                     	;# 
   237  0107                     	;# 
   238  0108                     	;# 
   239  0109                     	;# 
   240  010C                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  0185                     	;# 
   246  0187                     	;# 
   247  0188                     	;# 
   248  0189                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  000E                     	;# 
   265  000E                     	;# 
   266  000F                     	;# 
   267  0010                     	;# 
   268  0011                     	;# 
   269  0012                     	;# 
   270  0013                     	;# 
   271  0014                     	;# 
   272  0015                     	;# 
   273  0015                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001B                     	;# 
   281  001C                     	;# 
   282  001D                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  0081                     	;# 
   286  0085                     	;# 
   287  0086                     	;# 
   288  0087                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0089                     	;# 
   366  008C                     	;# 
   367  008D                     	;# 
   368  008E                     	;# 
   369  008F                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0098                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  0105                     	;# 
   389  0107                     	;# 
   390  0108                     	;# 
   391  0109                     	;# 
   392  010C                     	;# 
   393  010C                     	;# 
   394  010D                     	;# 
   395  010E                     	;# 
   396  010F                     	;# 
   397  0185                     	;# 
   398  0187                     	;# 
   399  0188                     	;# 
   400  0189                     	;# 
   401  018C                     	;# 
   402  018D                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0015                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001B                     	;# 
   509  001C                     	;# 
   510  001D                     	;# 
   511  001E                     	;# 
   512  001F                     	;# 
   513  0081                     	;# 
   514  0085                     	;# 
   515  0086                     	;# 
   516  0087                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  008F                     	;# 
   522  0090                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0093                     	;# 
   527  0093                     	;# 
   528  0094                     	;# 
   529  0095                     	;# 
   530  0096                     	;# 
   531  0097                     	;# 
   532  0098                     	;# 
   533  0099                     	;# 
   534  009A                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  0105                     	;# 
   541  0107                     	;# 
   542  0108                     	;# 
   543  0109                     	;# 
   544  010C                     	;# 
   545  010C                     	;# 
   546  010D                     	;# 
   547  010E                     	;# 
   548  010F                     	;# 
   549  0185                     	;# 
   550  0187                     	;# 
   551  0188                     	;# 
   552  0189                     	;# 
   553  018C                     	;# 
   554  018D                     	;# 
   555  0000                     	;# 
   556  0001                     	;# 
   557  0002                     	;# 
   558  0003                     	;# 
   559  0004                     	;# 
   560  0005                     	;# 
   561  0006                     	;# 
   562  0007                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  000E                     	;# 
   570  000F                     	;# 
   571  0010                     	;# 
   572  0011                     	;# 
   573  0012                     	;# 
   574  0013                     	;# 
   575  0014                     	;# 
   576  0015                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  001D                     	;# 
   587  001E                     	;# 
   588  001F                     	;# 
   589  0081                     	;# 
   590  0085                     	;# 
   591  0086                     	;# 
   592  0087                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  0105                     	;# 
   617  0107                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0187                     	;# 
   627  0188                     	;# 
   628  0189                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0009                     	;# 
   640  000A                     	;# 
   641  000B                     	;# 
   642  000C                     	;# 
   643  000D                     	;# 
   644  000E                     	;# 
   645  000E                     	;# 
   646  000F                     	;# 
   647  0010                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0014                     	;# 
   652  0015                     	;# 
   653  0015                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  0019                     	;# 
   658  001A                     	;# 
   659  001B                     	;# 
   660  001B                     	;# 
   661  001C                     	;# 
   662  001D                     	;# 
   663  001E                     	;# 
   664  001F                     	;# 
   665  0081                     	;# 
   666  0085                     	;# 
   667  0086                     	;# 
   668  0087                     	;# 
   669  0089                     	;# 
   670  008C                     	;# 
   671  008D                     	;# 
   672  008E                     	;# 
   673  008F                     	;# 
   674  0090                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0093                     	;# 
   679  0093                     	;# 
   680  0094                     	;# 
   681  0095                     	;# 
   682  0096                     	;# 
   683  0097                     	;# 
   684  0098                     	;# 
   685  0099                     	;# 
   686  009A                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  009F                     	;# 
   692  0105                     	;# 
   693  0107                     	;# 
   694  0108                     	;# 
   695  0109                     	;# 
   696  010C                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  0185                     	;# 
   702  0187                     	;# 
   703  0188                     	;# 
   704  0189                     	;# 
   705  018C                     	;# 
   706  018D                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  000E                     	;# 
   721  000E                     	;# 
   722  000F                     	;# 
   723  0010                     	;# 
   724  0011                     	;# 
   725  0012                     	;# 
   726  0013                     	;# 
   727  0014                     	;# 
   728  0015                     	;# 
   729  0015                     	;# 
   730  0016                     	;# 
   731  0017                     	;# 
   732  0018                     	;# 
   733  0019                     	;# 
   734  001A                     	;# 
   735  001B                     	;# 
   736  001B                     	;# 
   737  001C                     	;# 
   738  001D                     	;# 
   739  001E                     	;# 
   740  001F                     	;# 
   741  0081                     	;# 
   742  0085                     	;# 
   743  0086                     	;# 
   744  0087                     	;# 
   745  0089                     	;# 
   746  008C                     	;# 
   747  008D                     	;# 
   748  008E                     	;# 
   749  008F                     	;# 
   750  0090                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0093                     	;# 
   755  0093                     	;# 
   756  0094                     	;# 
   757  0095                     	;# 
   758  0096                     	;# 
   759  0097                     	;# 
   760  0098                     	;# 
   761  0099                     	;# 
   762  009A                     	;# 
   763  009B                     	;# 
   764  009C                     	;# 
   765  009D                     	;# 
   766  009E                     	;# 
   767  009F                     	;# 
   768  0105                     	;# 
   769  0107                     	;# 
   770  0108                     	;# 
   771  0109                     	;# 
   772  010C                     	;# 
   773  010C                     	;# 
   774  010D                     	;# 
   775  010E                     	;# 
   776  010F                     	;# 
   777  0185                     	;# 
   778  0187                     	;# 
   779  0188                     	;# 
   780  0189                     	;# 
   781  018C                     	;# 
   782  018D                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0009                     	;# 
   792  000A                     	;# 
   793  000B                     	;# 
   794  000C                     	;# 
   795  000D                     	;# 
   796  000E                     	;# 
   797  000E                     	;# 
   798  000F                     	;# 
   799  0010                     	;# 
   800  0011                     	;# 
   801  0012                     	;# 
   802  0013                     	;# 
   803  0014                     	;# 
   804  0015                     	;# 
   805  0015                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  001A                     	;# 
   811  001B                     	;# 
   812  001B                     	;# 
   813  001C                     	;# 
   814  001D                     	;# 
   815  001E                     	;# 
   816  001F                     	;# 
   817  0081                     	;# 
   818  0085                     	;# 
   819  0086                     	;# 
   820  0087                     	;# 
   821  0089                     	;# 
   822  008C                     	;# 
   823  008D                     	;# 
   824  008E                     	;# 
   825  008F                     	;# 
   826  0090                     	;# 
   827  0091                     	;# 
   828  0092                     	;# 
   829  0093                     	;# 
   830  0093                     	;# 
   831  0093                     	;# 
   832  0094                     	;# 
   833  0095                     	;# 
   834  0096                     	;# 
   835  0097                     	;# 
   836  0098                     	;# 
   837  0099                     	;# 
   838  009A                     	;# 
   839  009B                     	;# 
   840  009C                     	;# 
   841  009D                     	;# 
   842  009E                     	;# 
   843  009F                     	;# 
   844  0105                     	;# 
   845  0107                     	;# 
   846  0108                     	;# 
   847  0109                     	;# 
   848  010C                     	;# 
   849  010C                     	;# 
   850  010D                     	;# 
   851  010E                     	;# 
   852  010F                     	;# 
   853  0185                     	;# 
   854  0187                     	;# 
   855  0188                     	;# 
   856  0189                     	;# 
   857  018C                     	;# 
   858  018D                     	;# 
   859                           
   860                           	psect	idataBANK0
   861  07FE                     __pidataBANK0:	
   862                           
   863                           ;initializer for _menos1
   864  07FE  34FF               	retlw	255
   865  07FF  34FF               	retlw	255
   866                           
   867                           	psect	strings
   868  0800                     __pstrings:	
   869  0800                     stringtab:	
   870  0800                     __stringtab:	
   871  0800                     stringcode:	
   872                           ;	String table - string pointers are 1 byte each
   873                           
   874  0800                     stringdir:	
   875  0800  3008               	movlw	high stringdir
   876  0801  008A               	movwf	10
   877  0802  0804               	movf	4,w
   878  0803  0A84               	incf	4,f
   879  0804  0782               	addwf	2,f
   880  0805                     __stringbase:	
   881  0805  3400               	retlw	0
   882  0806                     __end_of__stringtab:	
   883  0806                     __powers_:	
   884  0806  3400               	retlw	0
   885  0807  3400               	retlw	0
   886  0808  3480               	retlw	128
   887  0809  343F               	retlw	63
   888  080A  3400               	retlw	0
   889  080B  3400               	retlw	0
   890  080C  3420               	retlw	32
   891  080D  3441               	retlw	65
   892  080E  3400               	retlw	0
   893  080F  3400               	retlw	0
   894  0810  34C8               	retlw	200
   895  0811  3442               	retlw	66
   896  0812  3400               	retlw	0
   897  0813  3400               	retlw	0
   898  0814  347A               	retlw	122
   899  0815  3444               	retlw	68
   900  0816  3400               	retlw	0
   901  0817  3440               	retlw	64
   902  0818  341C               	retlw	28
   903  0819  3446               	retlw	70
   904  081A  3400               	retlw	0
   905  081B  3450               	retlw	80
   906  081C  34C3               	retlw	195
   907  081D  3447               	retlw	71
   908  081E  3400               	retlw	0
   909  081F  3424               	retlw	36
   910  0820  3474               	retlw	116
   911  0821  3449               	retlw	73
   912  0822  3480               	retlw	128
   913  0823  3496               	retlw	150
   914  0824  3418               	retlw	24
   915  0825  344B               	retlw	75
   916  0826  3420               	retlw	32
   917  0827  34BC               	retlw	188
   918  0828  34BE               	retlw	190
   919  0829  344C               	retlw	76
   920  082A  3428               	retlw	40
   921  082B  346B               	retlw	107
   922  082C  346E               	retlw	110
   923  082D  344E               	retlw	78
   924  082E  34F9               	retlw	249
   925  082F  3402               	retlw	2
   926  0830  3415               	retlw	21
   927  0831  3450               	retlw	80
   928  0832  34EC               	retlw	236
   929  0833  3478               	retlw	120
   930  0834  34AD               	retlw	173
   931  0835  3460               	retlw	96
   932  0836  34CA               	retlw	202
   933  0837  34F2               	retlw	242
   934  0838  3449               	retlw	73
   935  0839  3471               	retlw	113
   936  083A                     __end_of__powers_:	
   937  083A                     __npowers_:	
   938  083A  3400               	retlw	0
   939  083B  3400               	retlw	0
   940  083C  3480               	retlw	128
   941  083D  343F               	retlw	63
   942  083E  34CD               	retlw	205
   943  083F  34CC               	retlw	204
   944  0840  34CC               	retlw	204
   945  0841  343D               	retlw	61
   946  0842  340A               	retlw	10
   947  0843  34D7               	retlw	215
   948  0844  3423               	retlw	35
   949  0845  343C               	retlw	60
   950  0846  346F               	retlw	111
   951  0847  3412               	retlw	18
   952  0848  3483               	retlw	131
   953  0849  343A               	retlw	58
   954  084A  3417               	retlw	23
   955  084B  34B7               	retlw	183
   956  084C  34D1               	retlw	209
   957  084D  3438               	retlw	56
   958  084E  34AC               	retlw	172
   959  084F  34C5               	retlw	197
   960  0850  3427               	retlw	39
   961  0851  3437               	retlw	55
   962  0852  34BD               	retlw	189
   963  0853  3437               	retlw	55
   964  0854  3486               	retlw	134
   965  0855  3435               	retlw	53
   966  0856  3495               	retlw	149
   967  0857  34BF               	retlw	191
   968  0858  34D6               	retlw	214
   969  0859  3433               	retlw	51
   970  085A  3477               	retlw	119
   971  085B  34CC               	retlw	204
   972  085C  342B               	retlw	43
   973  085D  3432               	retlw	50
   974  085E  345F               	retlw	95
   975  085F  3470               	retlw	112
   976  0860  3489               	retlw	137
   977  0861  3430               	retlw	48
   978  0862  34FF               	retlw	255
   979  0863  34E6               	retlw	230
   980  0864  34DB               	retlw	219
   981  0865  342E               	retlw	46
   982  0866  3408               	retlw	8
   983  0867  34E5               	retlw	229
   984  0868  343C               	retlw	60
   985  0869  341E               	retlw	30
   986  086A  3460               	retlw	96
   987  086B  3442               	retlw	66
   988  086C  34A2               	retlw	162
   989  086D  340D               	retlw	13
   990  086E                     __end_of__npowers_:	
   991  086E                     _dpowers:	
   992  086E  3401               	retlw	1
   993  086F  3400               	retlw	0
   994  0870  3400               	retlw	0
   995  0871  3400               	retlw	0
   996  0872  340A               	retlw	10
   997  0873  3400               	retlw	0
   998  0874  3400               	retlw	0
   999  0875  3400               	retlw	0
  1000  0876  3464               	retlw	100
  1001  0877  3400               	retlw	0
  1002  0878  3400               	retlw	0
  1003  0879  3400               	retlw	0
  1004  087A  34E8               	retlw	232
  1005  087B  3403               	retlw	3
  1006  087C  3400               	retlw	0
  1007  087D  3400               	retlw	0
  1008  087E  3410               	retlw	16
  1009  087F  3427               	retlw	39
  1010  0880  3400               	retlw	0
  1011  0881  3400               	retlw	0
  1012  0882  34A0               	retlw	160
  1013  0883  3486               	retlw	134
  1014  0884  3401               	retlw	1
  1015  0885  3400               	retlw	0
  1016  0886  3440               	retlw	64
  1017  0887  3442               	retlw	66
  1018  0888  340F               	retlw	15
  1019  0889  3400               	retlw	0
  1020  088A  3480               	retlw	128
  1021  088B  3496               	retlw	150
  1022  088C  3498               	retlw	152
  1023  088D  3400               	retlw	0
  1024  088E  3400               	retlw	0
  1025  088F  34E1               	retlw	225
  1026  0890  34F5               	retlw	245
  1027  0891  3405               	retlw	5
  1028  0892  3400               	retlw	0
  1029  0893  34CA               	retlw	202
  1030  0894  349A               	retlw	154
  1031  0895  343B               	retlw	59
  1032  0896                     __end_of_dpowers:	
  1033  0019                     _TXREG	set	25
  1034  001A                     _RCREG	set	26
  1035  0001                     _TMR0	set	1
  1036  0012                     _T2CON	set	18
  1037  001D                     _CCP2CON	set	29
  1038  001B                     _CCPR2L	set	27
  1039  0017                     _CCP1CON	set	23
  1040  0015                     _CCPR1L	set	21
  1041  0035                     _RB5	set	53
  1042  0065                     _RCIF	set	101
  1043  0064                     _TXIF	set	100
  1044  00C2                     _FERR	set	194
  1045  00C1                     _OERR	set	193
  1046  00C6                     _RX9	set	198
  1047  00C5                     _SREN	set	197
  1048  00C4                     _CREN	set	196
  1049  00C7                     _SPEN	set	199
  1050  003B                     _RC3	set	59
  1051  003C                     _RC4	set	60
  1052  005A                     _T0IF	set	90
  1053  005D                     _T0IE	set	93
  1054  005F                     _GIE	set	95
  1055  003D                     _RC5	set	61
  1056  00ED                     _CCP2X	set	237
  1057  00EC                     _CCP2Y	set	236
  1058  00BD                     _CCP1X	set	189
  1059  00BC                     _CCP1Y	set	188
  1060  0099                     _SPBRG	set	153
  1061  0081                     _OPTION_REG	set	129
  1062  0087                     _TRISC	set	135
  1063  0086                     _TRISB	set	134
  1064  0092                     _PR2	set	146
  1065  04C5                     _TXEN	set	1221
  1066  04C6                     _TX9	set	1222
  1067  0465                     _RCIE	set	1125
  1068  0464                     _TXIE	set	1124
  1069  04C4                     _SYNC	set	1220
  1070  04C2                     _BRGH	set	1218
  1071  043A                     _TRISC2	set	1082
  1072  0896                     STR_1:	
  1073  0896  3425               	retlw	37	;'%'
  1074  0897  3466               	retlw	102	;'f'
  1075  0898  3400               	retlw	0
  1076                           
  1077                           ; #config settings
  1078  0000                     
  1079                           	psect	cinit
  1080  0011                     start_initialization:	
  1081  0011                     __initialization:	
  1082                           
  1083                           ; Initialize objects allocated to BANK0
  1084  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1085  0016  00EE               	movwf	__pdataBANK0& (0+127)
  1086  0017  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1087  001C  00EF               	movwf	(__pdataBANK0+1)& (0+127)
  1088                           
  1089                           ; Clear objects allocated to BANK3
  1090  001D  1783               	bsf	3,7	;select IRP bank2
  1091  001E  3090               	movlw	low __pbssBANK3
  1092  001F  0084               	movwf	4
  1093  0020  30DE               	movlw	low (__pbssBANK3+78)
  1094  0021  160A  118A  2561  120A  118A  	fcall	clear_ram0
  1095                           
  1096                           ; Clear objects allocated to BANK1
  1097  0026  1383               	bcf	3,7	;select IRP bank0
  1098  0027  30A0               	movlw	low __pbssBANK1
  1099  0028  0084               	movwf	4
  1100  0029  30DB               	movlw	low (__pbssBANK1+59)
  1101  002A  160A  118A  2561   	fcall	clear_ram0
  1102                           
  1103                           ; Clear objects allocated to BANK0
  1104  002D  01E9               	clrf	__pbssBANK0& (0+127)
  1105  002E  01EA               	clrf	(__pbssBANK0+1)& (0+127)
  1106  002F  01EB               	clrf	(__pbssBANK0+2)& (0+127)
  1107  0030  01EC               	clrf	(__pbssBANK0+3)& (0+127)
  1108  0031  01ED               	clrf	(__pbssBANK0+4)& (0+127)
  1109                           
  1110                           ; Clear objects allocated to COMMON
  1111  0032  01F8               	clrf	__pbssCOMMON& (0+127)
  1112  0033  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1113  0034  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1114  0035  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  1115  0036  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  1116  0037  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  1117  0038                     end_of_initialization:	
  1118                           ;End of C runtime variable initialization code
  1119                           
  1120  0038                     __end_of__initialization:	
  1121  0038  0183               	clrf	3
  1122  0039  160A  118A  2D72   	ljmp	_main	;jump to C main() function
  1123                           
  1124                           	psect	bssCOMMON
  1125  0078                     __pbssCOMMON:	
  1126  0078                     _pro_ptr:	
  1127  0078                     	ds	1
  1128  0079                     _pro_myAddress:	
  1129  0079                     	ds	1
  1130  007A                     _interruptCounter:	
  1131  007A                     	ds	1
  1132  007B                     _pos_inB:	
  1133  007B                     	ds	1
  1134  007C                     _pos_inA:	
  1135  007C                     	ds	1
  1136  007D                     _pos_currentEncoder:	
  1137  007D                     	ds	1
  1138                           
  1139                           	psect	bssBANK0
  1140  0069                     __pbssBANK0:	
  1141  0069                     _excitation:	
  1142  0069                     	ds	2
  1143  006B                     _aChar:	
  1144  006B                     	ds	1
  1145  006C                     _pro_status:	
  1146  006C                     	ds	1
  1147  006D                     _pos_previousEncoder:	
  1148  006D                     	ds	1
  1149                           
  1150                           	psect	dataBANK0
  1151  006E                     __pdataBANK0:	
  1152  006E                     _menos1:	
  1153  006E                     	ds	2
  1154                           
  1155                           	psect	bssBANK1
  1156  00A0                     __pbssBANK1:	
  1157  00A0                     _encoderStates:	
  1158  00A0                     	ds	16
  1159  00B0                     _value:	
  1160  00B0                     	ds	4
  1161  00B4                     _error:	
  1162  00B4                     	ds	4
  1163  00B8                     _activation:	
  1164  00B8                     	ds	4
  1165  00BC                     _kProportional:	
  1166  00BC                     	ds	4
  1167  00C0                     _previousError:	
  1168  00C0                     	ds	4
  1169  00C4                     _integralError:	
  1170  00C4                     	ds	4
  1171  00C8                     _setPoint:	
  1172  00C8                     	ds	4
  1173  00CC                     _currentPosition:	
  1174  00CC                     	ds	4
  1175  00D0                     _tsk_elapsedTime:	
  1176  00D0                     	ds	2
  1177  00D2                     _tsk_timeStamp:	
  1178  00D2                     	ds	2
  1179  00D4                     _pos_currentPosition:	
  1180  00D4                     	ds	2
  1181  00D6                     _ch:	
  1182  00D6                     	ds	1
  1183  00D7                     _led_status:	
  1184  00D7                     	ds	1
  1185  00D8                     _dummy:	
  1186  00D8                     	ds	1
  1187  00D9                     _tsk_task:	
  1188  00D9                     	ds	1
  1189  00DA                     _delayus_variable:	
  1190  00DA                     	ds	1
  1191                           
  1192                           	psect	bssBANK3
  1193  0190                     __pbssBANK3:	
  1194  0190                     _tsk_tasks:	
  1195  0190                     	ds	15
  1196  019F                     _printBuffer:	
  1197  019F                     	ds	10
  1198  01A9                     _pro_incoming:	
  1199  01A9                     	ds	9
  1200  01B2                     _completeMessage:	
  1201  01B2                     	ds	8
  1202  01BA                     _kDerivative:	
  1203  01BA                     	ds	4
  1204  01BE                     _kIntegral:	
  1205  01BE                     	ds	4
  1206  01C2                     _buffer:	
  1207  01C2                     	ds	20
  1208  01D6                     _message:	
  1209  01D6                     	ds	8
  1210                           
  1211                           	psect	clrtext
  1212  1561                     clear_ram0:	
  1213                           ;	Called with FSR containing the base address, and
  1214                           ;	W with the last address+1
  1215                           
  1216  1561  0064               	clrwdt	;clear the watchdog before getting into this loop
  1217  1562                     clrloop0:	
  1218  1562  0180               	clrf	0	;clear RAM location pointed to by FSR
  1219  1563  0A84               	incf	4,f	;increment pointer
  1220  1564  0604               	xorwf	4,w	;XOR with final address
  1221  1565  1903               	btfsc	3,2	;have we reached the end yet?
  1222  1566  3400               	retlw	0	;all done for this memory range, return
  1223  1567  0604               	xorwf	4,w	;XOR again to restore value
  1224  1568  2D62               	goto	clrloop0	;do the next byte
  1225                           
  1226                           	psect	cstackBANK1
  1227  00DB                     __pcstackBANK1:	
  1228  00DB                     convertToReal@signal:	
  1229                           
  1230                           ; 4 bytes @ 0x0
  1231  00DB                     	ds	4
  1232  00DF                     convertToReal@decimal:	
  1233                           
  1234                           ; 1 bytes @ 0x4
  1235  00DF                     	ds	1
  1236  00E0                     convertToReal@temp:	
  1237                           
  1238                           ; 4 bytes @ 0x5
  1239  00E0                     	ds	4
  1240  00E4                     convertToReal@potDez:	
  1241                           
  1242                           ; 4 bytes @ 0x9
  1243  00E4                     	ds	4
  1244  00E8                     convertToReal@value:	
  1245                           
  1246                           ; 4 bytes @ 0xD
  1247  00E8                     	ds	4
  1248  00EC                     convertToReal@chars:	
  1249                           
  1250                           ; 1 bytes @ 0x11
  1251  00EC                     	ds	1
  1252  00ED                     convertToReal@i:	
  1253                           
  1254                           ; 1 bytes @ 0x12
  1255  00ED                     	ds	1
  1256                           
  1257                           	psect	cstackCOMMON
  1258  0070                     __pcstackCOMMON:	
  1259  0070                     ?_initTasks:	
  1260  0070                     ?_chkchr:	
  1261                           ; 1 bytes @ 0x0
  1262                           
  1263  0070                     ?_putch:	
  1264                           ; 1 bytes @ 0x0
  1265                           
  1266  0070                     ?_clear_usart_errors:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0070                     ?_serial_setup:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_mot_init:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ?_pid_pid:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_pid_clearError:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ?_pid_init:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_pos_init:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ?_executeTasks:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_initPic:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ?_isr:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ??_isr:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_initSys:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ?_main:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_cleanupBuffer:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_framingError:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ?_addToIncomingBuffer:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_pro_init:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_pro_setMyId:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_pid_task:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_protocol_task:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?_led_task:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329                           
  1330                           ; 1 bytes @ 0x0
  1331  0070                     	ds	8
  1332                           
  1333                           	psect	cstackBANK0
  1334  0020                     __pcstackBANK0:	
  1335  0020                     ??_chkchr:	
  1336  0020                     ??_putch:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0020                     ??_clear_usart_errors:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0020                     ??_serial_setup:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0020                     ?_mot_setExcitation:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0020                     ?_pid_setPoint:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0020                     ?_pid_setDerivativeGain:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0020                     ?_pid_setIntegralGain:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0020                     ?_pid_setProportionalGain:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0020                     ??_pid_clearError:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0020                     ??_pid_init:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0020                     ?_pos_setCurrentPosition:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0020                     ??_pos_init:	
  1370                           ; 1 bytes @ 0x0
  1371                           
  1372  0020                     ??_initPic:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0020                     ??_cleanupBuffer:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0020                     ??_addToIncomingBuffer:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0020                     ??_pro_setMyId:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0020                     ??_led_task:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0020                     ?___bmul:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0020                     ?_pos_getCurrentPosition:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0020                     ?__Umul8_16:	
  1394                           ; 2 bytes @ 0x0
  1395                           
  1396  0020                     ?_isValidCmd:	
  1397                           ; 2 bytes @ 0x0
  1398                           
  1399  0020                     ?_toMsgType:	
  1400                           ; 2 bytes @ 0x0
  1401                           
  1402  0020                     ?_isValid:	
  1403                           ; 2 bytes @ 0x0
  1404                           
  1405  0020                     ?___fltol:	
  1406                           ; 2 bytes @ 0x0
  1407                           
  1408  0020                     ?___fldiv:	
  1409                           ; 4 bytes @ 0x0
  1410                           
  1411  0020                     ___bmul@multiplicand:	
  1412                           ; 4 bytes @ 0x0
  1413                           
  1414  0020                     __Umul8_16@multiplicand:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0020                     mot_setExcitation@excitation:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0020                     pos_setCurrentPosition@pos:	
  1421                           ; 2 bytes @ 0x0
  1422                           
  1423  0020                     pid_setPoint@position:	
  1424                           ; 2 bytes @ 0x0
  1425                           
  1426  0020                     pid_setDerivativeGain@gain:	
  1427                           ; 4 bytes @ 0x0
  1428                           
  1429  0020                     pid_setIntegralGain@gain:	
  1430                           ; 4 bytes @ 0x0
  1431                           
  1432  0020                     pid_setProportionalGain@gain:	
  1433                           ; 4 bytes @ 0x0
  1434                           
  1435  0020                     ___fltol@f1:	
  1436                           ; 4 bytes @ 0x0
  1437                           
  1438  0020                     ___fldiv@a:	
  1439                           ; 4 bytes @ 0x0
  1440                           
  1441                           
  1442                           ; 4 bytes @ 0x0
  1443  0020                     	ds	1
  1444  0021                     ??___bmul:	
  1445  0021                     cleanupBuffer@i:	
  1446                           ; 1 bytes @ 0x1
  1447                           
  1448  0021                     addToIncomingBuffer@aChar:	
  1449                           ; 1 bytes @ 0x1
  1450                           
  1451  0021                     pro_setMyId@id:	
  1452                           ; 1 bytes @ 0x1
  1453                           
  1454  0021                     putch@c:	
  1455                           ; 1 bytes @ 0x1
  1456                           
  1457                           
  1458                           ; 1 bytes @ 0x1
  1459  0021                     	ds	1
  1460  0022                     ??_pos_getCurrentPosition:	
  1461  0022                     ??__Umul8_16:	
  1462                           ; 1 bytes @ 0x2
  1463                           
  1464  0022                     ??_mot_setExcitation:	
  1465                           ; 1 bytes @ 0x2
  1466                           
  1467  0022                     ??_pos_setCurrentPosition:	
  1468                           ; 1 bytes @ 0x2
  1469                           
  1470  0022                     ??_framingError:	
  1471                           ; 1 bytes @ 0x2
  1472                           
  1473  0022                     ??_pro_init:	
  1474                           ; 1 bytes @ 0x2
  1475                           
  1476  0022                     ?___xxtofl:	
  1477                           ; 1 bytes @ 0x2
  1478                           
  1479  0022                     ___bmul@product:	
  1480                           ; 4 bytes @ 0x2
  1481                           
  1482  0022                     ___xxtofl@val:	
  1483                           ; 1 bytes @ 0x2
  1484                           
  1485                           
  1486                           ; 4 bytes @ 0x2
  1487  0022                     	ds	1
  1488  0023                     ??_isValidCmd:	
  1489  0023                     ??_toMsgType:	
  1490                           ; 1 bytes @ 0x3
  1491                           
  1492  0023                     ??_isValid:	
  1493                           ; 1 bytes @ 0x3
  1494                           
  1495  0023                     pos_init@i:	
  1496                           ; 1 bytes @ 0x3
  1497                           
  1498  0023                     isValidCmd@aChar:	
  1499                           ; 1 bytes @ 0x3
  1500                           
  1501  0023                     toMsgType@aChar:	
  1502                           ; 1 bytes @ 0x3
  1503                           
  1504  0023                     isValid@aChar:	
  1505                           ; 1 bytes @ 0x3
  1506                           
  1507  0023                     ___bmul@multiplier:	
  1508                           ; 1 bytes @ 0x3
  1509                           
  1510                           
  1511                           ; 1 bytes @ 0x3
  1512  0023                     	ds	1
  1513  0024                     ??_pid_setPoint:	
  1514  0024                     ??_pid_setDerivativeGain:	
  1515                           ; 1 bytes @ 0x4
  1516                           
  1517  0024                     ??_pid_setIntegralGain:	
  1518                           ; 1 bytes @ 0x4
  1519                           
  1520  0024                     ??_pid_setProportionalGain:	
  1521                           ; 1 bytes @ 0x4
  1522                           
  1523  0024                     ?_createTask:	
  1524                           ; 1 bytes @ 0x4
  1525                           
  1526  0024                     ??___fltol:	
  1527                           ; 1 bytes @ 0x4
  1528                           
  1529  0024                     ?_pro_getMessage:	
  1530                           ; 1 bytes @ 0x4
  1531                           
  1532  0024                     pos_init@j:	
  1533                           ; 8 bytes @ 0x4
  1534                           
  1535  0024                     mot_setExcitation@value:	
  1536                           ; 1 bytes @ 0x4
  1537                           
  1538  0024                     createTask@taskID:	
  1539                           ; 2 bytes @ 0x4
  1540                           
  1541  0024                     __Umul8_16@product:	
  1542                           ; 2 bytes @ 0x4
  1543                           
  1544  0024                     ___fldiv@b:	
  1545                           ; 2 bytes @ 0x4
  1546                           
  1547                           
  1548                           ; 4 bytes @ 0x4
  1549  0024                     	ds	2
  1550  0026                     ??_mot_init:	
  1551  0026                     ??___xxtofl:	
  1552                           ; 1 bytes @ 0x6
  1553                           
  1554  0026                     createTask@t:	
  1555                           ; 1 bytes @ 0x6
  1556                           
  1557  0026                     __Umul8_16@word_mpld:	
  1558                           ; 1 bytes @ 0x6
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0x6
  1562  0026                     	ds	1
  1563  0027                     createTask@scheduleInterval:	
  1564                           
  1565                           ; 2 bytes @ 0x7
  1566  0027                     	ds	1
  1567  0028                     ??___fldiv:	
  1568  0028                     __Umul8_16@multiplier:	
  1569                           ; 1 bytes @ 0x8
  1570                           
  1571                           
  1572                           ; 1 bytes @ 0x8
  1573  0028                     	ds	1
  1574  0029                     ??_createTask:	
  1575  0029                     ?___flmul:	
  1576                           ; 1 bytes @ 0x9
  1577                           
  1578  0029                     ___fltol@sign1:	
  1579                           ; 4 bytes @ 0x9
  1580                           
  1581  0029                     ___flmul@b:	
  1582                           ; 1 bytes @ 0x9
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x9
  1586  0029                     	ds	1
  1587  002A                     ___fltol@exp1:	
  1588  002A                     ___xxtofl@sign:	
  1589                           ; 1 bytes @ 0xA
  1590                           
  1591                           
  1592                           ; 1 bytes @ 0xA
  1593  002A                     	ds	1
  1594  002B                     ??_initTasks:	
  1595  002B                     ?_pid_scaleExcitation:	
  1596                           ; 1 bytes @ 0xB
  1597                           
  1598  002B                     ___xxtofl@exp:	
  1599                           ; 2 bytes @ 0xB
  1600                           
  1601  002B                     pid_scaleExcitation@activation:	
  1602                           ; 1 bytes @ 0xB
  1603                           
  1604                           
  1605                           ; 4 bytes @ 0xB
  1606  002B                     	ds	1
  1607  002C                     ??_initSys:	
  1608  002C                     ??_pro_getMessage:	
  1609                           ; 1 bytes @ 0xC
  1610                           
  1611  002C                     ___xxtofl@arg:	
  1612                           ; 1 bytes @ 0xC
  1613                           
  1614                           
  1615                           ; 4 bytes @ 0xC
  1616  002C                     	ds	1
  1617  002D                     ___fldiv@rem:	
  1618  002D                     ___flmul@a:	
  1619                           ; 4 bytes @ 0xD
  1620                           
  1621                           
  1622                           ; 4 bytes @ 0xD
  1623  002D                     	ds	2
  1624  002F                     ??_pid_scaleExcitation:	
  1625                           
  1626                           ; 1 bytes @ 0xF
  1627  002F                     	ds	1
  1628  0030                     pro_getMessage@i:	
  1629                           
  1630                           ; 1 bytes @ 0x10
  1631  0030                     	ds	1
  1632  0031                     ??___flmul:	
  1633  0031                     ___fldiv@sign:	
  1634                           ; 1 bytes @ 0x11
  1635                           
  1636                           
  1637                           ; 1 bytes @ 0x11
  1638  0031                     	ds	1
  1639  0032                     ___fldiv@new_exp:	
  1640                           
  1641                           ; 2 bytes @ 0x12
  1642  0032                     	ds	2
  1643  0034                     ___fldiv@grs:	
  1644                           
  1645                           ; 4 bytes @ 0x14
  1646  0034                     	ds	2
  1647  0036                     ___flmul@sign:	
  1648                           
  1649                           ; 1 bytes @ 0x16
  1650  0036                     	ds	1
  1651  0037                     ___flmul@grs:	
  1652                           
  1653                           ; 4 bytes @ 0x17
  1654  0037                     	ds	1
  1655  0038                     ___fldiv@bexp:	
  1656                           
  1657                           ; 1 bytes @ 0x18
  1658  0038                     	ds	1
  1659  0039                     ___fldiv@aexp:	
  1660                           
  1661                           ; 1 bytes @ 0x19
  1662  0039                     	ds	2
  1663  003B                     ___flmul@aexp:	
  1664                           
  1665                           ; 1 bytes @ 0x1B
  1666  003B                     	ds	1
  1667  003C                     ___flmul@bexp:	
  1668                           
  1669                           ; 1 bytes @ 0x1C
  1670  003C                     	ds	1
  1671  003D                     ___flmul@prod:	
  1672                           
  1673                           ; 4 bytes @ 0x1D
  1674  003D                     	ds	4
  1675  0041                     ___flmul@temp:	
  1676                           
  1677                           ; 2 bytes @ 0x21
  1678  0041                     	ds	2
  1679  0043                     ?___fladd:	
  1680  0043                     ___fladd@b:	
  1681                           ; 4 bytes @ 0x23
  1682                           
  1683                           
  1684                           ; 4 bytes @ 0x23
  1685  0043                     	ds	4
  1686  0047                     ___fladd@a:	
  1687                           
  1688                           ; 4 bytes @ 0x27
  1689  0047                     	ds	4
  1690  004B                     ??___fladd:	
  1691                           
  1692                           ; 1 bytes @ 0x2B
  1693  004B                     	ds	8
  1694  0053                     ___fladd@signs:	
  1695                           
  1696                           ; 1 bytes @ 0x33
  1697  0053                     	ds	1
  1698  0054                     ___fladd@aexp:	
  1699                           
  1700                           ; 1 bytes @ 0x34
  1701  0054                     	ds	1
  1702  0055                     ___fladd@bexp:	
  1703                           
  1704                           ; 1 bytes @ 0x35
  1705  0055                     	ds	1
  1706  0056                     ___fladd@grs:	
  1707                           
  1708                           ; 1 bytes @ 0x36
  1709  0056                     	ds	1
  1710  0057                     ?_convertToReal:	
  1711  0057                     ?___flsub:	
  1712                           ; 4 bytes @ 0x37
  1713                           
  1714  0057                     ___flsub@a:	
  1715                           ; 4 bytes @ 0x37
  1716                           
  1717                           
  1718                           ; 4 bytes @ 0x37
  1719  0057                     	ds	4
  1720  005B                     ??_convertToReal:	
  1721  005B                     ___flsub@b:	
  1722                           ; 1 bytes @ 0x3B
  1723                           
  1724                           
  1725                           ; 4 bytes @ 0x3B
  1726  005B                     	ds	4
  1727  005F                     ??_pid_pid:	
  1728  005F                     ??_pid_task:	
  1729                           ; 1 bytes @ 0x3F
  1730                           
  1731  005F                     ??___flsub:	
  1732                           ; 1 bytes @ 0x3F
  1733                           
  1734                           
  1735                           ; 1 bytes @ 0x3F
  1736  005F                     	ds	1
  1737  0060                     ??_protocol_task:	
  1738                           
  1739                           ; 1 bytes @ 0x40
  1740  0060                     	ds	4
  1741  0064                     ??_executeTasks:	
  1742                           
  1743                           ; 1 bytes @ 0x44
  1744  0064                     	ds	4
  1745  0068                     executeTasks@i:	
  1746                           
  1747                           ; 1 bytes @ 0x48
  1748  0068                     	ds	1
  1749  0069                     ??_main:	
  1750                           
  1751                           	psect	maintext
  1752  1572                     __pmaintext:	
  1753                           ; 1 bytes @ 0x49
  1754 ;;
  1755 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1756 ;;
  1757 ;; *************** function _main *****************
  1758 ;; Defined at:
  1759 ;;		line 133 in file "position_controller_main.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : B00/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels required when called:    6
  1779 ;; This function calls:
  1780 ;;		_executeTasks
  1781 ;;		_initSys
  1782 ;; This function is called by:
  1783 ;;		Startup code after reset
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _main
  1789  1572                     _main:	
  1790                           
  1791                           ;position_controller_main.c: 134: initSys();
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1795  1572  160A  118A  2569  160A  118A  	fcall	_initSys
  1796                           
  1797                           ;position_controller_main.c: 136: GIE = 1;
  1798  1577  178B               	bsf	11,7	;volatile
  1799  1578                     l3706:	
  1800                           
  1801                           ;position_controller_main.c: 138: executeTasks();
  1802  1578  120A  158A  2283  160A  118A  	fcall	_executeTasks
  1803  157D  2D78               	goto	l3706
  1804  157E                     __end_of_main:	
  1805                           
  1806                           	psect	text1
  1807  1569                     __ptext1:	
  1808 ;; *************** function _initSys *****************
  1809 ;; Defined at:
  1810 ;;		line 124 in file "position_controller_main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    4
  1831 ;; This function calls:
  1832 ;;		_initPic
  1833 ;;		_initTasks
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _initSys
  1841  1569                     _initSys:	
  1842                           
  1843                           ;position_controller_main.c: 125: initPic();
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _initSys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1847  1569  160A  118A  2598  160A  118A  	fcall	_initPic
  1848                           
  1849                           ;position_controller_main.c: 126: initTasks();
  1850  156E  120A  158A  2099   	fcall	_initTasks
  1851  1571  0008               	return
  1852  1572                     __end_of_initSys:	
  1853                           
  1854                           	psect	text2
  1855  0899                     __ptext2:	
  1856 ;; *************** function _initTasks *****************
  1857 ;; Defined at:
  1858 ;;		line 91 in file "tasks.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1872 ;;      Params:         0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0
  1874 ;;      Temps:          0       1       0       0       0
  1875 ;;      Totals:         0       1       0       0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    3
  1879 ;; This function calls:
  1880 ;;		_createTask
  1881 ;;		_mot_init
  1882 ;;		_pid_init
  1883 ;;		_pos_init
  1884 ;;		_pro_init
  1885 ;;		_pro_setMyId
  1886 ;; This function is called by:
  1887 ;;		_initSys
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           
  1892                           ;psect for function _initTasks
  1893  0899                     _initTasks:	
  1894                           
  1895                           ;tasks.c: 93: pos_init();
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _initTasks: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1899  0899  120A  158A  21AC  120A  158A  	fcall	_pos_init
  1900                           
  1901                           ;tasks.c: 94: pid_init();
  1902  089E  160A  118A  2793  120A  158A  	fcall	_pid_init
  1903                           
  1904                           ;tasks.c: 95: mot_init();
  1905  08A3  160A  118A  2612  120A  158A  	fcall	_mot_init
  1906                           
  1907                           ;tasks.c: 96: pro_init();
  1908  08A8  160A  118A  25C7  120A  158A  	fcall	_pro_init
  1909                           
  1910                           ;tasks.c: 97: pro_setMyId('a');
  1911  08AD  3061               	movlw	97
  1912  08AE  160A  118A  2559  120A  158A  	fcall	_pro_setMyId
  1913                           
  1914                           ;tasks.c: 100: createTask(0, &pid_task, 100);
  1915  08B3  3000               	movlw	0
  1916  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  1917  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  1918  08B6  00A4               	movwf	createTask@taskID
  1919  08B7  00A5               	movwf	createTask@taskID+1
  1920  08B8  3004               	movlw	(low (fp__pid_task-fpbase))& (0+255)
  1921  08B9  00AB               	movwf	??_initTasks
  1922  08BA  082B               	movf	??_initTasks,w
  1923  08BB  00A6               	movwf	createTask@t
  1924  08BC  3064               	movlw	100
  1925  08BD  00A7               	movwf	createTask@scheduleInterval
  1926  08BE  3000               	movlw	0
  1927  08BF  00A8               	movwf	createTask@scheduleInterval+1
  1928  08C0  160A  118A  27C8  120A  158A  	fcall	_createTask
  1929                           
  1930                           ;tasks.c: 101: createTask(1, &protocol_task, 1);
  1931  08C5  3001               	movlw	1
  1932  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  1933  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  1934  08C8  00A4               	movwf	createTask@taskID
  1935  08C9  3000               	movlw	0
  1936  08CA  00A5               	movwf	createTask@taskID+1
  1937  08CB  3001               	movlw	(low (fp__protocol_task-fpbase))& (0+255)
  1938  08CC  00AB               	movwf	??_initTasks
  1939  08CD  082B               	movf	??_initTasks,w
  1940  08CE  00A6               	movwf	createTask@t
  1941  08CF  3001               	movlw	1
  1942  08D0  00A7               	movwf	createTask@scheduleInterval
  1943  08D1  3000               	movlw	0
  1944  08D2  00A8               	movwf	createTask@scheduleInterval+1
  1945  08D3  160A  118A  27C8  120A  158A  	fcall	_createTask
  1946                           
  1947                           ;tasks.c: 102: createTask(2, &led_task, 2000);
  1948  08D8  3002               	movlw	2
  1949  08D9  1283               	bcf	3,5	;RP0=0, select bank0
  1950  08DA  1303               	bcf	3,6	;RP1=0, select bank0
  1951  08DB  00A4               	movwf	createTask@taskID
  1952  08DC  3000               	movlw	0
  1953  08DD  00A5               	movwf	createTask@taskID+1
  1954  08DE  3007               	movlw	(low (fp__led_task-fpbase))& (0+255)
  1955  08DF  00AB               	movwf	??_initTasks
  1956  08E0  082B               	movf	??_initTasks,w
  1957  08E1  00A6               	movwf	createTask@t
  1958  08E2  30D0               	movlw	208
  1959  08E3  00A7               	movwf	createTask@scheduleInterval
  1960  08E4  3007               	movlw	7
  1961  08E5  00A8               	movwf	createTask@scheduleInterval+1
  1962  08E6  160A  118A  27C8   	fcall	_createTask
  1963  08E9  0008               	return
  1964  08EA                     __end_of_initTasks:	
  1965                           
  1966                           	psect	text3
  1967  1559                     __ptext3:	
  1968 ;; *************** function _pro_setMyId *****************
  1969 ;; Defined at:
  1970 ;;		line 173 in file "protocol.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  id              1    wreg     unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  id              1    1[BANK0 ] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         0       1       0       0       0
  1986 ;;      Temps:          0       1       0       0       0
  1987 ;;      Totals:         0       2       0       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_initTasks
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _pro_setMyId
  2000  1559                     _pro_setMyId:	
  2001                           
  2002                           ;incstack = 0
  2003                           ; Regs used in _pro_setMyId: [wreg]
  2004                           ;pro_setMyId@id stored from wreg
  2005  1559  1283               	bcf	3,5	;RP0=0, select bank0
  2006  155A  1303               	bcf	3,6	;RP1=0, select bank0
  2007  155B  00A1               	movwf	pro_setMyId@id
  2008                           
  2009                           ;protocol.c: 174: pro_myAddress = id;
  2010  155C  0821               	movf	pro_setMyId@id,w
  2011  155D  00A0               	movwf	??_pro_setMyId
  2012  155E  0820               	movf	??_pro_setMyId,w
  2013  155F  00F9               	movwf	_pro_myAddress
  2014  1560  0008               	return
  2015  1561                     __end_of_pro_setMyId:	
  2016                           
  2017                           	psect	text4
  2018  15C7                     __ptext4:	
  2019 ;; *************** function _pro_init *****************
  2020 ;; Defined at:
  2021 ;;		line 162 in file "protocol.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0
  2038 ;;      Totals:         0       0       0       0       0
  2039 ;;Total ram usage:        0 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		_cleanupBuffer
  2044 ;;		_serial_setup
  2045 ;; This function is called by:
  2046 ;;		_initTasks
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           
  2051                           ;psect for function _pro_init
  2052  15C7                     _pro_init:	
  2053                           
  2054                           ;protocol.c: 163: pro_status = 0;
  2055                           
  2056                           ;incstack = 0
  2057                           ; Regs used in _pro_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2058  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  2059  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  2060  15C9  01EC               	clrf	_pro_status
  2061                           
  2062                           ;protocol.c: 164: pro_ptr = 0;
  2063  15CA  01F8               	clrf	_pro_ptr
  2064                           
  2065                           ;protocol.c: 165: completeMessage.messageType = 0;
  2066  15CB  1683               	bsf	3,5	;RP0=1, select bank3
  2067  15CC  1703               	bsf	3,6	;RP1=1, select bank3
  2068  15CD  01B2               	clrf	_completeMessage^(0+384)
  2069                           
  2070                           ;protocol.c: 166: cleanupBuffer();
  2071  15CE  160A  118A  25FD  160A  118A  	fcall	_cleanupBuffer
  2072                           
  2073                           ;protocol.c: 167: serial_setup();
  2074  15D3  160A  118A  263E   	fcall	_serial_setup
  2075  15D6  0008               	return
  2076  15D7                     __end_of_pro_init:	
  2077                           
  2078                           	psect	text5
  2079  163E                     __ptext5:	
  2080 ;; *************** function _serial_setup *****************
  2081 ;; Defined at:
  2082 ;;		line 28 in file "serial.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0
  2099 ;;      Totals:         0       0       0       0       0
  2100 ;;Total ram usage:        0 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_pro_init
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _serial_setup
  2112  163E                     _serial_setup:	
  2113                           
  2114                           ;serial.c: 65: SPBRG=((20000000/(16UL * 19200) -1));
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _serial_setup: [wreg]
  2118  163E  3040               	movlw	64
  2119  163F  1683               	bsf	3,5	;RP0=1, select bank1
  2120  1640  1303               	bcf	3,6	;RP1=0, select bank1
  2121  1641  0099               	movwf	25	;volatile
  2122                           
  2123                           ;serial.c: 66: BRGH=1;
  2124  1642  1518               	bsf	24,2	;volatile
  2125                           
  2126                           ;serial.c: 67: SYNC=0;
  2127  1643  1218               	bcf	24,4	;volatile
  2128                           
  2129                           ;serial.c: 68: SPEN=1;
  2130  1644  1283               	bcf	3,5	;RP0=0, select bank0
  2131  1645  1303               	bcf	3,6	;RP1=0, select bank0
  2132  1646  1798               	bsf	24,7	;volatile
  2133                           
  2134                           ;serial.c: 69: CREN=1;
  2135  1647  1618               	bsf	24,4	;volatile
  2136                           
  2137                           ;serial.c: 70: SREN=0;
  2138  1648  1298               	bcf	24,5	;volatile
  2139                           
  2140                           ;serial.c: 71: TXIE=0;
  2141  1649  1683               	bsf	3,5	;RP0=1, select bank1
  2142  164A  1303               	bcf	3,6	;RP1=0, select bank1
  2143  164B  120C               	bcf	12,4	;volatile
  2144                           
  2145                           ;serial.c: 72: RCIE=0;
  2146  164C  128C               	bcf	12,5	;volatile
  2147                           
  2148                           ;serial.c: 73: TX9=0;
  2149  164D  1318               	bcf	24,6	;volatile
  2150                           
  2151                           ;serial.c: 74: RX9=0;
  2152  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2153  164F  1303               	bcf	3,6	;RP1=0, select bank0
  2154  1650  1318               	bcf	24,6	;volatile
  2155                           
  2156                           ;serial.c: 75: TXEN=0;
  2157  1651  1683               	bsf	3,5	;RP0=1, select bank1
  2158  1652  1303               	bcf	3,6	;RP1=0, select bank1
  2159  1653  1298               	bcf	24,5	;volatile
  2160                           
  2161                           ;serial.c: 76: TXEN=1;
  2162  1654  1698               	bsf	24,5	;volatile
  2163  1655  0008               	return
  2164  1656                     __end_of_serial_setup:	
  2165                           
  2166                           	psect	text6
  2167  09AC                     __ptext6:	
  2168 ;; *************** function _pos_init *****************
  2169 ;; Defined at:
  2170 ;;		line 28 in file "position_sensor_implementation.h"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  j               1    4[BANK0 ] unsigned char 
  2175 ;;  i               1    3[BANK0 ] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         0       0       0       0       0
  2186 ;;      Locals:         0       2       0       0       0
  2187 ;;      Temps:          0       3       0       0       0
  2188 ;;      Totals:         0       5       0       0       0
  2189 ;;Total ram usage:        5 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    1
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_initTasks
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           
  2200                           ;psect for function _pos_init
  2201  09AC                     _pos_init:	
  2202                           
  2203                           ;position_sensor_implementation.h: 29: unsigned char i, j;;position_sensor_implementatio
      +                          n.h: 31: pos_currentPosition = 0;
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _pos_init: [wreg-fsr0h+status,2+status,0]
  2207  09AC  1683               	bsf	3,5	;RP0=1, select bank1
  2208  09AD  1303               	bcf	3,6	;RP1=0, select bank1
  2209  09AE  01D4               	clrf	_pos_currentPosition^(0+128)	;volatile
  2210  09AF  01D5               	clrf	(_pos_currentPosition+1)^(0+128)	;volatile
  2211                           
  2212                           ;position_sensor_implementation.h: 32: pos_previousEncoder = 0;
  2213  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  2214  09B1  1303               	bcf	3,6	;RP1=0, select bank0
  2215  09B2  01ED               	clrf	_pos_previousEncoder	;volatile
  2216                           
  2217                           ;position_sensor_implementation.h: 33: for (i=0; i<4; i++)
  2218  09B3  01A3               	clrf	pos_init@i
  2219  09B4                     l3316:	
  2220                           
  2221                           ;position_sensor_implementation.h: 34: for(j=0; j<4; j++)
  2222  09B4  01A4               	clrf	pos_init@j
  2223  09B5                     l3322:	
  2224                           
  2225                           ;position_sensor_implementation.h: 35: encoderStates[i][j] = 0;
  2226  09B5  0823               	movf	pos_init@i,w
  2227  09B6  00A0               	movwf	??_pos_init
  2228  09B7  3002               	movlw	2
  2229  09B8                     u4015:	
  2230  09B8  1003               	clrc
  2231  09B9  0DA0               	rlf	??_pos_init,f
  2232  09BA  3EFF               	addlw	-1
  2233  09BB  1D03               	skipz
  2234  09BC  29B8               	goto	u4015
  2235  09BD  30A0               	movlw	(low (_encoderStates| 0))& (0+255)
  2236  09BE  0720               	addwf	??_pos_init,w
  2237  09BF  00A1               	movwf	??_pos_init+1
  2238  09C0  0824               	movf	pos_init@j,w
  2239  09C1  0721               	addwf	??_pos_init+1,w
  2240  09C2  00A2               	movwf	??_pos_init+2
  2241  09C3  0822               	movf	??_pos_init+2,w
  2242  09C4  0084               	movwf	4
  2243  09C5  1383               	bcf	3,7	;select IRP bank1
  2244  09C6  0180               	clrf	0
  2245  09C7  3001               	movlw	1
  2246  09C8  00A0               	movwf	??_pos_init
  2247  09C9  0820               	movf	??_pos_init,w
  2248  09CA  07A4               	addwf	pos_init@j,f
  2249  09CB  3004               	movlw	4
  2250  09CC  0224               	subwf	pos_init@j,w
  2251  09CD  1C03               	skipc
  2252  09CE  29B5               	goto	l3322
  2253  09CF  3001               	movlw	1
  2254  09D0  00A0               	movwf	??_pos_init
  2255  09D1  0820               	movf	??_pos_init,w
  2256  09D2  07A3               	addwf	pos_init@i,f
  2257  09D3  3004               	movlw	4
  2258  09D4  0223               	subwf	pos_init@i,w
  2259  09D5  1C03               	skipc
  2260  09D6  29B4               	goto	l3316
  2261                           
  2262                           ;position_sensor_implementation.h: 37: encoderStates[0][1] = 1;
  2263  09D7  3001               	movlw	1
  2264  09D8  00A0               	movwf	??_pos_init
  2265  09D9  0820               	movf	??_pos_init,w
  2266  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  2267  09DB  1303               	bcf	3,6	;RP1=0, select bank1
  2268  09DC  00A1               	movwf	(_encoderStates^(0+128)+1)	;volatile
  2269                           
  2270                           ;position_sensor_implementation.h: 38: encoderStates[1][3] = 1;
  2271  09DD  3001               	movlw	1
  2272  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  2273  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  2274  09E0  00A0               	movwf	??_pos_init
  2275  09E1  0820               	movf	??_pos_init,w
  2276  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  2277  09E3  1303               	bcf	3,6	;RP1=0, select bank1
  2278  09E4  00A7               	movwf	(_encoderStates^(0+128)+7)	;volatile
  2279                           
  2280                           ;position_sensor_implementation.h: 39: encoderStates[3][2] = 1;
  2281  09E5  3001               	movlw	1
  2282  09E6  1283               	bcf	3,5	;RP0=0, select bank0
  2283  09E7  1303               	bcf	3,6	;RP1=0, select bank0
  2284  09E8  00A0               	movwf	??_pos_init
  2285  09E9  0820               	movf	??_pos_init,w
  2286  09EA  1683               	bsf	3,5	;RP0=1, select bank1
  2287  09EB  1303               	bcf	3,6	;RP1=0, select bank1
  2288  09EC  00AE               	movwf	(_encoderStates^(0+128)+14)	;volatile
  2289                           
  2290                           ;position_sensor_implementation.h: 40: encoderStates[2][0] = 1;
  2291  09ED  3001               	movlw	1
  2292  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  2293  09EF  1303               	bcf	3,6	;RP1=0, select bank0
  2294  09F0  00A0               	movwf	??_pos_init
  2295  09F1  0820               	movf	??_pos_init,w
  2296  09F2  1683               	bsf	3,5	;RP0=1, select bank1
  2297  09F3  1303               	bcf	3,6	;RP1=0, select bank1
  2298  09F4  00A8               	movwf	(_encoderStates^(0+128)+8)	;volatile
  2299                           
  2300                           ;position_sensor_implementation.h: 43: encoderStates[2][3] = menos1;
  2301  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  2302  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  2303  09F7  086E               	movf	_menos1,w	;volatile
  2304  09F8  00A0               	movwf	??_pos_init
  2305  09F9  0820               	movf	??_pos_init,w
  2306  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  2307  09FB  1303               	bcf	3,6	;RP1=0, select bank1
  2308  09FC  00AB               	movwf	(_encoderStates^(0+128)+11)	;volatile
  2309                           
  2310                           ;position_sensor_implementation.h: 44: encoderStates[3][1] = menos1;
  2311  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  2312  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  2313  09FF  086E               	movf	_menos1,w	;volatile
  2314  0A00  00A0               	movwf	??_pos_init
  2315  0A01  0820               	movf	??_pos_init,w
  2316  0A02  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0A03  1303               	bcf	3,6	;RP1=0, select bank1
  2318  0A04  00AD               	movwf	(_encoderStates^(0+128)+13)	;volatile
  2319                           
  2320                           ;position_sensor_implementation.h: 45: encoderStates[1][0] = menos1;
  2321  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0A06  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0A07  086E               	movf	_menos1,w	;volatile
  2324  0A08  00A0               	movwf	??_pos_init
  2325  0A09  0820               	movf	??_pos_init,w
  2326  0A0A  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0A0B  1303               	bcf	3,6	;RP1=0, select bank1
  2328  0A0C  00A4               	movwf	(_encoderStates^(0+128)+4)	;volatile
  2329                           
  2330                           ;position_sensor_implementation.h: 46: encoderStates[0][2] = menos1;
  2331  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0A0F  086E               	movf	_menos1,w	;volatile
  2334  0A10  00A0               	movwf	??_pos_init
  2335  0A11  0820               	movf	??_pos_init,w
  2336  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0A13  1303               	bcf	3,6	;RP1=0, select bank1
  2338  0A14  00A2               	movwf	(_encoderStates^(0+128)+2)	;volatile
  2339  0A15  0008               	return
  2340  0A16                     __end_of_pos_init:	
  2341                           
  2342                           	psect	text7
  2343  1793                     __ptext7:	
  2344 ;; *************** function _pid_init *****************
  2345 ;; Defined at:
  2346 ;;		line 87 in file "pid.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_initTasks
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _pid_init
  2376  1793                     _pid_init:	
  2377                           
  2378                           ;pid.c: 88: integralError = 0.0;
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _pid_init: [wreg]
  2382  1793  3000               	movlw	0
  2383  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2384  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2385  1796  00C7               	movwf	(_integralError+3)^(0+128)
  2386  1797  3000               	movlw	0
  2387  1798  00C6               	movwf	(_integralError+2)^(0+128)
  2388  1799  3000               	movlw	0
  2389  179A  00C5               	movwf	(_integralError+1)^(0+128)
  2390  179B  3000               	movlw	0
  2391  179C  00C4               	movwf	_integralError^(0+128)
  2392                           
  2393                           ;pid.c: 89: previousError = 0.0;
  2394  179D  3000               	movlw	0
  2395  179E  00C3               	movwf	(_previousError+3)^(0+128)
  2396  179F  3000               	movlw	0
  2397  17A0  00C2               	movwf	(_previousError+2)^(0+128)
  2398  17A1  3000               	movlw	0
  2399  17A2  00C1               	movwf	(_previousError+1)^(0+128)
  2400  17A3  3000               	movlw	0
  2401  17A4  00C0               	movwf	_previousError^(0+128)
  2402                           
  2403                           ;pid.c: 90: currentPosition = 0;
  2404  17A5  3000               	movlw	0
  2405  17A6  00CF               	movwf	(_currentPosition+3)^(0+128)
  2406  17A7  3000               	movlw	0
  2407  17A8  00CE               	movwf	(_currentPosition+2)^(0+128)
  2408  17A9  3000               	movlw	0
  2409  17AA  00CD               	movwf	(_currentPosition+1)^(0+128)
  2410  17AB  3000               	movlw	0
  2411  17AC  00CC               	movwf	_currentPosition^(0+128)
  2412                           
  2413                           ;pid.c: 91: kProportional = 1.0;
  2414  17AD  303F               	movlw	63
  2415  17AE  00BF               	movwf	(_kProportional+3)^(0+128)
  2416  17AF  3080               	movlw	128
  2417  17B0  00BE               	movwf	(_kProportional+2)^(0+128)
  2418  17B1  3000               	movlw	0
  2419  17B2  00BD               	movwf	(_kProportional+1)^(0+128)
  2420  17B3  3000               	movlw	0
  2421  17B4  00BC               	movwf	_kProportional^(0+128)
  2422                           
  2423                           ;pid.c: 92: kDerivative = 0.0;
  2424  17B5  3000               	movlw	0
  2425  17B6  1683               	bsf	3,5	;RP0=1, select bank3
  2426  17B7  1703               	bsf	3,6	;RP1=1, select bank3
  2427  17B8  00BD               	movwf	(_kDerivative+3)^(0+384)
  2428  17B9  3000               	movlw	0
  2429  17BA  00BC               	movwf	(_kDerivative+2)^(0+384)
  2430  17BB  3000               	movlw	0
  2431  17BC  00BB               	movwf	(_kDerivative+1)^(0+384)
  2432  17BD  3000               	movlw	0
  2433  17BE  00BA               	movwf	_kDerivative^(0+384)
  2434                           
  2435                           ;pid.c: 93: kIntegral = 0.0;
  2436  17BF  3000               	movlw	0
  2437  17C0  00C1               	movwf	(_kIntegral+3)^(0+384)
  2438  17C1  3000               	movlw	0
  2439  17C2  00C0               	movwf	(_kIntegral+2)^(0+384)
  2440  17C3  3000               	movlw	0
  2441  17C4  00BF               	movwf	(_kIntegral+1)^(0+384)
  2442  17C5  3000               	movlw	0
  2443  17C6  00BE               	movwf	_kIntegral^(0+384)
  2444  17C7  0008               	return
  2445  17C8                     __end_of_pid_init:	
  2446                           
  2447                           	psect	text8
  2448  1612                     __ptext8:	
  2449 ;; *************** function _mot_init *****************
  2450 ;; Defined at:
  2451 ;;		line 34 in file "motor.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    2
  2472 ;; This function calls:
  2473 ;;		_mot_setExcitation
  2474 ;; This function is called by:
  2475 ;;		_initTasks
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _mot_init
  2481  1612                     _mot_init:	
  2482                           
  2483                           ;motor.c: 35: PR2=249;
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in _mot_init: [wreg+status,2+status,0+pclath+cstack]
  2487  1612  30F9               	movlw	249
  2488  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2489  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2490  1615  0092               	movwf	18	;volatile
  2491                           
  2492                           ;motor.c: 36: CCPR1L = 0b00000000;
  2493  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2494  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2495  1618  0195               	clrf	21	;volatile
  2496                           
  2497                           ;motor.c: 37: CCP1CON = 0b00001100;
  2498  1619  300C               	movlw	12
  2499  161A  0097               	movwf	23	;volatile
  2500                           
  2501                           ;motor.c: 38: CCPR2L = 0b00000000;
  2502  161B  019B               	clrf	27	;volatile
  2503                           
  2504                           ;motor.c: 39: CCP2CON = 0b00001100;
  2505  161C  300C               	movlw	12
  2506  161D  009D               	movwf	29	;volatile
  2507                           
  2508                           ;motor.c: 40: T2CON = 4;
  2509  161E  3004               	movlw	4
  2510  161F  0092               	movwf	18	;volatile
  2511                           
  2512                           ;motor.c: 41: mot_setExcitation(0);
  2513  1620  3000               	movlw	0
  2514  1621  00A0               	movwf	mot_setExcitation@excitation
  2515  1622  00A1               	movwf	mot_setExcitation@excitation+1
  2516  1623  120A  158A  20EA   	fcall	_mot_setExcitation
  2517  1626  0008               	return
  2518  1627                     __end_of_mot_init:	
  2519                           
  2520                           	psect	text9
  2521  17C8                     __ptext9:	
  2522 ;; *************** function _createTask *****************
  2523 ;; Defined at:
  2524 ;;		line 26 in file "multitasking_implementation.h"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  taskID          2    4[BANK0 ] int 
  2527 ;;  t               1    6[BANK0 ] PTR FTN()void 
  2528 ;;		 -> led_task(1), protocol_task(1), pid_task(1), 
  2529 ;;  scheduleInte    2    7[BANK0 ] int 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2541 ;;      Params:         0       5       0       0       0
  2542 ;;      Locals:         0       0       0       0       0
  2543 ;;      Temps:          0       2       0       0       0
  2544 ;;      Totals:         0       7       0       0       0
  2545 ;;Total ram usage:        7 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    2
  2548 ;; This function calls:
  2549 ;;		___bmul
  2550 ;; This function is called by:
  2551 ;;		_initTasks
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           
  2556                           ;psect for function _createTask
  2557  17C8                     _createTask:	
  2558                           
  2559                           ;multitasking_implementation.h: 27: tsk_tasks[taskID].taskFunction = t;
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _createTask: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2563  17C8  1283               	bcf	3,5	;RP0=0, select bank0
  2564  17C9  1303               	bcf	3,6	;RP1=0, select bank0
  2565  17CA  0826               	movf	createTask@t,w
  2566  17CB  00A9               	movwf	??_createTask
  2567  17CC  3005               	movlw	5
  2568  17CD  00AA               	movwf	??_createTask+1
  2569  17CE  082A               	movf	??_createTask+1,w
  2570  17CF  00A0               	movwf	___bmul@multiplicand
  2571  17D0  0824               	movf	createTask@taskID,w
  2572  17D1  160A  118A  25D7  160A  118A  	fcall	___bmul
  2573  17D6  3E90               	addlw	(low (_tsk_tasks| (0+256)))& (0+255)
  2574  17D7  0084               	movwf	4
  2575  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2576  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2577  17DA  0829               	movf	??_createTask,w
  2578  17DB  1783               	bsf	3,7	;select IRP bank3
  2579  17DC  0080               	movwf	0
  2580                           
  2581                           ;multitasking_implementation.h: 28: tsk_tasks[taskID].scheduleInterval = scheduleInterva
      +                          l;
  2582  17DD  3005               	movlw	5
  2583  17DE  00A9               	movwf	??_createTask
  2584  17DF  0829               	movf	??_createTask,w
  2585  17E0  00A0               	movwf	___bmul@multiplicand
  2586  17E1  0824               	movf	createTask@taskID,w
  2587  17E2  160A  118A  25D7  160A  118A  	fcall	___bmul
  2588  17E7  3E91               	addlw	(low ((_tsk_tasks| (0+256)+1)))& (0+255)
  2589  17E8  0084               	movwf	4
  2590  17E9  1283               	bcf	3,5	;RP0=0, select bank0
  2591  17EA  1303               	bcf	3,6	;RP1=0, select bank0
  2592  17EB  0827               	movf	createTask@scheduleInterval,w
  2593  17EC  1783               	bsf	3,7	;select IRP bank3
  2594  17ED  0080               	movwf	0
  2595  17EE  0A84               	incf	4,f
  2596  17EF  0828               	movf	createTask@scheduleInterval+1,w
  2597  17F0  0080               	movwf	0
  2598                           
  2599                           ;multitasking_implementation.h: 29: tsk_tasks[taskID].lastActivation = 0;
  2600  17F1  3005               	movlw	5
  2601  17F2  00A9               	movwf	??_createTask
  2602  17F3  0829               	movf	??_createTask,w
  2603  17F4  00A0               	movwf	___bmul@multiplicand
  2604  17F5  0824               	movf	createTask@taskID,w
  2605  17F6  160A  118A  25D7   	fcall	___bmul
  2606  17F9  3E93               	addlw	(low ((_tsk_tasks| (0+256)+3)))& (0+255)
  2607  17FA  0084               	movwf	4
  2608  17FB  1783               	bsf	3,7	;select IRP bank3
  2609  17FC  0180               	clrf	0
  2610  17FD  0A84               	incf	4,f
  2611  17FE  0180               	clrf	0
  2612  17FF  0008               	return
  2613  1800                     __end_of_createTask:	
  2614                           
  2615                           	psect	text10
  2616  1598                     __ptext10:	
  2617 ;; *************** function _initPic *****************
  2618 ;; Defined at:
  2619 ;;		line 64 in file "position_controller_main.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_initSys
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _initPic
  2649  1598                     _initPic:	
  2650                           
  2651                           ;position_controller_main.c: 65: TRISB = 0x00;
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _initPic: [wreg+status,2]
  2655  1598  1683               	bsf	3,5	;RP0=1, select bank1
  2656  1599  1303               	bcf	3,6	;RP1=0, select bank1
  2657  159A  0186               	clrf	6	;volatile
  2658                           
  2659                           ;position_controller_main.c: 67: TRISC = 0b10011000;
  2660  159B  3098               	movlw	152
  2661  159C  0087               	movwf	7	;volatile
  2662                           
  2663                           ;position_controller_main.c: 75: TMR0 = (0xff - 52);
  2664  159D  30CB               	movlw	203
  2665  159E  1283               	bcf	3,5	;RP0=0, select bank0
  2666  159F  1303               	bcf	3,6	;RP1=0, select bank0
  2667  15A0  0081               	movwf	1	;volatile
  2668                           
  2669                           ;position_controller_main.c: 76: OPTION_REG = 0b11000001;
  2670  15A1  30C1               	movlw	193
  2671  15A2  1683               	bsf	3,5	;RP0=1, select bank1
  2672  15A3  1303               	bcf	3,6	;RP1=0, select bank1
  2673  15A4  0081               	movwf	1	;volatile
  2674                           
  2675                           ;position_controller_main.c: 77: T0IE = 1;
  2676  15A5  168B               	bsf	11,5	;volatile
  2677  15A6  0008               	return
  2678  15A7                     __end_of_initPic:	
  2679                           
  2680                           	psect	text11
  2681  0A83                     __ptext11:	
  2682 ;; *************** function _executeTasks *****************
  2683 ;; Defined at:
  2684 ;;		line 32 in file "multitasking_implementation.h"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  i               1   72[BANK0 ] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       1       0       0       0
  2700 ;;      Temps:          0       4       0       0       0
  2701 ;;      Totals:         0       5       0       0       0
  2702 ;;Total ram usage:        5 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    5
  2705 ;; This function calls:
  2706 ;;		Absolute function
  2707 ;;		___bmul
  2708 ;;		_led_task
  2709 ;;		_pid_task
  2710 ;;		_protocol_task
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _executeTasks
  2718  0A83                     _executeTasks:	
  2719                           
  2720                           ;multitasking_implementation.h: 33: unsigned char i;;multitasking_implementation.h: 35: 
      +                          for (i=0; i < 3; i++) {
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _executeTasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2724  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0A85  01E8               	clrf	executeTasks@i
  2727  0A86                     l3526:	
  2728                           
  2729                           ;multitasking_implementation.h: 36: tsk_elapsedTime = tsk_timeStamp - tsk_tasks[i].lastA
      +                          ctivation;
  2730  0A86  3005               	movlw	5
  2731  0A87  00E4               	movwf	??_executeTasks
  2732  0A88  0864               	movf	??_executeTasks,w
  2733  0A89  00A0               	movwf	___bmul@multiplicand
  2734  0A8A  0868               	movf	executeTasks@i,w
  2735  0A8B  160A  118A  25D7  120A  158A  	fcall	___bmul
  2736  0A90  3E93               	addlw	(low ((_tsk_tasks| (0+256)+3)))& (0+255)
  2737  0A91  0084               	movwf	4
  2738  0A92  1783               	bsf	3,7	;select IRP bank3
  2739  0A93  0800               	movf	0,w
  2740  0A94  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0A95  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0A96  00E5               	movwf	??_executeTasks+1
  2743  0A97  0A84               	incf	4,f
  2744  0A98  0800               	movf	0,w
  2745  0A99  00E6               	movwf	??_executeTasks+2
  2746  0A9A  0865               	movf	??_executeTasks+1,w
  2747  0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  2748  0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  2749  0A9D  0252               	subwf	_tsk_timeStamp^(0+128),w	;volatile
  2750  0A9E  00D0               	movwf	_tsk_elapsedTime^(0+128)
  2751  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0AA1  0866               	movf	??_executeTasks+2,w
  2754  0AA2  1C03               	skipc
  2755  0AA3  0A66               	incf	??_executeTasks+2,w
  2756  0AA4  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0AA5  1303               	bcf	3,6	;RP1=0, select bank1
  2758  0AA6  0253               	subwf	(_tsk_timeStamp+1)^(0+128),w	;volatile
  2759  0AA7  00D1               	movwf	(_tsk_elapsedTime+1)^(0+128)
  2760                           
  2761                           ;multitasking_implementation.h: 37: if (tsk_elapsedTime > tsk_tasks[i].scheduleInterval)
      +                           {
  2762  0AA8  3005               	movlw	5
  2763  0AA9  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0AAA  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0AAB  00E4               	movwf	??_executeTasks
  2766  0AAC  0864               	movf	??_executeTasks,w
  2767  0AAD  00A0               	movwf	___bmul@multiplicand
  2768  0AAE  0868               	movf	executeTasks@i,w
  2769  0AAF  160A  118A  25D7  120A  158A  	fcall	___bmul
  2770  0AB4  3E91               	addlw	(low ((_tsk_tasks| (0+256)+1)))& (0+255)
  2771  0AB5  0084               	movwf	4
  2772  0AB6  1783               	bsf	3,7	;select IRP bank3
  2773  0AB7  0800               	movf	0,w
  2774  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0ABA  00E5               	movwf	??_executeTasks+1
  2777  0ABB  0A84               	incf	4,f
  2778  0ABC  0800               	movf	0,w
  2779  0ABD  00E6               	movwf	??_executeTasks+2
  2780  0ABE  0866               	movf	??_executeTasks+2,w
  2781  0ABF  3A80               	xorlw	128
  2782  0AC0  00E7               	movwf	??_executeTasks+3
  2783  0AC1  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0AC2  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0AC3  0851               	movf	(_tsk_elapsedTime+1)^(0+128),w
  2786  0AC4  3A80               	xorlw	128
  2787  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0AC7  0267               	subwf	??_executeTasks+3,w
  2790  0AC8  1D03               	skipz
  2791  0AC9  2AD0               	goto	u4265
  2792  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0ACB  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0ACC  0850               	movf	_tsk_elapsedTime^(0+128),w
  2795  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2796  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  2797  0ACF  0265               	subwf	??_executeTasks+1,w
  2798  0AD0                     u4265:	
  2799  0AD0  1803               	skipnc
  2800  0AD1  2B05               	goto	l3534
  2801                           
  2802                           ;multitasking_implementation.h: 38: tsk_task = tsk_tasks[i].taskFunction;
  2803  0AD2  3005               	movlw	5
  2804  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0AD4  1303               	bcf	3,6	;RP1=0, select bank0
  2806  0AD5  00E4               	movwf	??_executeTasks
  2807  0AD6  0864               	movf	??_executeTasks,w
  2808  0AD7  00A0               	movwf	___bmul@multiplicand
  2809  0AD8  0868               	movf	executeTasks@i,w
  2810  0AD9  160A  118A  25D7  120A  158A  	fcall	___bmul
  2811  0ADE  3E90               	addlw	(low (_tsk_tasks| (0+256)))& (0+255)
  2812  0ADF  0084               	movwf	4
  2813  0AE0  1783               	bsf	3,7	;select IRP bank3
  2814  0AE1  0800               	movf	0,w
  2815  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0AE4  00E5               	movwf	??_executeTasks+1
  2818  0AE5  0865               	movf	??_executeTasks+1,w
  2819  0AE6  1683               	bsf	3,5	;RP0=1, select bank1
  2820  0AE7  1303               	bcf	3,6	;RP1=0, select bank1
  2821  0AE8  00D9               	movwf	_tsk_task^(0+128)
  2822                           
  2823                           ;multitasking_implementation.h: 39: tsk_task();
  2824  0AE9  0859               	movf	_tsk_task^(0+128),w
  2825  0AEA  120A  118A  203C  120A  158A  	fcall	fptable
  2826                           
  2827                           ;multitasking_implementation.h: 40: tsk_tasks[i].lastActivation = tsk_timeStamp;
  2828  0AEF  3005               	movlw	5
  2829  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2831  0AF2  00E4               	movwf	??_executeTasks
  2832  0AF3  0864               	movf	??_executeTasks,w
  2833  0AF4  00A0               	movwf	___bmul@multiplicand
  2834  0AF5  0868               	movf	executeTasks@i,w
  2835  0AF6  160A  118A  25D7  120A  158A  	fcall	___bmul
  2836  0AFB  3E93               	addlw	(low ((_tsk_tasks| (0+256)+3)))& (0+255)
  2837  0AFC  0084               	movwf	4
  2838  0AFD  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0AFF  0852               	movf	_tsk_timeStamp^(0+128),w	;volatile
  2841  0B00  1783               	bsf	3,7	;select IRP bank3
  2842  0B01  0080               	movwf	0
  2843  0B02  0A84               	incf	4,f
  2844  0B03  0853               	movf	(_tsk_timeStamp+1)^(0+128),w	;volatile
  2845  0B04  0080               	movwf	0
  2846  0B05                     l3534:	
  2847  0B05  3001               	movlw	1
  2848  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  2849  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  2850  0B08  00E4               	movwf	??_executeTasks
  2851  0B09  0864               	movf	??_executeTasks,w
  2852  0B0A  07E8               	addwf	executeTasks@i,f
  2853  0B0B  3003               	movlw	3
  2854  0B0C  0268               	subwf	executeTasks@i,w
  2855  0B0D  1803               	btfsc	3,0
  2856  0B0E  0008               	return
  2857  0B0F  2A86               	goto	l3526
  2858  0B10                     __end_of_executeTasks:	
  2859                           
  2860                           	psect	text12
  2861  15B7                     __ptext12:	
  2862 ;; *************** function _led_task *****************
  2863 ;; Defined at:
  2864 ;;		line 77 in file "tasks.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2878 ;;      Params:         0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0
  2881 ;;      Totals:         0       0       0       0       0
  2882 ;;Total ram usage:        0 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    1
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_initTasks
  2889 ;;		_executeTasks
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _led_task
  2895  15B7                     _led_task:	
  2896                           
  2897                           ;tasks.c: 78: if (led_status) {
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _led_task: [wreg+status,2+status,0]
  2901  15B7  1683               	bsf	3,5	;RP0=1, select bank1
  2902  15B8  1303               	bcf	3,6	;RP1=0, select bank1
  2903  15B9  0857               	movf	_led_status^(0+128),w
  2904  15BA  1903               	btfsc	3,2
  2905  15BB  2DC1               	goto	l469
  2906                           
  2907                           ;tasks.c: 79: led_status = 0;
  2908  15BC  01D7               	clrf	_led_status^(0+128)
  2909                           
  2910                           ;tasks.c: 80: RB5 = 0;
  2911  15BD  1283               	bcf	3,5	;RP0=0, select bank0
  2912  15BE  1303               	bcf	3,6	;RP1=0, select bank0
  2913  15BF  1286               	bcf	6,5	;volatile
  2914                           
  2915                           ;tasks.c: 81: } else {
  2916  15C0  0008               	return
  2917  15C1                     l469:	
  2918                           
  2919                           ;tasks.c: 82: led_status = 1;
  2920  15C1  01D7               	clrf	_led_status^(0+128)
  2921  15C2  0AD7               	incf	_led_status^(0+128),f
  2922                           
  2923                           ;tasks.c: 83: RB5 = 1;
  2924  15C3  1283               	bcf	3,5	;RP0=0, select bank0
  2925  15C4  1303               	bcf	3,6	;RP1=0, select bank0
  2926  15C5  1686               	bsf	6,5	;volatile
  2927  15C6  0008               	return
  2928  15C7                     __end_of_led_task:	
  2929                           
  2930                           	psect	text13
  2931  07FA                     __ptext13:	
  2932 ;; *************** function _pid_task *****************
  2933 ;; Defined at:
  2934 ;;		line 34 in file "tasks.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    4
  2955 ;; This function calls:
  2956 ;;		_pid_pid
  2957 ;; This function is called by:
  2958 ;;		_initTasks
  2959 ;;		_executeTasks
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _pid_task
  2965  07FA                     _pid_task:	
  2966                           
  2967                           ;tasks.c: 35: pid_pid();
  2968                           
  2969                           ;incstack = 0
  2970                           ; Regs used in _pid_task: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2971  07FA  120A  158A  2543   	fcall	_pid_pid
  2972  07FD  0008               	return
  2973  07FE                     __end_of_pid_task:	
  2974                           
  2975                           	psect	text14
  2976  0C6D                     __ptext14:	
  2977 ;; *************** function _protocol_task *****************
  2978 ;; Defined at:
  2979 ;;		line 44 in file "tasks.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0
  2995 ;;      Temps:          0       4       0       0       0
  2996 ;;      Totals:         0       4       0       0       0
  2997 ;;Total ram usage:        4 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    4
  3000 ;; This function calls:
  3001 ;;		_convertToReal
  3002 ;;		_pid_clearError
  3003 ;;		_pid_setDerivativeGain
  3004 ;;		_pid_setIntegralGain
  3005 ;;		_pid_setPoint
  3006 ;;		_pid_setProportionalGain
  3007 ;;		_pos_setCurrentPosition
  3008 ;;		_pro_getMessage
  3009 ;; This function is called by:
  3010 ;;		_initTasks
  3011 ;;		_executeTasks
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           
  3016                           ;psect for function _protocol_task
  3017  0C6D                     _protocol_task:	
  3018                           
  3019                           ;tasks.c: 46: message = pro_getMessage();
  3020                           
  3021                           ;incstack = 0
  3022                           ; Regs used in _protocol_task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3023  0C6D  120A  158A  23B5  120A  158A  	fcall	_pro_getMessage
  3024  0C72  30D6               	movlw	_message& (0+255)
  3025  0C73  0084               	movwf	4
  3026  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0C76  3024               	movlw	low ?_pro_getMessage
  3029  0C77  00E0               	movwf	??_protocol_task
  3030  0C78  0804               	movf	4,w
  3031  0C79  00E1               	movwf	??_protocol_task+1
  3032  0C7A  3008               	movlw	8
  3033  0C7B  00E2               	movwf	??_protocol_task+2
  3034  0C7C                     u4210:	
  3035  0C7C  0860               	movf	??_protocol_task,w
  3036  0C7D  0084               	movwf	4
  3037  0C7E  1383               	bcf	3,7	;select IRP bank0
  3038  0C7F  0800               	movf	0,w
  3039  0C80  00E3               	movwf	??_protocol_task+3
  3040  0C81  0AE0               	incf	??_protocol_task,f
  3041  0C82  0861               	movf	??_protocol_task+1,w
  3042  0C83  0084               	movwf	4
  3043  0C84  1783               	bsf	3,7	;select IRP bank3
  3044  0C85  0863               	movf	??_protocol_task+3,w
  3045  0C86  0080               	movwf	0
  3046  0C87  0AE1               	incf	??_protocol_task+1,f
  3047  0C88  0BE2               	decfsz	??_protocol_task+2,f
  3048  0C89  2C7C               	goto	u4210
  3049                           
  3050                           ;tasks.c: 47: if (message.messageType != 0) {
  3051  0C8A  1683               	bsf	3,5	;RP0=1, select bank3
  3052  0C8B  1703               	bsf	3,6	;RP1=1, select bank3
  3053  0C8C  0856               	movf	_message^(0+384),w
  3054  0C8D  1903               	btfsc	3,2
  3055  0C8E  2D2C               	goto	l3506
  3056                           
  3057                           ;tasks.c: 48: value = convertToReal(message.value);
  3058  0C8F  30D7               	movlw	(low ((_message| (0+256)+1)))& (0+255)
  3059  0C90  120A  118A  258F  120A  158A  	fcall	_convertToReal
  3060  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0C97  085A               	movf	?_convertToReal+3,w
  3063  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  3064  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  3065  0C9A  00B3               	movwf	(_value+3)^(0+128)
  3066  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0C9D  0859               	movf	?_convertToReal+2,w
  3069  0C9E  1683               	bsf	3,5	;RP0=1, select bank1
  3070  0C9F  1303               	bcf	3,6	;RP1=0, select bank1
  3071  0CA0  00B2               	movwf	(_value+2)^(0+128)
  3072  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0CA3  0858               	movf	?_convertToReal+1,w
  3075  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  3076  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  3077  0CA6  00B1               	movwf	(_value+1)^(0+128)
  3078  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0CA8  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0CA9  0857               	movf	?_convertToReal,w
  3081  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  3082  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  3083  0CAC  00B0               	movwf	_value^(0+128)
  3084  0CAD  2D2C               	goto	l3506
  3085  0CAE                     l3494:	
  3086                           
  3087                           ;tasks.c: 54: pid_setPoint(value);
  3088  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  3089  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  3090  0CB0  0833               	movf	(_value+3)^(0+128),w
  3091  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0CB3  00A3               	movwf	pid_setPoint@position+3
  3094  0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  3095  0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  3096  0CB6  0832               	movf	(_value+2)^(0+128),w
  3097  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0CB9  00A2               	movwf	pid_setPoint@position+2
  3100  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  3101  0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  3102  0CBC  0831               	movf	(_value+1)^(0+128),w
  3103  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0CBF  00A1               	movwf	pid_setPoint@position+1
  3106  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  3108  0CC2  0830               	movf	_value^(0+128),w
  3109  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0CC5  00A0               	movwf	pid_setPoint@position
  3112  0CC6  160A  118A  2688   	fcall	_pid_setPoint
  3113                           
  3114                           ;tasks.c: 55: break;
  3115  0CC9  0008               	return
  3116  0CCA                     l3496:	
  3117                           
  3118                           ;tasks.c: 57: pos_setCurrentPosition(0);
  3119  0CCA  3000               	movlw	0
  3120  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0CCD  00A0               	movwf	pos_setCurrentPosition@pos
  3123  0CCE  00A1               	movwf	pos_setCurrentPosition@pos+1
  3124  0CCF  160A  118A  258B  120A  158A  	fcall	_pos_setCurrentPosition
  3125                           
  3126                           ;tasks.c: 58: pid_clearError();
  3127  0CD4  160A  118A  25EA   	fcall	_pid_clearError
  3128                           
  3129                           ;tasks.c: 59: break;
  3130  0CD7  0008               	return
  3131  0CD8                     l3498:	
  3132                           
  3133                           ;tasks.c: 61: pid_setProportionalGain(value);
  3134  0CD8  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0CD9  1303               	bcf	3,6	;RP1=0, select bank1
  3136  0CDA  0833               	movf	(_value+3)^(0+128),w
  3137  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0CDD  00A3               	movwf	pid_setProportionalGain@gain+3
  3140  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  3141  0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  3142  0CE0  0832               	movf	(_value+2)^(0+128),w
  3143  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0CE3  00A2               	movwf	pid_setProportionalGain@gain+2
  3146  0CE4  1683               	bsf	3,5	;RP0=1, select bank1
  3147  0CE5  1303               	bcf	3,6	;RP1=0, select bank1
  3148  0CE6  0831               	movf	(_value+1)^(0+128),w
  3149  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0CE9  00A1               	movwf	pid_setProportionalGain@gain+1
  3152  0CEA  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0CEB  1303               	bcf	3,6	;RP1=0, select bank1
  3154  0CEC  0830               	movf	_value^(0+128),w
  3155  0CED  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0CEE  1303               	bcf	3,6	;RP1=0, select bank0
  3157  0CEF  00A0               	movwf	pid_setProportionalGain@gain
  3158  0CF0  160A  118A  26A1   	fcall	_pid_setProportionalGain
  3159                           
  3160                           ;tasks.c: 62: break;
  3161  0CF3  0008               	return
  3162  0CF4                     l3500:	
  3163                           
  3164                           ;tasks.c: 64: pid_setIntegralGain(value);
  3165  0CF4  1683               	bsf	3,5	;RP0=1, select bank1
  3166  0CF5  1303               	bcf	3,6	;RP1=0, select bank1
  3167  0CF6  0833               	movf	(_value+3)^(0+128),w
  3168  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0CF9  00A3               	movwf	pid_setIntegralGain@gain+3
  3171  0CFA  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0CFB  1303               	bcf	3,6	;RP1=0, select bank1
  3173  0CFC  0832               	movf	(_value+2)^(0+128),w
  3174  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0CFF  00A2               	movwf	pid_setIntegralGain@gain+2
  3177  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0D01  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0D02  0831               	movf	(_value+1)^(0+128),w
  3180  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0D05  00A1               	movwf	pid_setIntegralGain@gain+1
  3183  0D06  1683               	bsf	3,5	;RP0=1, select bank1
  3184  0D07  1303               	bcf	3,6	;RP1=0, select bank1
  3185  0D08  0830               	movf	_value^(0+128),w
  3186  0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0D0B  00A0               	movwf	pid_setIntegralGain@gain
  3189  0D0C  160A  118A  266F   	fcall	_pid_setIntegralGain
  3190                           
  3191                           ;tasks.c: 65: break;
  3192  0D0F  0008               	return
  3193  0D10                     l3502:	
  3194                           
  3195                           ;tasks.c: 67: pid_setDerivativeGain(value);
  3196  0D10  1683               	bsf	3,5	;RP0=1, select bank1
  3197  0D11  1303               	bcf	3,6	;RP1=0, select bank1
  3198  0D12  0833               	movf	(_value+3)^(0+128),w
  3199  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  3200  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  3201  0D15  00A3               	movwf	pid_setDerivativeGain@gain+3
  3202  0D16  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0D17  1303               	bcf	3,6	;RP1=0, select bank1
  3204  0D18  0832               	movf	(_value+2)^(0+128),w
  3205  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0D1B  00A2               	movwf	pid_setDerivativeGain@gain+2
  3208  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0D1E  0831               	movf	(_value+1)^(0+128),w
  3211  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0D21  00A1               	movwf	pid_setDerivativeGain@gain+1
  3214  0D22  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0D23  1303               	bcf	3,6	;RP1=0, select bank1
  3216  0D24  0830               	movf	_value^(0+128),w
  3217  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  3218  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  3219  0D27  00A0               	movwf	pid_setDerivativeGain@gain
  3220  0D28  160A  118A  2656   	fcall	_pid_setDerivativeGain
  3221                           
  3222                           ;tasks.c: 68: break;
  3223  0D2B  0008               	return
  3224  0D2C                     l3506:	
  3225  0D2C  1683               	bsf	3,5	;RP0=1, select bank3
  3226  0D2D  1703               	bsf	3,6	;RP1=1, select bank3
  3227  0D2E  0856               	movf	_message^(0+384),w
  3228                           
  3229                           ; Switch size 1, requested type "simple"
  3230                           ; Number of cases is 6, Range of values is 0 to 5
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; simple_byte           19    10 (average)
  3234                           ; direct_byte           26     8 (fixed)
  3235                           ; jumptable            260     6 (fixed)
  3236                           ;	Chosen strategy is simple_byte
  3237  0D2F  3A00               	xorlw	0	; case 0
  3238  0D30  1903               	skipnz
  3239  0D31  2D42               	goto	l464
  3240  0D32  3A01               	xorlw	1	; case 1
  3241  0D33  1903               	skipnz
  3242  0D34  2CAE               	goto	l3494
  3243  0D35  3A03               	xorlw	3	; case 2
  3244  0D36  1903               	skipnz
  3245  0D37  2CCA               	goto	l3496
  3246  0D38  3A01               	xorlw	1	; case 3
  3247  0D39  1903               	skipnz
  3248  0D3A  2CD8               	goto	l3498
  3249  0D3B  3A07               	xorlw	7	; case 4
  3250  0D3C  1903               	skipnz
  3251  0D3D  2CF4               	goto	l3500
  3252  0D3E  3A01               	xorlw	1	; case 5
  3253  0D3F  1903               	skipnz
  3254  0D40  2D10               	goto	l3502
  3255  0D41  2D42               	goto	l464
  3256  0D42                     l464:	
  3257  0D42  0008               	return
  3258  0D43                     __end_of_protocol_task:	
  3259                           
  3260                           	psect	text15
  3261  0BB5                     __ptext15:	
  3262 ;; *************** function _pro_getMessage *****************
  3263 ;; Defined at:
  3264 ;;		line 96 in file "protocol.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  i               1   16[BANK0 ] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  8    4[BANK0 ] struct .
  3271 ;; Registers used:
  3272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       8       0       0       0
  3279 ;;      Locals:         0       1       0       0       0
  3280 ;;      Temps:          0       4       0       0       0
  3281 ;;      Totals:         0      13       0       0       0
  3282 ;;Total ram usage:       13 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		_addToIncomingBuffer
  3287 ;;		_chkchr
  3288 ;;		_clear_usart_errors
  3289 ;;		_framingError
  3290 ;;		_isValid
  3291 ;;		_isValidCmd
  3292 ;;		_putch
  3293 ;;		_toMsgType
  3294 ;; This function is called by:
  3295 ;;		_protocol_task
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _pro_getMessage
  3301  0BB5                     _pro_getMessage:	
  3302                           
  3303                           ;protocol.c: 97: unsigned char i;;protocol.c: 98: if (pro_status == 4) {
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _pro_getMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3307  0BB5  3004               	movlw	4
  3308  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0BB8  066C               	xorwf	_pro_status,w
  3311  0BB9  1D03               	btfss	3,2
  3312  0BBA  2C41               	goto	l3344
  3313                           
  3314                           ;protocol.c: 99: pro_status = 0;
  3315  0BBB  01EC               	clrf	_pro_status
  3316                           
  3317                           ;protocol.c: 100: pro_ptr = 0;
  3318  0BBC  01F8               	clrf	_pro_ptr
  3319                           
  3320                           ;protocol.c: 112: switch (pro_status) {
  3321  0BBD  2C28               	goto	l3340
  3322  0BBE                     l3352:	
  3323                           
  3324                           ;protocol.c: 114: if (aChar == ':') {
  3325  0BBE  303A               	movlw	58
  3326  0BBF  066B               	xorwf	_aChar,w
  3327  0BC0  1D03               	btfss	3,2
  3328  0BC1  2BC5               	goto	l3356
  3329                           
  3330                           ;protocol.c: 115: pro_status = 1;
  3331  0BC2  01EC               	clrf	_pro_status
  3332  0BC3  0AEC               	incf	_pro_status,f
  3333                           
  3334                           ;protocol.c: 116: } else {
  3335  0BC4  2C28               	goto	l3340
  3336  0BC5                     l3356:	
  3337                           
  3338                           ;protocol.c: 117: framingError();
  3339  0BC5  160A  118A  2551  120A  158A  	fcall	_framingError
  3340  0BCA  2C28               	goto	l3340
  3341  0BCB                     l3358:	
  3342                           
  3343                           ;protocol.c: 121: if (aChar == pro_myAddress) {
  3344  0BCB  086B               	movf	_aChar,w
  3345  0BCC  0679               	xorwf	_pro_myAddress,w
  3346  0BCD  1D03               	skipz
  3347  0BCE  2BC5               	goto	l3356
  3348                           
  3349                           ;protocol.c: 122: pro_status = 2;
  3350  0BCF  3002               	movlw	2
  3351  0BD0  2C12               	goto	L2
  3352  0BD1                     l3364:	
  3353                           ;protocol.c: 123: } else {
  3354                           
  3355                           
  3356                           ;protocol.c: 128: if (isValidCmd(aChar)) {
  3357  0BD1  086B               	movf	_aChar,w
  3358  0BD2  160A  118A  26BA  120A  158A  	fcall	_isValidCmd
  3359  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  3360  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  3361  0BD9  0820               	movf	?_isValidCmd,w
  3362  0BDA  0421               	iorwf	?_isValidCmd+1,w
  3363  0BDB  1903               	btfsc	3,2
  3364  0BDC  2BC5               	goto	l3356
  3365                           
  3366                           ;protocol.c: 129: addToIncomingBuffer(aChar);
  3367  0BDD  086B               	movf	_aChar,w
  3368  0BDE  160A  118A  25A7  120A  158A  	fcall	_addToIncomingBuffer
  3369                           
  3370                           ;protocol.c: 130: pro_status = 3;
  3371  0BE3  3003               	movlw	3
  3372  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0BE6  2C12               	goto	L2
  3375  0BE7                     l3372:	
  3376                           ;protocol.c: 131: } else {
  3377                           
  3378                           
  3379                           ;protocol.c: 136: if (aChar == ';') {
  3380  0BE7  303B               	movlw	59
  3381  0BE8  066B               	xorwf	_aChar,w
  3382  0BE9  1D03               	btfss	3,2
  3383  0BEA  2C16               	goto	l3390
  3384                           
  3385                           ;protocol.c: 137: completeMessage.messageType = toMsgType(pro_incoming[0]);
  3386  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  3387  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  3388  0BED  0829               	movf	_pro_incoming^(0+384),w
  3389  0BEE  160A  118A  2760  120A  158A  	fcall	_toMsgType
  3390  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0BF5  0820               	movf	?_toMsgType,w
  3393  0BF6  00AC               	movwf	??_pro_getMessage
  3394  0BF7  082C               	movf	??_pro_getMessage,w
  3395  0BF8  1683               	bsf	3,5	;RP0=1, select bank3
  3396  0BF9  1703               	bsf	3,6	;RP1=1, select bank3
  3397  0BFA  00B2               	movwf	_completeMessage^(0+384)
  3398                           
  3399                           ;protocol.c: 138: for (i=0; i< 7-1; i++) {
  3400  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0BFD  01B0               	clrf	pro_getMessage@i
  3403  0BFE                     l3382:	
  3404                           
  3405                           ;protocol.c: 139: completeMessage.value[i] = pro_incoming[i+1];
  3406  0BFE  0830               	movf	pro_getMessage@i,w
  3407  0BFF  3EAA               	addlw	(low ((_pro_incoming| (0+256)+1)))& (0+255)
  3408  0C00  0084               	movwf	4
  3409  0C01  1783               	bsf	3,7	;select IRP bank3
  3410  0C02  0800               	movf	0,w
  3411  0C03  00AC               	movwf	??_pro_getMessage
  3412  0C04  0830               	movf	pro_getMessage@i,w
  3413  0C05  3EB3               	addlw	(low ((_completeMessage| (0+256)+1)))& (0+255)
  3414  0C06  0084               	movwf	4
  3415  0C07  082C               	movf	??_pro_getMessage,w
  3416  0C08  0080               	movwf	0
  3417  0C09  3001               	movlw	1
  3418  0C0A  00AC               	movwf	??_pro_getMessage
  3419  0C0B  082C               	movf	??_pro_getMessage,w
  3420  0C0C  07B0               	addwf	pro_getMessage@i,f
  3421  0C0D  3006               	movlw	6
  3422  0C0E  0230               	subwf	pro_getMessage@i,w
  3423  0C0F  1C03               	skipc
  3424  0C10  2BFE               	goto	l3382
  3425                           
  3426                           ;protocol.c: 140: };protocol.c: 141: pro_status = 4;
  3427  0C11  3004               	movlw	4
  3428  0C12                     L2:	
  3429  0C12  00AC               	movwf	??_pro_getMessage
  3430  0C13  082C               	movf	??_pro_getMessage,w
  3431  0C14  00EC               	movwf	_pro_status
  3432                           
  3433                           ;protocol.c: 142: } else {
  3434  0C15  2C28               	goto	l3340
  3435  0C16                     l3390:	
  3436                           
  3437                           ;protocol.c: 143: if (isValid(aChar)) {
  3438  0C16  086B               	movf	_aChar,w
  3439  0C17  160A  118A  26D9  120A  158A  	fcall	_isValid
  3440  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0C1E  0820               	movf	?_isValid,w
  3443  0C1F  0421               	iorwf	?_isValid+1,w
  3444  0C20  1903               	btfsc	3,2
  3445  0C21  2BC5               	goto	l3356
  3446                           
  3447                           ;protocol.c: 144: addToIncomingBuffer(aChar);
  3448  0C22  086B               	movf	_aChar,w
  3449  0C23  160A  118A  25A7  120A  158A  	fcall	_addToIncomingBuffer
  3450  0C28                     l3340:	
  3451                           ;protocol.c: 145: } else {
  3452                           
  3453                           
  3454                           ;protocol.c: 101: return completeMessage;
  3455  0C28  3024               	movlw	?_pro_getMessage& (0+255)
  3456  0C29  0084               	movwf	4
  3457  0C2A  30B2               	movlw	low _completeMessage
  3458  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0C2D  00AC               	movwf	??_pro_getMessage
  3461  0C2E  0804               	movf	4,w
  3462  0C2F  00AD               	movwf	??_pro_getMessage+1
  3463  0C30  3008               	movlw	8
  3464  0C31  00AE               	movwf	??_pro_getMessage+2
  3465  0C32                     u4050:	
  3466  0C32  082C               	movf	??_pro_getMessage,w
  3467  0C33  0084               	movwf	4
  3468  0C34  1783               	bsf	3,7	;select IRP bank3
  3469  0C35  0800               	movf	0,w
  3470  0C36  00AF               	movwf	??_pro_getMessage+3
  3471  0C37  0AAC               	incf	??_pro_getMessage,f
  3472  0C38  082D               	movf	??_pro_getMessage+1,w
  3473  0C39  0084               	movwf	4
  3474  0C3A  1383               	bcf	3,7	;select IRP bank0
  3475  0C3B  082F               	movf	??_pro_getMessage+3,w
  3476  0C3C  0080               	movwf	0
  3477  0C3D  0AAD               	incf	??_pro_getMessage+1,f
  3478  0C3E  0BAE               	decfsz	??_pro_getMessage+2,f
  3479  0C3F  2C32               	goto	u4050
  3480  0C40  0008               	return
  3481  0C41                     l3344:	
  3482                           
  3483                           ;protocol.c: 102: };protocol.c: 104: completeMessage.messageType = 0;
  3484  0C41  1683               	bsf	3,5	;RP0=1, select bank3
  3485  0C42  1703               	bsf	3,6	;RP1=1, select bank3
  3486  0C43  01B2               	clrf	_completeMessage^(0+384)
  3487                           
  3488                           ;protocol.c: 106: aChar = chkchr();
  3489  0C44  160A  118A  2549  120A  158A  	fcall	_chkchr
  3490  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0C4B  00AC               	movwf	??_pro_getMessage
  3493  0C4C  082C               	movf	??_pro_getMessage,w
  3494  0C4D  00EB               	movwf	_aChar
  3495                           
  3496                           ;protocol.c: 110: if (aChar != 255) {
  3497  0C4E  0A6B               	incf	_aChar,w
  3498  0C4F  1903               	btfsc	3,2
  3499  0C50  2C67               	goto	l3400
  3500                           
  3501                           ;protocol.c: 111: putch(aChar);
  3502  0C51  086B               	movf	_aChar,w
  3503  0C52  160A  118A  26F9  120A  158A  	fcall	_putch
  3504  0C57  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0C58  1303               	bcf	3,6	;RP1=0, select bank0
  3506  0C59  086C               	movf	_pro_status,w
  3507                           
  3508                           ; Switch size 1, requested type "simple"
  3509                           ; Number of cases is 4, Range of values is 0 to 3
  3510                           ; switch strategies available:
  3511                           ; Name         Instructions Cycles
  3512                           ; simple_byte           13     7 (average)
  3513                           ; direct_byte           20     8 (fixed)
  3514                           ; jumptable            260     6 (fixed)
  3515                           ;	Chosen strategy is simple_byte
  3516  0C5A  3A00               	xorlw	0	; case 0
  3517  0C5B  1903               	skipnz
  3518  0C5C  2BBE               	goto	l3352
  3519  0C5D  3A01               	xorlw	1	; case 1
  3520  0C5E  1903               	skipnz
  3521  0C5F  2BCB               	goto	l3358
  3522  0C60  3A03               	xorlw	3	; case 2
  3523  0C61  1903               	skipnz
  3524  0C62  2BD1               	goto	l3364
  3525  0C63  3A01               	xorlw	1	; case 3
  3526  0C64  1903               	skipnz
  3527  0C65  2BE7               	goto	l3372
  3528  0C66  2BC5               	goto	l3356
  3529  0C67                     l3400:	
  3530                           
  3531                           ;protocol.c: 154: clear_usart_errors();
  3532  0C67  160A  118A  2627  120A  158A  	fcall	_clear_usart_errors
  3533  0C6C  2C28               	goto	l3340
  3534  0C6D                     __end_of_pro_getMessage:	
  3535                           
  3536                           	psect	text16
  3537  1760                     __ptext16:	
  3538 ;; *************** function _toMsgType *****************
  3539 ;; Defined at:
  3540 ;;		line 68 in file "protocol.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  aChar           1    wreg     unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  aChar           1    3[BANK0 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2    0[BANK0 ] unsigned short 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         0       3       0       0       0
  3555 ;;      Locals:         0       1       0       0       0
  3556 ;;      Temps:          0       0       0       0       0
  3557 ;;      Totals:         0       4       0       0       0
  3558 ;;Total ram usage:        4 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_pro_getMessage
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           
  3569                           ;psect for function _toMsgType
  3570  1760                     _toMsgType:	
  3571                           
  3572                           ;incstack = 0
  3573                           ; Regs used in _toMsgType: [wreg+status,2+status,0]
  3574                           ;toMsgType@aChar stored from wreg
  3575  1760  1283               	bcf	3,5	;RP0=0, select bank0
  3576  1761  1303               	bcf	3,6	;RP1=0, select bank0
  3577  1762  00A3               	movwf	toMsgType@aChar
  3578                           
  3579                           ;protocol.c: 69: if (aChar == 'p')
  3580  1763  3070               	movlw	112
  3581  1764  0623               	xorwf	toMsgType@aChar,w
  3582  1765  1D03               	btfss	3,2
  3583  1766  2F6C               	goto	l2808
  3584                           
  3585                           ;protocol.c: 70: return 1;
  3586  1767  3001               	movlw	1
  3587  1768  00A0               	movwf	?_toMsgType
  3588  1769  3000               	movlw	0
  3589  176A  00A1               	movwf	?_toMsgType+1
  3590  176B  0008               	return
  3591  176C                     l2808:	
  3592                           
  3593                           ;protocol.c: 71: if (aChar == 'h')
  3594  176C  3068               	movlw	104
  3595  176D  0623               	xorwf	toMsgType@aChar,w
  3596  176E  1D03               	btfss	3,2
  3597  176F  2F75               	goto	l2814
  3598                           
  3599                           ;protocol.c: 72: return 2;
  3600  1770  3002               	movlw	2
  3601  1771  00A0               	movwf	?_toMsgType
  3602  1772  3000               	movlw	0
  3603  1773  00A1               	movwf	?_toMsgType+1
  3604  1774  0008               	return
  3605  1775                     l2814:	
  3606                           
  3607                           ;protocol.c: 73: if (aChar == 'g')
  3608  1775  3067               	movlw	103
  3609  1776  0623               	xorwf	toMsgType@aChar,w
  3610  1777  1D03               	btfss	3,2
  3611  1778  2F7E               	goto	l2820
  3612                           
  3613                           ;protocol.c: 74: return 3;
  3614  1779  3003               	movlw	3
  3615  177A  00A0               	movwf	?_toMsgType
  3616  177B  3000               	movlw	0
  3617  177C  00A1               	movwf	?_toMsgType+1
  3618  177D  0008               	return
  3619  177E                     l2820:	
  3620                           
  3621                           ;protocol.c: 75: if (aChar == 'i')
  3622  177E  3069               	movlw	105
  3623  177F  0623               	xorwf	toMsgType@aChar,w
  3624  1780  1D03               	btfss	3,2
  3625  1781  2F87               	goto	l2826
  3626                           
  3627                           ;protocol.c: 76: return 4;
  3628  1782  3004               	movlw	4
  3629  1783  00A0               	movwf	?_toMsgType
  3630  1784  3000               	movlw	0
  3631  1785  00A1               	movwf	?_toMsgType+1
  3632  1786  0008               	return
  3633  1787                     l2826:	
  3634                           
  3635                           ;protocol.c: 77: if (aChar == 'd')
  3636  1787  3064               	movlw	100
  3637  1788  0623               	xorwf	toMsgType@aChar,w
  3638  1789  1D03               	btfss	3,2
  3639  178A  2F90               	goto	l2832
  3640                           
  3641                           ;protocol.c: 78: return 5;
  3642  178B  3005               	movlw	5
  3643  178C  00A0               	movwf	?_toMsgType
  3644  178D  3000               	movlw	0
  3645  178E  00A1               	movwf	?_toMsgType+1
  3646  178F  0008               	return
  3647  1790                     l2832:	
  3648                           
  3649                           ;protocol.c: 79: return 0;
  3650  1790  01A0               	clrf	?_toMsgType
  3651  1791  01A1               	clrf	?_toMsgType+1
  3652  1792  0008               	return
  3653  1793                     __end_of_toMsgType:	
  3654                           
  3655                           	psect	text17
  3656  16F9                     __ptext17:	
  3657 ;; *************** function _putch *****************
  3658 ;; Defined at:
  3659 ;;		line 97 in file "serial.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  c               1    wreg     unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  c               1    1[BANK0 ] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       0       0       0       0
  3674 ;;      Locals:         0       1       0       0       0
  3675 ;;      Temps:          0       1       0       0       0
  3676 ;;      Totals:         0       2       0       0       0
  3677 ;;Total ram usage:        2 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_pro_getMessage
  3684 ;;		_putchhex
  3685 ;;		_putchdec
  3686 ;;		_putst
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _putch
  3692  16F9                     _putch:	
  3693                           
  3694                           ;incstack = 0
  3695                           ; Regs used in _putch: [wreg]
  3696                           ;putch@c stored from wreg
  3697  16F9  1283               	bcf	3,5	;RP0=0, select bank0
  3698  16FA  1303               	bcf	3,6	;RP1=0, select bank0
  3699  16FB  00A1               	movwf	putch@c
  3700  16FC                     l2878:	
  3701                           ;serial.c: 99: while(!TXIF)
  3702                           
  3703  16FC  1283               	bcf	3,5	;RP0=0, select bank0
  3704  16FD  1303               	bcf	3,6	;RP1=0, select bank0
  3705  16FE  1A0C               	btfsc	12,4	;volatile
  3706  16FF  2F16               	goto	l2880
  3707                           
  3708                           ;serial.c: 100: {;serial.c: 101: if (OERR) { TXEN=0; TXEN=1; CREN=0; CREN=1; } if (FERR)
      +                           { dummy=RCREG; TXEN=0; TXEN=1; };
  3709  1700  1C98               	btfss	24,1	;volatile
  3710  1701  2F0A               	goto	l356
  3711  1702  1683               	bsf	3,5	;RP0=1, select bank1
  3712  1703  1303               	bcf	3,6	;RP1=0, select bank1
  3713  1704  1298               	bcf	24,5	;volatile
  3714  1705  1698               	bsf	24,5	;volatile
  3715  1706  1283               	bcf	3,5	;RP0=0, select bank0
  3716  1707  1303               	bcf	3,6	;RP1=0, select bank0
  3717  1708  1218               	bcf	24,4	;volatile
  3718  1709  1618               	bsf	24,4	;volatile
  3719  170A                     l356:	
  3720  170A  1D18               	btfss	24,2	;volatile
  3721  170B  2F14               	goto	l357
  3722  170C  081A               	movf	26,w	;volatile
  3723  170D  00A0               	movwf	??_putch
  3724  170E  0820               	movf	??_putch,w
  3725  170F  1683               	bsf	3,5	;RP0=1, select bank1
  3726  1710  1303               	bcf	3,6	;RP1=0, select bank1
  3727  1711  00D8               	movwf	_dummy^(0+128)
  3728  1712  1298               	bcf	24,5	;volatile
  3729  1713  1698               	bsf	24,5	;volatile
  3730  1714                     l357:	
  3731  1714  0064               	clrwdt	;# 
  3732  1715  2EFC               	goto	l2878
  3733  1716                     l2880:	
  3734                           
  3735                           ;serial.c: 103: };serial.c: 104: TXREG=c;
  3736  1716  0821               	movf	putch@c,w
  3737  1717  0099               	movwf	25	;volatile
  3738  1718  0008               	return
  3739  1719                     __end_of_putch:	
  3740                           
  3741                           	psect	text18
  3742  16BA                     __ptext18:	
  3743 ;; *************** function _isValidCmd *****************
  3744 ;; Defined at:
  3745 ;;		line 53 in file "protocol.c"
  3746 ;; Parameters:    Size  Location     Type
  3747 ;;  aChar           1    wreg     unsigned char 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  aChar           1    3[BANK0 ] unsigned char 
  3750 ;; Return value:  Size  Location     Type
  3751 ;;                  2    0[BANK0 ] int 
  3752 ;; Registers used:
  3753 ;;		wreg, status,2, status,0
  3754 ;; Tracked objects:
  3755 ;;		On entry : 0/0
  3756 ;;		On exit  : 0/0
  3757 ;;		Unchanged: 0/0
  3758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3759 ;;      Params:         0       3       0       0       0
  3760 ;;      Locals:         0       1       0       0       0
  3761 ;;      Temps:          0       0       0       0       0
  3762 ;;      Totals:         0       4       0       0       0
  3763 ;;Total ram usage:        4 bytes
  3764 ;; Hardware stack levels used:    1
  3765 ;; Hardware stack levels required when called:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_pro_getMessage
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           
  3774                           ;psect for function _isValidCmd
  3775  16BA                     _isValidCmd:	
  3776                           
  3777                           ;incstack = 0
  3778                           ; Regs used in _isValidCmd: [wreg+status,2+status,0]
  3779                           ;isValidCmd@aChar stored from wreg
  3780  16BA  1283               	bcf	3,5	;RP0=0, select bank0
  3781  16BB  1303               	bcf	3,6	;RP1=0, select bank0
  3782  16BC  00A3               	movwf	isValidCmd@aChar
  3783                           
  3784                           ;protocol.c: 54: if ( (aChar == 'p') ||;protocol.c: 55: (aChar == 'h') ||;protocol.c: 56
      +                          : (aChar == 'g') ||;protocol.c: 57: (aChar == 'i') ||;protocol.c: 58: (aChar == 'd'))
  3785  16BD  3070               	movlw	112
  3786  16BE  0623               	xorwf	isValidCmd@aChar,w
  3787  16BF  1903               	btfsc	3,2
  3788  16C0  2ED1               	goto	l2790
  3789  16C1  3068               	movlw	104
  3790  16C2  0623               	xorwf	isValidCmd@aChar,w
  3791  16C3  1903               	btfsc	3,2
  3792  16C4  2ED1               	goto	l2790
  3793  16C5  3067               	movlw	103
  3794  16C6  0623               	xorwf	isValidCmd@aChar,w
  3795  16C7  1903               	btfsc	3,2
  3796  16C8  2ED1               	goto	l2790
  3797  16C9  3069               	movlw	105
  3798  16CA  0623               	xorwf	isValidCmd@aChar,w
  3799  16CB  1903               	btfsc	3,2
  3800  16CC  2ED1               	goto	l2790
  3801  16CD  3064               	movlw	100
  3802  16CE  0623               	xorwf	isValidCmd@aChar,w
  3803  16CF  1D03               	btfss	3,2
  3804  16D0  2ED6               	goto	l2794
  3805  16D1                     l2790:	
  3806                           
  3807                           ;protocol.c: 59: return 1;
  3808  16D1  3001               	movlw	1
  3809  16D2  00A0               	movwf	?_isValidCmd
  3810  16D3  3000               	movlw	0
  3811  16D4  00A1               	movwf	?_isValidCmd+1
  3812  16D5  0008               	return
  3813  16D6                     l2794:	
  3814                           
  3815                           ;protocol.c: 60: return 0;
  3816  16D6  01A0               	clrf	?_isValidCmd
  3817  16D7  01A1               	clrf	?_isValidCmd+1
  3818  16D8  0008               	return
  3819  16D9                     __end_of_isValidCmd:	
  3820                           
  3821                           	psect	text19
  3822  16D9                     __ptext19:	
  3823 ;; *************** function _isValid *****************
  3824 ;; Defined at:
  3825 ;;		line 83 in file "protocol.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  aChar           1    wreg     unsigned char 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  aChar           1    3[BANK0 ] unsigned char 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    0[BANK0 ] int 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       3       0       0       0
  3840 ;;      Locals:         0       1       0       0       0
  3841 ;;      Temps:          0       0       0       0       0
  3842 ;;      Totals:         0       4       0       0       0
  3843 ;;Total ram usage:        4 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		Nothing
  3848 ;; This function is called by:
  3849 ;;		_pro_getMessage
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           
  3854                           ;psect for function _isValid
  3855  16D9                     _isValid:	
  3856                           
  3857                           ;incstack = 0
  3858                           ; Regs used in _isValid: [wreg+status,2+status,0]
  3859                           ;isValid@aChar stored from wreg
  3860  16D9  1283               	bcf	3,5	;RP0=0, select bank0
  3861  16DA  1303               	bcf	3,6	;RP1=0, select bank0
  3862  16DB  00A3               	movwf	isValid@aChar
  3863                           
  3864                           ;protocol.c: 84: if (pro_ptr >= 7)
  3865  16DC  3007               	movlw	7
  3866  16DD  0278               	subwf	_pro_ptr,w
  3867  16DE  1803               	btfsc	3,0
  3868  16DF  2EED               	goto	l2838
  3869  16E0  2EF0               	goto	l2842
  3870  16E1                     l2844:	
  3871  16E1  302E               	movlw	46
  3872  16E2  0623               	xorwf	isValid@aChar,w
  3873  16E3  1903               	btfsc	3,2
  3874  16E4  2EF4               	goto	l2850
  3875  16E5  3030               	movlw	48
  3876  16E6  0223               	subwf	isValid@aChar,w
  3877  16E7  1C03               	skipc
  3878  16E8  2EED               	goto	l2838
  3879  16E9  303A               	movlw	58
  3880  16EA  0223               	subwf	isValid@aChar,w
  3881  16EB  1C03               	btfss	3,0
  3882  16EC  2EF4               	goto	l2850
  3883  16ED                     l2838:	
  3884                           
  3885                           ;protocol.c: 85: return 0;
  3886  16ED  01A0               	clrf	?_isValid
  3887  16EE  01A1               	clrf	?_isValid+1
  3888  16EF  0008               	return
  3889  16F0                     l2842:	
  3890                           
  3891                           ;protocol.c: 86: if ( (aChar == '-') ||;protocol.c: 87: (aChar == '.') ||;protocol.c: 88
      +                          : ((aChar >= '0')&&(aChar <= '9')) )
  3892  16F0  302D               	movlw	45
  3893  16F1  0623               	xorwf	isValid@aChar,w
  3894  16F2  1D03               	btfss	3,2
  3895  16F3  2EE1               	goto	l2844
  3896  16F4                     l2850:	
  3897                           
  3898                           ;protocol.c: 89: return 1;
  3899  16F4  3001               	movlw	1
  3900  16F5  00A0               	movwf	?_isValid
  3901  16F6  3000               	movlw	0
  3902  16F7  00A1               	movwf	?_isValid+1
  3903  16F8  0008               	return
  3904  16F9                     __end_of_isValid:	
  3905                           
  3906                           	psect	text20
  3907  1551                     __ptext20:	
  3908 ;; *************** function _framingError *****************
  3909 ;; Defined at:
  3910 ;;		line 47 in file "protocol.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    2
  3931 ;; This function calls:
  3932 ;;		_cleanupBuffer
  3933 ;; This function is called by:
  3934 ;;		_pro_getMessage
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _framingError
  3940  1551                     _framingError:	
  3941                           
  3942                           ;protocol.c: 48: pro_status = 0;
  3943                           
  3944                           ;incstack = 0
  3945                           ; Regs used in _framingError: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3946  1551  1283               	bcf	3,5	;RP0=0, select bank0
  3947  1552  1303               	bcf	3,6	;RP1=0, select bank0
  3948  1553  01EC               	clrf	_pro_status
  3949                           
  3950                           ;protocol.c: 49: pro_ptr = 0;
  3951  1554  01F8               	clrf	_pro_ptr
  3952                           
  3953                           ;protocol.c: 50: cleanupBuffer();
  3954  1555  160A  118A  25FD   	fcall	_cleanupBuffer
  3955  1558  0008               	return
  3956  1559                     __end_of_framingError:	
  3957                           
  3958                           	psect	text21
  3959  15FD                     __ptext21:	
  3960 ;; *************** function _cleanupBuffer *****************
  3961 ;; Defined at:
  3962 ;;		line 38 in file "protocol.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  i               1    1[BANK0 ] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       1       0       0       0
  3978 ;;      Temps:          0       1       0       0       0
  3979 ;;      Totals:         0       2       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_framingError
  3987 ;;		_pro_init
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _cleanupBuffer
  3993  15FD                     _cleanupBuffer:	
  3994                           
  3995                           ;protocol.c: 39: unsigned char i;;protocol.c: 40: for (i=0; i<7; i++) {
  3996                           
  3997                           ;incstack = 0
  3998                           ; Regs used in _cleanupBuffer: [wreg-fsr0h+status,2+status,0]
  3999  15FD  1283               	bcf	3,5	;RP0=0, select bank0
  4000  15FE  1303               	bcf	3,6	;RP1=0, select bank0
  4001  15FF  01A1               	clrf	cleanupBuffer@i
  4002  1600                     l2472:	
  4003                           
  4004                           ;protocol.c: 41: pro_incoming[i] = 0;
  4005  1600  0821               	movf	cleanupBuffer@i,w
  4006  1601  3EA9               	addlw	(low (_pro_incoming| (0+256)))& (0+255)
  4007  1602  0084               	movwf	4
  4008  1603  1783               	bsf	3,7	;select IRP bank3
  4009  1604  0180               	clrf	0
  4010                           
  4011                           ;protocol.c: 42: completeMessage.value[i]=0;
  4012  1605  0821               	movf	cleanupBuffer@i,w
  4013  1606  3EB3               	addlw	(low ((_completeMessage| (0+256)+1)))& (0+255)
  4014  1607  0084               	movwf	4
  4015  1608  0180               	clrf	0
  4016  1609  3001               	movlw	1
  4017  160A  00A0               	movwf	??_cleanupBuffer
  4018  160B  0820               	movf	??_cleanupBuffer,w
  4019  160C  07A1               	addwf	cleanupBuffer@i,f
  4020  160D  3007               	movlw	7
  4021  160E  0221               	subwf	cleanupBuffer@i,w
  4022  160F  1803               	btfsc	3,0
  4023  1610  0008               	return
  4024  1611  2E00               	goto	l2472
  4025  1612                     __end_of_cleanupBuffer:	
  4026                           
  4027                           	psect	text22
  4028  1627                     __ptext22:	
  4029 ;; *************** function _clear_usart_errors *****************
  4030 ;; Defined at:
  4031 ;;		line 151 in file "serial.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;		None
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0
  4047 ;;      Temps:          0       1       0       0       0
  4048 ;;      Totals:         0       1       0       0       0
  4049 ;;Total ram usage:        1 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_pro_getMessage
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _clear_usart_errors
  4061  1627                     _clear_usart_errors:	
  4062                           
  4063                           ;serial.c: 153: if (OERR) { TXEN=0; TXEN=1; CREN=0; CREN=1; } if (FERR) { dummy=RCREG; T
      +                          XEN=0; TXEN=1; };
  4064                           
  4065                           ;incstack = 0
  4066                           ; Regs used in _clear_usart_errors: [wreg]
  4067  1627  1283               	bcf	3,5	;RP0=0, select bank0
  4068  1628  1303               	bcf	3,6	;RP1=0, select bank0
  4069  1629  1C98               	btfss	24,1	;volatile
  4070  162A  2E33               	goto	l383
  4071  162B  1683               	bsf	3,5	;RP0=1, select bank1
  4072  162C  1303               	bcf	3,6	;RP1=0, select bank1
  4073  162D  1298               	bcf	24,5	;volatile
  4074  162E  1698               	bsf	24,5	;volatile
  4075  162F  1283               	bcf	3,5	;RP0=0, select bank0
  4076  1630  1303               	bcf	3,6	;RP1=0, select bank0
  4077  1631  1218               	bcf	24,4	;volatile
  4078  1632  1618               	bsf	24,4	;volatile
  4079  1633                     l383:	
  4080  1633  1D18               	btfss	24,2	;volatile
  4081  1634  0008               	return
  4082  1635  081A               	movf	26,w	;volatile
  4083  1636  00A0               	movwf	??_clear_usart_errors
  4084  1637  0820               	movf	??_clear_usart_errors,w
  4085  1638  1683               	bsf	3,5	;RP0=1, select bank1
  4086  1639  1303               	bcf	3,6	;RP1=0, select bank1
  4087  163A  00D8               	movwf	_dummy^(0+128)
  4088  163B  1298               	bcf	24,5	;volatile
  4089  163C  1698               	bsf	24,5	;volatile
  4090  163D  0008               	return
  4091  163E                     __end_of_clear_usart_errors:	
  4092                           
  4093                           	psect	text23
  4094  1549                     __ptext23:	
  4095 ;; *************** function _chkchr *****************
  4096 ;; Defined at:
  4097 ;;		line 144 in file "serial.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;		None
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      unsigned char 
  4104 ;; Registers used:
  4105 ;;		wreg
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0       0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0
  4114 ;;      Totals:         0       0       0       0       0
  4115 ;;Total ram usage:        0 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_pro_getMessage
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function _chkchr
  4127  1549                     _chkchr:	
  4128                           
  4129                           ;serial.c: 145: if (RCIF) {
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in _chkchr: [wreg]
  4133  1549  1283               	bcf	3,5	;RP0=0, select bank0
  4134  154A  1303               	bcf	3,6	;RP1=0, select bank0
  4135  154B  1E8C               	btfss	12,5	;volatile
  4136  154C  2D4F               	goto	l2864
  4137                           
  4138                           ;serial.c: 146: return RCREG;
  4139  154D  081A               	movf	26,w	;volatile
  4140  154E  0008               	return
  4141  154F                     l2864:	
  4142                           
  4143                           ;serial.c: 147: };serial.c: 148: return 255;
  4144  154F  30FF               	movlw	255
  4145  1550  0008               	return
  4146  1551                     __end_of_chkchr:	
  4147                           
  4148                           	psect	text24
  4149  15A7                     __ptext24:	
  4150 ;; *************** function _addToIncomingBuffer *****************
  4151 ;; Defined at:
  4152 ;;		line 63 in file "protocol.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  aChar           1    wreg     unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  aChar           1    1[BANK0 ] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       0       0       0       0
  4167 ;;      Locals:         0       1       0       0       0
  4168 ;;      Temps:          0       1       0       0       0
  4169 ;;      Totals:         0       2       0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_pro_getMessage
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _addToIncomingBuffer
  4182  15A7                     _addToIncomingBuffer:	
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _addToIncomingBuffer: [wreg-fsr0h+status,2+status,0]
  4186                           ;addToIncomingBuffer@aChar stored from wreg
  4187  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  4188  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  4189  15A9  00A1               	movwf	addToIncomingBuffer@aChar
  4190                           
  4191                           ;protocol.c: 64: pro_incoming[pro_ptr] = aChar;
  4192  15AA  0821               	movf	addToIncomingBuffer@aChar,w
  4193  15AB  00A0               	movwf	??_addToIncomingBuffer
  4194  15AC  0878               	movf	_pro_ptr,w
  4195  15AD  3EA9               	addlw	(low (_pro_incoming| (0+256)))& (0+255)
  4196  15AE  0084               	movwf	4
  4197  15AF  0820               	movf	??_addToIncomingBuffer,w
  4198  15B0  1783               	bsf	3,7	;select IRP bank3
  4199  15B1  0080               	movwf	0
  4200                           
  4201                           ;protocol.c: 65: pro_ptr++;
  4202  15B2  3001               	movlw	1
  4203  15B3  00A0               	movwf	??_addToIncomingBuffer
  4204  15B4  0820               	movf	??_addToIncomingBuffer,w
  4205  15B5  07F8               	addwf	_pro_ptr,f
  4206  15B6  0008               	return
  4207  15B7                     __end_of_addToIncomingBuffer:	
  4208                           
  4209                           	psect	text25
  4210  158B                     __ptext25:	
  4211 ;; *************** function _pos_setCurrentPosition *****************
  4212 ;; Defined at:
  4213 ;;		line 24 in file "position_sensor_implementation.h"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  pos             2    0[BANK0 ] int 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4227 ;;      Params:         0       2       0       0       0
  4228 ;;      Locals:         0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0
  4230 ;;      Totals:         0       2       0       0       0
  4231 ;;Total ram usage:        2 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_protocol_task
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _pos_setCurrentPosition
  4243  158B                     _pos_setCurrentPosition:	
  4244                           
  4245                           ;position_sensor_implementation.h: 25: pos_currentPosition = pos;
  4246                           
  4247                           ;incstack = 0
  4248                           ; Regs used in _pos_setCurrentPosition: [wreg]
  4249  158B  1283               	bcf	3,5	;RP0=0, select bank0
  4250  158C  1303               	bcf	3,6	;RP1=0, select bank0
  4251  158D  0821               	movf	pos_setCurrentPosition@pos+1,w
  4252  158E  1683               	bsf	3,5	;RP0=1, select bank1
  4253  158F  1303               	bcf	3,6	;RP1=0, select bank1
  4254  1590  00D5               	movwf	(_pos_currentPosition+1)^(0+128)	;volatile
  4255  1591  1283               	bcf	3,5	;RP0=0, select bank0
  4256  1592  1303               	bcf	3,6	;RP1=0, select bank0
  4257  1593  0820               	movf	pos_setCurrentPosition@pos,w
  4258  1594  1683               	bsf	3,5	;RP0=1, select bank1
  4259  1595  1303               	bcf	3,6	;RP1=0, select bank1
  4260  1596  00D4               	movwf	_pos_currentPosition^(0+128)	;volatile
  4261  1597  0008               	return
  4262  1598                     __end_of_pos_setCurrentPosition:	
  4263                           
  4264                           	psect	text26
  4265  16A1                     __ptext26:	
  4266 ;; *************** function _pid_setProportionalGain *****************
  4267 ;; Defined at:
  4268 ;;		line 78 in file "pid.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  gain            4    0[BANK0 ] float 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         0       4       0       0       0
  4283 ;;      Locals:         0       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0
  4285 ;;      Totals:         0       4       0       0       0
  4286 ;;Total ram usage:        4 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:    1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_protocol_task
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           
  4297                           ;psect for function _pid_setProportionalGain
  4298  16A1                     _pid_setProportionalGain:	
  4299                           
  4300                           ;pid.c: 79: kProportional = gain;
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _pid_setProportionalGain: [wreg]
  4304  16A1  1283               	bcf	3,5	;RP0=0, select bank0
  4305  16A2  1303               	bcf	3,6	;RP1=0, select bank0
  4306  16A3  0823               	movf	pid_setProportionalGain@gain+3,w
  4307  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  4308  16A5  1303               	bcf	3,6	;RP1=0, select bank1
  4309  16A6  00BF               	movwf	(_kProportional+3)^(0+128)
  4310  16A7  1283               	bcf	3,5	;RP0=0, select bank0
  4311  16A8  1303               	bcf	3,6	;RP1=0, select bank0
  4312  16A9  0822               	movf	pid_setProportionalGain@gain+2,w
  4313  16AA  1683               	bsf	3,5	;RP0=1, select bank1
  4314  16AB  1303               	bcf	3,6	;RP1=0, select bank1
  4315  16AC  00BE               	movwf	(_kProportional+2)^(0+128)
  4316  16AD  1283               	bcf	3,5	;RP0=0, select bank0
  4317  16AE  1303               	bcf	3,6	;RP1=0, select bank0
  4318  16AF  0821               	movf	pid_setProportionalGain@gain+1,w
  4319  16B0  1683               	bsf	3,5	;RP0=1, select bank1
  4320  16B1  1303               	bcf	3,6	;RP1=0, select bank1
  4321  16B2  00BD               	movwf	(_kProportional+1)^(0+128)
  4322  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  4323  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  4324  16B5  0820               	movf	pid_setProportionalGain@gain,w
  4325  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  4326  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  4327  16B8  00BC               	movwf	_kProportional^(0+128)
  4328  16B9  0008               	return
  4329  16BA                     __end_of_pid_setProportionalGain:	
  4330                           
  4331                           	psect	text27
  4332  1688                     __ptext27:	
  4333 ;; *************** function _pid_setPoint *****************
  4334 ;; Defined at:
  4335 ;;		line 66 in file "pid.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  position        4    0[BANK0 ] float 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         0       4       0       0       0
  4350 ;;      Locals:         0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0
  4352 ;;      Totals:         0       4       0       0       0
  4353 ;;Total ram usage:        4 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_protocol_task
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _pid_setPoint
  4365  1688                     _pid_setPoint:	
  4366                           
  4367                           ;pid.c: 67: setPoint = position;
  4368                           
  4369                           ;incstack = 0
  4370                           ; Regs used in _pid_setPoint: [wreg]
  4371  1688  1283               	bcf	3,5	;RP0=0, select bank0
  4372  1689  1303               	bcf	3,6	;RP1=0, select bank0
  4373  168A  0823               	movf	pid_setPoint@position+3,w
  4374  168B  1683               	bsf	3,5	;RP0=1, select bank1
  4375  168C  1303               	bcf	3,6	;RP1=0, select bank1
  4376  168D  00CB               	movwf	(_setPoint+3)^(0+128)
  4377  168E  1283               	bcf	3,5	;RP0=0, select bank0
  4378  168F  1303               	bcf	3,6	;RP1=0, select bank0
  4379  1690  0822               	movf	pid_setPoint@position+2,w
  4380  1691  1683               	bsf	3,5	;RP0=1, select bank1
  4381  1692  1303               	bcf	3,6	;RP1=0, select bank1
  4382  1693  00CA               	movwf	(_setPoint+2)^(0+128)
  4383  1694  1283               	bcf	3,5	;RP0=0, select bank0
  4384  1695  1303               	bcf	3,6	;RP1=0, select bank0
  4385  1696  0821               	movf	pid_setPoint@position+1,w
  4386  1697  1683               	bsf	3,5	;RP0=1, select bank1
  4387  1698  1303               	bcf	3,6	;RP1=0, select bank1
  4388  1699  00C9               	movwf	(_setPoint+1)^(0+128)
  4389  169A  1283               	bcf	3,5	;RP0=0, select bank0
  4390  169B  1303               	bcf	3,6	;RP1=0, select bank0
  4391  169C  0820               	movf	pid_setPoint@position,w
  4392  169D  1683               	bsf	3,5	;RP0=1, select bank1
  4393  169E  1303               	bcf	3,6	;RP1=0, select bank1
  4394  169F  00C8               	movwf	_setPoint^(0+128)
  4395  16A0  0008               	return
  4396  16A1                     __end_of_pid_setPoint:	
  4397                           
  4398                           	psect	text28
  4399  166F                     __ptext28:	
  4400 ;; *************** function _pid_setIntegralGain *****************
  4401 ;; Defined at:
  4402 ;;		line 74 in file "pid.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  gain            4    0[BANK0 ] float 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4416 ;;      Params:         0       4       0       0       0
  4417 ;;      Locals:         0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0
  4419 ;;      Totals:         0       4       0       0       0
  4420 ;;Total ram usage:        4 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_protocol_task
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _pid_setIntegralGain
  4432  166F                     _pid_setIntegralGain:	
  4433                           
  4434                           ;pid.c: 75: kIntegral = gain;
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _pid_setIntegralGain: [wreg]
  4438  166F  1283               	bcf	3,5	;RP0=0, select bank0
  4439  1670  1303               	bcf	3,6	;RP1=0, select bank0
  4440  1671  0823               	movf	pid_setIntegralGain@gain+3,w
  4441  1672  1683               	bsf	3,5	;RP0=1, select bank3
  4442  1673  1703               	bsf	3,6	;RP1=1, select bank3
  4443  1674  00C1               	movwf	(_kIntegral+3)^(0+384)
  4444  1675  1283               	bcf	3,5	;RP0=0, select bank0
  4445  1676  1303               	bcf	3,6	;RP1=0, select bank0
  4446  1677  0822               	movf	pid_setIntegralGain@gain+2,w
  4447  1678  1683               	bsf	3,5	;RP0=1, select bank3
  4448  1679  1703               	bsf	3,6	;RP1=1, select bank3
  4449  167A  00C0               	movwf	(_kIntegral+2)^(0+384)
  4450  167B  1283               	bcf	3,5	;RP0=0, select bank0
  4451  167C  1303               	bcf	3,6	;RP1=0, select bank0
  4452  167D  0821               	movf	pid_setIntegralGain@gain+1,w
  4453  167E  1683               	bsf	3,5	;RP0=1, select bank3
  4454  167F  1703               	bsf	3,6	;RP1=1, select bank3
  4455  1680  00BF               	movwf	(_kIntegral+1)^(0+384)
  4456  1681  1283               	bcf	3,5	;RP0=0, select bank0
  4457  1682  1303               	bcf	3,6	;RP1=0, select bank0
  4458  1683  0820               	movf	pid_setIntegralGain@gain,w
  4459  1684  1683               	bsf	3,5	;RP0=1, select bank3
  4460  1685  1703               	bsf	3,6	;RP1=1, select bank3
  4461  1686  00BE               	movwf	_kIntegral^(0+384)
  4462  1687  0008               	return
  4463  1688                     __end_of_pid_setIntegralGain:	
  4464                           
  4465                           	psect	text29
  4466  1656                     __ptext29:	
  4467 ;; *************** function _pid_setDerivativeGain *****************
  4468 ;; Defined at:
  4469 ;;		line 70 in file "pid.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  gain            4    0[BANK0 ] float 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4483 ;;      Params:         0       4       0       0       0
  4484 ;;      Locals:         0       0       0       0       0
  4485 ;;      Temps:          0       0       0       0       0
  4486 ;;      Totals:         0       4       0       0       0
  4487 ;;Total ram usage:        4 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    1
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_protocol_task
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _pid_setDerivativeGain
  4499  1656                     _pid_setDerivativeGain:	
  4500                           
  4501                           ;pid.c: 71: kDerivative = gain;
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in _pid_setDerivativeGain: [wreg]
  4505  1656  1283               	bcf	3,5	;RP0=0, select bank0
  4506  1657  1303               	bcf	3,6	;RP1=0, select bank0
  4507  1658  0823               	movf	pid_setDerivativeGain@gain+3,w
  4508  1659  1683               	bsf	3,5	;RP0=1, select bank3
  4509  165A  1703               	bsf	3,6	;RP1=1, select bank3
  4510  165B  00BD               	movwf	(_kDerivative+3)^(0+384)
  4511  165C  1283               	bcf	3,5	;RP0=0, select bank0
  4512  165D  1303               	bcf	3,6	;RP1=0, select bank0
  4513  165E  0822               	movf	pid_setDerivativeGain@gain+2,w
  4514  165F  1683               	bsf	3,5	;RP0=1, select bank3
  4515  1660  1703               	bsf	3,6	;RP1=1, select bank3
  4516  1661  00BC               	movwf	(_kDerivative+2)^(0+384)
  4517  1662  1283               	bcf	3,5	;RP0=0, select bank0
  4518  1663  1303               	bcf	3,6	;RP1=0, select bank0
  4519  1664  0821               	movf	pid_setDerivativeGain@gain+1,w
  4520  1665  1683               	bsf	3,5	;RP0=1, select bank3
  4521  1666  1703               	bsf	3,6	;RP1=1, select bank3
  4522  1667  00BB               	movwf	(_kDerivative+1)^(0+384)
  4523  1668  1283               	bcf	3,5	;RP0=0, select bank0
  4524  1669  1303               	bcf	3,6	;RP1=0, select bank0
  4525  166A  0820               	movf	pid_setDerivativeGain@gain,w
  4526  166B  1683               	bsf	3,5	;RP0=1, select bank3
  4527  166C  1703               	bsf	3,6	;RP1=1, select bank3
  4528  166D  00BA               	movwf	_kDerivative^(0+384)
  4529  166E  0008               	return
  4530  166F                     __end_of_pid_setDerivativeGain:	
  4531                           
  4532                           	psect	text30
  4533  15EA                     __ptext30:	
  4534 ;; *************** function _pid_clearError *****************
  4535 ;; Defined at:
  4536 ;;		line 82 in file "pid.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4550 ;;      Params:         0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0
  4552 ;;      Temps:          0       0       0       0       0
  4553 ;;      Totals:         0       0       0       0       0
  4554 ;;Total ram usage:        0 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    1
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_protocol_task
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           
  4565                           ;psect for function _pid_clearError
  4566  15EA                     _pid_clearError:	
  4567                           
  4568                           ;pid.c: 83: integralError = 0.0;
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _pid_clearError: [wreg]
  4572  15EA  3000               	movlw	0
  4573  15EB  1683               	bsf	3,5	;RP0=1, select bank1
  4574  15EC  1303               	bcf	3,6	;RP1=0, select bank1
  4575  15ED  00C7               	movwf	(_integralError+3)^(0+128)
  4576  15EE  3000               	movlw	0
  4577  15EF  00C6               	movwf	(_integralError+2)^(0+128)
  4578  15F0  3000               	movlw	0
  4579  15F1  00C5               	movwf	(_integralError+1)^(0+128)
  4580  15F2  3000               	movlw	0
  4581  15F3  00C4               	movwf	_integralError^(0+128)
  4582                           
  4583                           ;pid.c: 84: previousError = 0.0;
  4584  15F4  3000               	movlw	0
  4585  15F5  00C3               	movwf	(_previousError+3)^(0+128)
  4586  15F6  3000               	movlw	0
  4587  15F7  00C2               	movwf	(_previousError+2)^(0+128)
  4588  15F8  3000               	movlw	0
  4589  15F9  00C1               	movwf	(_previousError+1)^(0+128)
  4590  15FA  3000               	movlw	0
  4591  15FB  00C0               	movwf	_previousError^(0+128)
  4592  15FC  0008               	return
  4593  15FD                     __end_of_pid_clearError:	
  4594                           
  4595                           	psect	text31
  4596  058F                     __ptext31:	
  4597 ;; *************** function _convertToReal *****************
  4598 ;; Defined at:
  4599 ;;		line 17 in file "utils.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  chars           1    wreg     PTR unsigned char 
  4602 ;;		 -> message(8), 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  chars           1   17[BANK1 ] PTR unsigned char 
  4605 ;;		 -> message(8), 
  4606 ;;  value           4   13[BANK1 ] float 
  4607 ;;  potDez          4    9[BANK1 ] float 
  4608 ;;  temp            4    5[BANK1 ] float 
  4609 ;;  signal          4    0[BANK1 ] float 
  4610 ;;  i               1   18[BANK1 ] unsigned char 
  4611 ;;  decimal         1    4[BANK1 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  4   55[BANK0 ] float 
  4614 ;; Registers used:
  4615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4621 ;;      Params:         0       4       0       0       0
  4622 ;;      Locals:         0       0      19       0       0
  4623 ;;      Temps:          0       5       0       0       0
  4624 ;;      Totals:         0       9      19       0       0
  4625 ;;Total ram usage:       28 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    3
  4628 ;; This function calls:
  4629 ;;		___fladd
  4630 ;;		___flmul
  4631 ;;		___xxtofl
  4632 ;; This function is called by:
  4633 ;;		_protocol_task
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function _convertToReal
  4639  058F                     _convertToReal:	
  4640                           
  4641                           ;incstack = 0
  4642                           ; Regs used in _convertToReal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4643                           ;convertToReal@chars stored from wreg
  4644  058F  1683               	bsf	3,5	;RP0=1, select bank1
  4645  0590  1303               	bcf	3,6	;RP1=0, select bank1
  4646  0591  00EC               	movwf	convertToReal@chars^(0+128)
  4647                           
  4648                           ;utils.c: 18: float value = 0.0;
  4649  0592  3000               	movlw	0
  4650  0593  00EB               	movwf	(convertToReal@value+3)^(0+128)
  4651  0594  3000               	movlw	0
  4652  0595  00EA               	movwf	(convertToReal@value+2)^(0+128)
  4653  0596  3000               	movlw	0
  4654  0597  00E9               	movwf	(convertToReal@value+1)^(0+128)
  4655  0598  3000               	movlw	0
  4656  0599  00E8               	movwf	convertToReal@value^(0+128)
  4657                           
  4658                           ;utils.c: 20: float potDez = 1.0;
  4659  059A  303F               	movlw	63
  4660  059B  00E7               	movwf	(convertToReal@potDez+3)^(0+128)
  4661  059C  3080               	movlw	128
  4662  059D  00E6               	movwf	(convertToReal@potDez+2)^(0+128)
  4663  059E  3000               	movlw	0
  4664  059F  00E5               	movwf	(convertToReal@potDez+1)^(0+128)
  4665  05A0  3000               	movlw	0
  4666  05A1  00E4               	movwf	convertToReal@potDez^(0+128)
  4667                           
  4668                           ;utils.c: 21: float signal = 1.0;
  4669  05A2  303F               	movlw	63
  4670  05A3  00DE               	movwf	(convertToReal@signal+3)^(0+128)
  4671  05A4  3080               	movlw	128
  4672  05A5  00DD               	movwf	(convertToReal@signal+2)^(0+128)
  4673  05A6  3000               	movlw	0
  4674  05A7  00DC               	movwf	(convertToReal@signal+1)^(0+128)
  4675  05A8  3000               	movlw	0
  4676  05A9  00DB               	movwf	convertToReal@signal^(0+128)
  4677                           
  4678                           ;utils.c: 22: unsigned char decimal = 0;
  4679  05AA  01DF               	clrf	convertToReal@decimal^(0+128)
  4680                           
  4681                           ;utils.c: 23: unsigned char i = 0;
  4682  05AB  01ED               	clrf	convertToReal@i^(0+128)
  4683                           
  4684                           ;utils.c: 26: if (chars[0] == '-') {
  4685  05AC  086C               	movf	convertToReal@chars^(0+128),w
  4686  05AD  0084               	movwf	4
  4687  05AE  302D               	movlw	45
  4688  05AF  1783               	bsf	3,7	;select IRP bank2
  4689  05B0  0600               	xorwf	0,w
  4690  05B1  1D03               	btfss	3,2
  4691  05B2  2DBD               	goto	l485
  4692                           
  4693                           ;utils.c: 27: signal = -1.0;
  4694  05B3  30BF               	movlw	191
  4695  05B4  00DE               	movwf	(convertToReal@signal+3)^(0+128)
  4696  05B5  3080               	movlw	128
  4697  05B6  00DD               	movwf	(convertToReal@signal+2)^(0+128)
  4698  05B7  3000               	movlw	0
  4699  05B8  00DC               	movwf	(convertToReal@signal+1)^(0+128)
  4700  05B9  3000               	movlw	0
  4701  05BA  00DB               	movwf	convertToReal@signal^(0+128)
  4702                           
  4703                           ;utils.c: 28: i = 1;
  4704  05BB  01ED               	clrf	convertToReal@i^(0+128)
  4705  05BC  0AED               	incf	convertToReal@i^(0+128),f
  4706  05BD                     l485:	
  4707                           
  4708                           ;utils.c: 29: };utils.c: 30: for (; i<7; i++) {
  4709  05BD  3007               	movlw	7
  4710  05BE  026D               	subwf	convertToReal@i^(0+128),w
  4711  05BF  1803               	btfsc	3,0
  4712  05C0  2F62               	goto	l3458
  4713                           
  4714                           ;utils.c: 31: if (chars[i] == 0)
  4715  05C1  086D               	movf	convertToReal@i^(0+128),w
  4716  05C2  076C               	addwf	convertToReal@chars^(0+128),w
  4717  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4718  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4719  05C5  00DB               	movwf	??_convertToReal
  4720  05C6  085B               	movf	??_convertToReal,w
  4721  05C7  0084               	movwf	4
  4722  05C8  1783               	bsf	3,7	;select IRP bank2
  4723  05C9  0800               	movf	0,w
  4724  05CA  1903               	btfsc	3,2
  4725  05CB  2F62               	goto	l3458
  4726                           
  4727                           ;utils.c: 33: if ( (chars[i] < '0') &&;utils.c: 34: (chars[i] > '9') &&;utils.c: 35: (ch
      +                          ars[i] != '.')) {
  4728  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  4729  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  4730  05CE  086D               	movf	convertToReal@i^(0+128),w
  4731  05CF  076C               	addwf	convertToReal@chars^(0+128),w
  4732  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4733  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4734  05D2  00DB               	movwf	??_convertToReal
  4735  05D3  085B               	movf	??_convertToReal,w
  4736  05D4  0084               	movwf	4
  4737  05D5  3030               	movlw	48
  4738  05D6  0200               	subwf	0,w
  4739  05D7  1803               	skipnc
  4740  05D8  2DF3               	goto	l3440
  4741  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  4742  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  4743  05DB  086D               	movf	convertToReal@i^(0+128),w
  4744  05DC  076C               	addwf	convertToReal@chars^(0+128),w
  4745  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  4746  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  4747  05DF  00DB               	movwf	??_convertToReal
  4748  05E0  085B               	movf	??_convertToReal,w
  4749  05E1  0084               	movwf	4
  4750  05E2  303A               	movlw	58
  4751  05E3  0200               	subwf	0,w
  4752  05E4  1C03               	skipc
  4753  05E5  2DF3               	goto	l3440
  4754  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  4755  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  4756  05E8  086D               	movf	convertToReal@i^(0+128),w
  4757  05E9  076C               	addwf	convertToReal@chars^(0+128),w
  4758  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4759  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4760  05EC  00DB               	movwf	??_convertToReal
  4761  05ED  085B               	movf	??_convertToReal,w
  4762  05EE  0084               	movwf	4
  4763  05EF  302E               	movlw	46
  4764  05F0  0600               	xorwf	0,w
  4765  05F1  1D03               	btfss	3,2
  4766  05F2  2F62               	goto	l3458
  4767  05F3                     l3440:	
  4768                           
  4769                           ;utils.c: 37: };utils.c: 38: if (chars[i] == '.') {
  4770  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  4771  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  4772  05F5  086D               	movf	convertToReal@i^(0+128),w
  4773  05F6  076C               	addwf	convertToReal@chars^(0+128),w
  4774  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4775  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4776  05F9  00DB               	movwf	??_convertToReal
  4777  05FA  085B               	movf	??_convertToReal,w
  4778  05FB  0084               	movwf	4
  4779  05FC  302E               	movlw	46
  4780  05FD  0600               	xorwf	0,w
  4781  05FE  1D03               	btfss	3,2
  4782  05FF  2E0D               	goto	l3446
  4783                           
  4784                           ;utils.c: 39: potDez = 0.1;
  4785  0600  303D               	movlw	61
  4786  0601  1683               	bsf	3,5	;RP0=1, select bank1
  4787  0602  1303               	bcf	3,6	;RP1=0, select bank1
  4788  0603  00E7               	movwf	(convertToReal@potDez+3)^(0+128)
  4789  0604  30CC               	movlw	204
  4790  0605  00E6               	movwf	(convertToReal@potDez+2)^(0+128)
  4791  0606  30CC               	movlw	204
  4792  0607  00E5               	movwf	(convertToReal@potDez+1)^(0+128)
  4793  0608  30CD               	movlw	205
  4794  0609  00E4               	movwf	convertToReal@potDez^(0+128)
  4795                           
  4796                           ;utils.c: 40: decimal = 1;
  4797  060A  01DF               	clrf	convertToReal@decimal^(0+128)
  4798  060B  0ADF               	incf	convertToReal@decimal^(0+128),f
  4799                           
  4800                           ;utils.c: 41: } else {
  4801  060C  2F59               	goto	l3454
  4802  060D                     l3446:	
  4803                           
  4804                           ;utils.c: 42: temp = (chars[i] & 0x0f);
  4805  060D  1683               	bsf	3,5	;RP0=1, select bank1
  4806  060E  1303               	bcf	3,6	;RP1=0, select bank1
  4807  060F  086D               	movf	convertToReal@i^(0+128),w
  4808  0610  076C               	addwf	convertToReal@chars^(0+128),w
  4809  0611  1283               	bcf	3,5	;RP0=0, select bank0
  4810  0612  1303               	bcf	3,6	;RP1=0, select bank0
  4811  0613  00DB               	movwf	??_convertToReal
  4812  0614  085B               	movf	??_convertToReal,w
  4813  0615  0084               	movwf	4
  4814  0616  0800               	movf	0,w
  4815  0617  390F               	andlw	15
  4816  0618  00DC               	movwf	??_convertToReal+1
  4817  0619  01DD               	clrf	??_convertToReal+2
  4818  061A  01DE               	clrf	??_convertToReal+3
  4819  061B  01DF               	clrf	??_convertToReal+4
  4820  061C  085F               	movf	??_convertToReal+4,w
  4821  061D  00A5               	movwf	___xxtofl@val+3
  4822  061E  085E               	movf	??_convertToReal+3,w
  4823  061F  00A4               	movwf	___xxtofl@val+2
  4824  0620  085D               	movf	??_convertToReal+2,w
  4825  0621  00A3               	movwf	___xxtofl@val+1
  4826  0622  085C               	movf	??_convertToReal+1,w
  4827  0623  00A2               	movwf	___xxtofl@val
  4828  0624  3001               	movlw	1
  4829  0625  120A  158A  2310  120A  118A  	fcall	___xxtofl
  4830  062A  1283               	bcf	3,5	;RP0=0, select bank0
  4831  062B  1303               	bcf	3,6	;RP1=0, select bank0
  4832  062C  0825               	movf	?___xxtofl+3,w
  4833  062D  1683               	bsf	3,5	;RP0=1, select bank1
  4834  062E  1303               	bcf	3,6	;RP1=0, select bank1
  4835  062F  00E3               	movwf	(convertToReal@temp+3)^(0+128)
  4836  0630  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0631  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0632  0824               	movf	?___xxtofl+2,w
  4839  0633  1683               	bsf	3,5	;RP0=1, select bank1
  4840  0634  1303               	bcf	3,6	;RP1=0, select bank1
  4841  0635  00E2               	movwf	(convertToReal@temp+2)^(0+128)
  4842  0636  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0637  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0638  0823               	movf	?___xxtofl+1,w
  4845  0639  1683               	bsf	3,5	;RP0=1, select bank1
  4846  063A  1303               	bcf	3,6	;RP1=0, select bank1
  4847  063B  00E1               	movwf	(convertToReal@temp+1)^(0+128)
  4848  063C  1283               	bcf	3,5	;RP0=0, select bank0
  4849  063D  1303               	bcf	3,6	;RP1=0, select bank0
  4850  063E  0822               	movf	?___xxtofl,w
  4851  063F  1683               	bsf	3,5	;RP0=1, select bank1
  4852  0640  1303               	bcf	3,6	;RP1=0, select bank1
  4853  0641  00E0               	movwf	convertToReal@temp^(0+128)
  4854                           
  4855                           ;utils.c: 43: if ( decimal != 1 ) {
  4856  0642  035F               	decf	convertToReal@decimal^(0+128),w
  4857  0643  1903               	btfsc	3,2
  4858  0644  2EA8               	goto	l3452
  4859                           
  4860                           ;utils.c: 44: value = (value * 10.0) + temp;
  4861  0645  0863               	movf	(convertToReal@temp+3)^(0+128),w
  4862  0646  1283               	bcf	3,5	;RP0=0, select bank0
  4863  0647  1303               	bcf	3,6	;RP1=0, select bank0
  4864  0648  00C6               	movwf	___fladd@b+3
  4865  0649  1683               	bsf	3,5	;RP0=1, select bank1
  4866  064A  1303               	bcf	3,6	;RP1=0, select bank1
  4867  064B  0862               	movf	(convertToReal@temp+2)^(0+128),w
  4868  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4869  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4870  064E  00C5               	movwf	___fladd@b+2
  4871  064F  1683               	bsf	3,5	;RP0=1, select bank1
  4872  0650  1303               	bcf	3,6	;RP1=0, select bank1
  4873  0651  0861               	movf	(convertToReal@temp+1)^(0+128),w
  4874  0652  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0653  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0654  00C4               	movwf	___fladd@b+1
  4877  0655  1683               	bsf	3,5	;RP0=1, select bank1
  4878  0656  1303               	bcf	3,6	;RP1=0, select bank1
  4879  0657  0860               	movf	convertToReal@temp^(0+128),w
  4880  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4881  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4882  065A  00C3               	movwf	___fladd@b
  4883  065B  3041               	movlw	65
  4884  065C  00AC               	movwf	___flmul@b+3
  4885  065D  3020               	movlw	32
  4886  065E  00AB               	movwf	___flmul@b+2
  4887  065F  3000               	movlw	0
  4888  0660  00AA               	movwf	___flmul@b+1
  4889  0661  3000               	movlw	0
  4890  0662  00A9               	movwf	___flmul@b
  4891  0663  1683               	bsf	3,5	;RP0=1, select bank1
  4892  0664  1303               	bcf	3,6	;RP1=0, select bank1
  4893  0665  086B               	movf	(convertToReal@value+3)^(0+128),w
  4894  0666  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0667  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0668  00B0               	movwf	___flmul@a+3
  4897  0669  1683               	bsf	3,5	;RP0=1, select bank1
  4898  066A  1303               	bcf	3,6	;RP1=0, select bank1
  4899  066B  086A               	movf	(convertToReal@value+2)^(0+128),w
  4900  066C  1283               	bcf	3,5	;RP0=0, select bank0
  4901  066D  1303               	bcf	3,6	;RP1=0, select bank0
  4902  066E  00AF               	movwf	___flmul@a+2
  4903  066F  1683               	bsf	3,5	;RP0=1, select bank1
  4904  0670  1303               	bcf	3,6	;RP1=0, select bank1
  4905  0671  0869               	movf	(convertToReal@value+1)^(0+128),w
  4906  0672  1283               	bcf	3,5	;RP0=0, select bank0
  4907  0673  1303               	bcf	3,6	;RP1=0, select bank0
  4908  0674  00AE               	movwf	___flmul@a+1
  4909  0675  1683               	bsf	3,5	;RP0=1, select bank1
  4910  0676  1303               	bcf	3,6	;RP1=0, select bank1
  4911  0677  0868               	movf	convertToReal@value^(0+128),w
  4912  0678  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0679  1303               	bcf	3,6	;RP1=0, select bank0
  4914  067A  00AD               	movwf	___flmul@a
  4915  067B  120A  118A  204B  120A  118A  	fcall	___flmul
  4916  0680  1283               	bcf	3,5	;RP0=0, select bank0
  4917  0681  1303               	bcf	3,6	;RP1=0, select bank0
  4918  0682  082C               	movf	?___flmul+3,w
  4919  0683  00CA               	movwf	___fladd@a+3
  4920  0684  082B               	movf	?___flmul+2,w
  4921  0685  00C9               	movwf	___fladd@a+2
  4922  0686  082A               	movf	?___flmul+1,w
  4923  0687  00C8               	movwf	___fladd@a+1
  4924  0688  0829               	movf	?___flmul,w
  4925  0689  00C7               	movwf	___fladd@a
  4926  068A  120A  118A  2360  120A  118A  	fcall	___fladd
  4927  068F  1283               	bcf	3,5	;RP0=0, select bank0
  4928  0690  1303               	bcf	3,6	;RP1=0, select bank0
  4929  0691  0846               	movf	?___fladd+3,w
  4930  0692  1683               	bsf	3,5	;RP0=1, select bank1
  4931  0693  1303               	bcf	3,6	;RP1=0, select bank1
  4932  0694  00EB               	movwf	(convertToReal@value+3)^(0+128)
  4933  0695  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0696  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0697  0845               	movf	?___fladd+2,w
  4936  0698  1683               	bsf	3,5	;RP0=1, select bank1
  4937  0699  1303               	bcf	3,6	;RP1=0, select bank1
  4938  069A  00EA               	movwf	(convertToReal@value+2)^(0+128)
  4939  069B  1283               	bcf	3,5	;RP0=0, select bank0
  4940  069C  1303               	bcf	3,6	;RP1=0, select bank0
  4941  069D  0844               	movf	?___fladd+1,w
  4942  069E  1683               	bsf	3,5	;RP0=1, select bank1
  4943  069F  1303               	bcf	3,6	;RP1=0, select bank1
  4944  06A0  00E9               	movwf	(convertToReal@value+1)^(0+128)
  4945  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  4946  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  4947  06A3  0843               	movf	?___fladd,w
  4948  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  4949  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  4950  06A6  00E8               	movwf	convertToReal@value^(0+128)
  4951                           
  4952                           ;utils.c: 45: } else {
  4953  06A7  2F59               	goto	l3454
  4954  06A8                     l3452:	
  4955                           
  4956                           ;utils.c: 46: value = value + (temp * potDez);
  4957  06A8  086B               	movf	(convertToReal@value+3)^(0+128),w
  4958  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  4959  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  4960  06AB  00C6               	movwf	___fladd@b+3
  4961  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  4962  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  4963  06AE  086A               	movf	(convertToReal@value+2)^(0+128),w
  4964  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  4965  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  4966  06B1  00C5               	movwf	___fladd@b+2
  4967  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  4968  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  4969  06B4  0869               	movf	(convertToReal@value+1)^(0+128),w
  4970  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  4971  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  4972  06B7  00C4               	movwf	___fladd@b+1
  4973  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  4974  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  4975  06BA  0868               	movf	convertToReal@value^(0+128),w
  4976  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  4977  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  4978  06BD  00C3               	movwf	___fladd@b
  4979  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  4980  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  4981  06C0  0867               	movf	(convertToReal@potDez+3)^(0+128),w
  4982  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  4983  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  4984  06C3  00AC               	movwf	___flmul@b+3
  4985  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  4986  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  4987  06C6  0866               	movf	(convertToReal@potDez+2)^(0+128),w
  4988  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4989  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4990  06C9  00AB               	movwf	___flmul@b+2
  4991  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  4992  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  4993  06CC  0865               	movf	(convertToReal@potDez+1)^(0+128),w
  4994  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  4995  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  4996  06CF  00AA               	movwf	___flmul@b+1
  4997  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  4998  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  4999  06D2  0864               	movf	convertToReal@potDez^(0+128),w
  5000  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  5001  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  5002  06D5  00A9               	movwf	___flmul@b
  5003  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  5004  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  5005  06D8  0863               	movf	(convertToReal@temp+3)^(0+128),w
  5006  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  5007  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  5008  06DB  00B0               	movwf	___flmul@a+3
  5009  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  5010  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  5011  06DE  0862               	movf	(convertToReal@temp+2)^(0+128),w
  5012  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  5013  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  5014  06E1  00AF               	movwf	___flmul@a+2
  5015  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  5016  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  5017  06E4  0861               	movf	(convertToReal@temp+1)^(0+128),w
  5018  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  5019  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  5020  06E7  00AE               	movwf	___flmul@a+1
  5021  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  5022  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  5023  06EA  0860               	movf	convertToReal@temp^(0+128),w
  5024  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  5025  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  5026  06ED  00AD               	movwf	___flmul@a
  5027  06EE  120A  118A  204B  120A  118A  	fcall	___flmul
  5028  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  5029  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  5030  06F5  082C               	movf	?___flmul+3,w
  5031  06F6  00CA               	movwf	___fladd@a+3
  5032  06F7  082B               	movf	?___flmul+2,w
  5033  06F8  00C9               	movwf	___fladd@a+2
  5034  06F9  082A               	movf	?___flmul+1,w
  5035  06FA  00C8               	movwf	___fladd@a+1
  5036  06FB  0829               	movf	?___flmul,w
  5037  06FC  00C7               	movwf	___fladd@a
  5038  06FD  120A  118A  2360  120A  118A  	fcall	___fladd
  5039  0702  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0703  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0704  0846               	movf	?___fladd+3,w
  5042  0705  1683               	bsf	3,5	;RP0=1, select bank1
  5043  0706  1303               	bcf	3,6	;RP1=0, select bank1
  5044  0707  00EB               	movwf	(convertToReal@value+3)^(0+128)
  5045  0708  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0709  1303               	bcf	3,6	;RP1=0, select bank0
  5047  070A  0845               	movf	?___fladd+2,w
  5048  070B  1683               	bsf	3,5	;RP0=1, select bank1
  5049  070C  1303               	bcf	3,6	;RP1=0, select bank1
  5050  070D  00EA               	movwf	(convertToReal@value+2)^(0+128)
  5051  070E  1283               	bcf	3,5	;RP0=0, select bank0
  5052  070F  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0710  0844               	movf	?___fladd+1,w
  5054  0711  1683               	bsf	3,5	;RP0=1, select bank1
  5055  0712  1303               	bcf	3,6	;RP1=0, select bank1
  5056  0713  00E9               	movwf	(convertToReal@value+1)^(0+128)
  5057  0714  1283               	bcf	3,5	;RP0=0, select bank0
  5058  0715  1303               	bcf	3,6	;RP1=0, select bank0
  5059  0716  0843               	movf	?___fladd,w
  5060  0717  1683               	bsf	3,5	;RP0=1, select bank1
  5061  0718  1303               	bcf	3,6	;RP1=0, select bank1
  5062  0719  00E8               	movwf	convertToReal@value^(0+128)
  5063                           
  5064                           ;utils.c: 47: potDez = potDez * 0.1;
  5065  071A  303D               	movlw	61
  5066  071B  1283               	bcf	3,5	;RP0=0, select bank0
  5067  071C  1303               	bcf	3,6	;RP1=0, select bank0
  5068  071D  00AC               	movwf	___flmul@b+3
  5069  071E  30CC               	movlw	204
  5070  071F  00AB               	movwf	___flmul@b+2
  5071  0720  30CC               	movlw	204
  5072  0721  00AA               	movwf	___flmul@b+1
  5073  0722  30CD               	movlw	205
  5074  0723  00A9               	movwf	___flmul@b
  5075  0724  1683               	bsf	3,5	;RP0=1, select bank1
  5076  0725  1303               	bcf	3,6	;RP1=0, select bank1
  5077  0726  0867               	movf	(convertToReal@potDez+3)^(0+128),w
  5078  0727  1283               	bcf	3,5	;RP0=0, select bank0
  5079  0728  1303               	bcf	3,6	;RP1=0, select bank0
  5080  0729  00B0               	movwf	___flmul@a+3
  5081  072A  1683               	bsf	3,5	;RP0=1, select bank1
  5082  072B  1303               	bcf	3,6	;RP1=0, select bank1
  5083  072C  0866               	movf	(convertToReal@potDez+2)^(0+128),w
  5084  072D  1283               	bcf	3,5	;RP0=0, select bank0
  5085  072E  1303               	bcf	3,6	;RP1=0, select bank0
  5086  072F  00AF               	movwf	___flmul@a+2
  5087  0730  1683               	bsf	3,5	;RP0=1, select bank1
  5088  0731  1303               	bcf	3,6	;RP1=0, select bank1
  5089  0732  0865               	movf	(convertToReal@potDez+1)^(0+128),w
  5090  0733  1283               	bcf	3,5	;RP0=0, select bank0
  5091  0734  1303               	bcf	3,6	;RP1=0, select bank0
  5092  0735  00AE               	movwf	___flmul@a+1
  5093  0736  1683               	bsf	3,5	;RP0=1, select bank1
  5094  0737  1303               	bcf	3,6	;RP1=0, select bank1
  5095  0738  0864               	movf	convertToReal@potDez^(0+128),w
  5096  0739  1283               	bcf	3,5	;RP0=0, select bank0
  5097  073A  1303               	bcf	3,6	;RP1=0, select bank0
  5098  073B  00AD               	movwf	___flmul@a
  5099  073C  120A  118A  204B  120A  118A  	fcall	___flmul
  5100  0741  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0742  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0743  082C               	movf	?___flmul+3,w
  5103  0744  1683               	bsf	3,5	;RP0=1, select bank1
  5104  0745  1303               	bcf	3,6	;RP1=0, select bank1
  5105  0746  00E7               	movwf	(convertToReal@potDez+3)^(0+128)
  5106  0747  1283               	bcf	3,5	;RP0=0, select bank0
  5107  0748  1303               	bcf	3,6	;RP1=0, select bank0
  5108  0749  082B               	movf	?___flmul+2,w
  5109  074A  1683               	bsf	3,5	;RP0=1, select bank1
  5110  074B  1303               	bcf	3,6	;RP1=0, select bank1
  5111  074C  00E6               	movwf	(convertToReal@potDez+2)^(0+128)
  5112  074D  1283               	bcf	3,5	;RP0=0, select bank0
  5113  074E  1303               	bcf	3,6	;RP1=0, select bank0
  5114  074F  082A               	movf	?___flmul+1,w
  5115  0750  1683               	bsf	3,5	;RP0=1, select bank1
  5116  0751  1303               	bcf	3,6	;RP1=0, select bank1
  5117  0752  00E5               	movwf	(convertToReal@potDez+1)^(0+128)
  5118  0753  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0754  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0755  0829               	movf	?___flmul,w
  5121  0756  1683               	bsf	3,5	;RP0=1, select bank1
  5122  0757  1303               	bcf	3,6	;RP1=0, select bank1
  5123  0758  00E4               	movwf	convertToReal@potDez^(0+128)
  5124  0759                     l3454:	
  5125  0759  3001               	movlw	1
  5126  075A  1283               	bcf	3,5	;RP0=0, select bank0
  5127  075B  1303               	bcf	3,6	;RP1=0, select bank0
  5128  075C  00DB               	movwf	??_convertToReal
  5129  075D  085B               	movf	??_convertToReal,w
  5130  075E  1683               	bsf	3,5	;RP0=1, select bank1
  5131  075F  1303               	bcf	3,6	;RP1=0, select bank1
  5132  0760  07ED               	addwf	convertToReal@i^(0+128),f
  5133  0761  2DBD               	goto	l485
  5134  0762                     l3458:	
  5135                           
  5136                           ;utils.c: 48: };utils.c: 50: };utils.c: 51: };utils.c: 52: return value * signal;
  5137  0762  1683               	bsf	3,5	;RP0=1, select bank1
  5138  0763  1303               	bcf	3,6	;RP1=0, select bank1
  5139  0764  085E               	movf	(convertToReal@signal+3)^(0+128),w
  5140  0765  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0766  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0767  00AC               	movwf	___flmul@b+3
  5143  0768  1683               	bsf	3,5	;RP0=1, select bank1
  5144  0769  1303               	bcf	3,6	;RP1=0, select bank1
  5145  076A  085D               	movf	(convertToReal@signal+2)^(0+128),w
  5146  076B  1283               	bcf	3,5	;RP0=0, select bank0
  5147  076C  1303               	bcf	3,6	;RP1=0, select bank0
  5148  076D  00AB               	movwf	___flmul@b+2
  5149  076E  1683               	bsf	3,5	;RP0=1, select bank1
  5150  076F  1303               	bcf	3,6	;RP1=0, select bank1
  5151  0770  085C               	movf	(convertToReal@signal+1)^(0+128),w
  5152  0771  1283               	bcf	3,5	;RP0=0, select bank0
  5153  0772  1303               	bcf	3,6	;RP1=0, select bank0
  5154  0773  00AA               	movwf	___flmul@b+1
  5155  0774  1683               	bsf	3,5	;RP0=1, select bank1
  5156  0775  1303               	bcf	3,6	;RP1=0, select bank1
  5157  0776  085B               	movf	convertToReal@signal^(0+128),w
  5158  0777  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0778  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0779  00A9               	movwf	___flmul@b
  5161  077A  1683               	bsf	3,5	;RP0=1, select bank1
  5162  077B  1303               	bcf	3,6	;RP1=0, select bank1
  5163  077C  086B               	movf	(convertToReal@value+3)^(0+128),w
  5164  077D  1283               	bcf	3,5	;RP0=0, select bank0
  5165  077E  1303               	bcf	3,6	;RP1=0, select bank0
  5166  077F  00B0               	movwf	___flmul@a+3
  5167  0780  1683               	bsf	3,5	;RP0=1, select bank1
  5168  0781  1303               	bcf	3,6	;RP1=0, select bank1
  5169  0782  086A               	movf	(convertToReal@value+2)^(0+128),w
  5170  0783  1283               	bcf	3,5	;RP0=0, select bank0
  5171  0784  1303               	bcf	3,6	;RP1=0, select bank0
  5172  0785  00AF               	movwf	___flmul@a+2
  5173  0786  1683               	bsf	3,5	;RP0=1, select bank1
  5174  0787  1303               	bcf	3,6	;RP1=0, select bank1
  5175  0788  0869               	movf	(convertToReal@value+1)^(0+128),w
  5176  0789  1283               	bcf	3,5	;RP0=0, select bank0
  5177  078A  1303               	bcf	3,6	;RP1=0, select bank0
  5178  078B  00AE               	movwf	___flmul@a+1
  5179  078C  1683               	bsf	3,5	;RP0=1, select bank1
  5180  078D  1303               	bcf	3,6	;RP1=0, select bank1
  5181  078E  0868               	movf	convertToReal@value^(0+128),w
  5182  078F  1283               	bcf	3,5	;RP0=0, select bank0
  5183  0790  1303               	bcf	3,6	;RP1=0, select bank0
  5184  0791  00AD               	movwf	___flmul@a
  5185  0792  120A  118A  204B   	fcall	___flmul
  5186  0795  1283               	bcf	3,5	;RP0=0, select bank0
  5187  0796  1303               	bcf	3,6	;RP1=0, select bank0
  5188  0797  082C               	movf	?___flmul+3,w
  5189  0798  00DA               	movwf	?_convertToReal+3
  5190  0799  082B               	movf	?___flmul+2,w
  5191  079A  00D9               	movwf	?_convertToReal+2
  5192  079B  082A               	movf	?___flmul+1,w
  5193  079C  00D8               	movwf	?_convertToReal+1
  5194  079D  0829               	movf	?___flmul,w
  5195  079E  00D7               	movwf	?_convertToReal
  5196  079F  0008               	return
  5197  07A0                     __end_of_convertToReal:	
  5198                           
  5199                           	psect	text32
  5200  0D43                     __ptext32:	
  5201 ;; *************** function _pid_pid *****************
  5202 ;; Defined at:
  5203 ;;		line 43 in file "pid.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;		None
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  1    wreg      void 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5217 ;;      Params:         0       0       0       0       0
  5218 ;;      Locals:         0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0
  5220 ;;      Totals:         0       0       0       0       0
  5221 ;;Total ram usage:        0 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    3
  5224 ;; This function calls:
  5225 ;;		___fldiv
  5226 ;;		___flmul
  5227 ;;		___flsub
  5228 ;;		___xxtofl
  5229 ;;		_mot_setExcitation
  5230 ;;		_pid_scaleExcitation
  5231 ;;		_pos_getCurrentPosition
  5232 ;; This function is called by:
  5233 ;;		_pid_task
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function _pid_pid
  5239  0D43                     _pid_pid:	
  5240                           
  5241                           ;pid.c: 45: if (RC5 == 0)
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in _pid_pid: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5245  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0D45  1A87               	btfsc	7,5	;volatile
  5248  0D46  2D49               	goto	l105
  5249                           
  5250                           ;pid.c: 46: RC5 = 1;
  5251  0D47  1687               	bsf	7,5	;volatile
  5252  0D48  2D4A               	goto	l3278
  5253  0D49                     l105:	
  5254                           
  5255                           ;pid.c: 47: else;pid.c: 48: RC5 = 0;
  5256  0D49  1287               	bcf	7,5	;volatile
  5257  0D4A                     l3278:	
  5258                           
  5259                           ;pid.c: 50: currentPosition = pos_getCurrentPosition();
  5260  0D4A  160A  118A  257E  120A  158A  	fcall	_pos_getCurrentPosition
  5261  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0D51  0820               	movf	?_pos_getCurrentPosition,w
  5264  0D52  00A2               	movwf	___xxtofl@val
  5265  0D53  0821               	movf	?_pos_getCurrentPosition+1,w
  5266  0D54  00A3               	movwf	___xxtofl@val+1
  5267  0D55  3000               	movlw	0
  5268  0D56  1BA3               	btfsc	___xxtofl@val+1,7
  5269  0D57  30FF               	movlw	255
  5270  0D58  00A4               	movwf	___xxtofl@val+2
  5271  0D59  00A5               	movwf	___xxtofl@val+3
  5272  0D5A  3001               	movlw	1
  5273  0D5B  120A  158A  2310  120A  158A  	fcall	___xxtofl
  5274  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0D62  0825               	movf	?___xxtofl+3,w
  5277  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  5278  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  5279  0D65  00CF               	movwf	(_currentPosition+3)^(0+128)
  5280  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  5281  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  5282  0D68  0824               	movf	?___xxtofl+2,w
  5283  0D69  1683               	bsf	3,5	;RP0=1, select bank1
  5284  0D6A  1303               	bcf	3,6	;RP1=0, select bank1
  5285  0D6B  00CE               	movwf	(_currentPosition+2)^(0+128)
  5286  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  5287  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0D6E  0823               	movf	?___xxtofl+1,w
  5289  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  5290  0D70  1303               	bcf	3,6	;RP1=0, select bank1
  5291  0D71  00CD               	movwf	(_currentPosition+1)^(0+128)
  5292  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  5293  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  5294  0D74  0822               	movf	?___xxtofl,w
  5295  0D75  1683               	bsf	3,5	;RP0=1, select bank1
  5296  0D76  1303               	bcf	3,6	;RP1=0, select bank1
  5297  0D77  00CC               	movwf	_currentPosition^(0+128)
  5298                           
  5299                           ;pid.c: 51: error = setPoint - currentPosition/5;
  5300  0D78  3040               	movlw	64
  5301  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0D7B  00A3               	movwf	___fldiv@a+3
  5304  0D7C  30A0               	movlw	160
  5305  0D7D  00A2               	movwf	___fldiv@a+2
  5306  0D7E  3000               	movlw	0
  5307  0D7F  00A1               	movwf	___fldiv@a+1
  5308  0D80  3000               	movlw	0
  5309  0D81  00A0               	movwf	___fldiv@a
  5310  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  5311  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  5312  0D84  084F               	movf	(_currentPosition+3)^(0+128),w
  5313  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  5314  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  5315  0D87  00A7               	movwf	___fldiv@b+3
  5316  0D88  1683               	bsf	3,5	;RP0=1, select bank1
  5317  0D89  1303               	bcf	3,6	;RP1=0, select bank1
  5318  0D8A  084E               	movf	(_currentPosition+2)^(0+128),w
  5319  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0D8D  00A6               	movwf	___fldiv@b+2
  5322  0D8E  1683               	bsf	3,5	;RP0=1, select bank1
  5323  0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  5324  0D90  084D               	movf	(_currentPosition+1)^(0+128),w
  5325  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0D93  00A5               	movwf	___fldiv@b+1
  5328  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  5329  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  5330  0D96  084C               	movf	_currentPosition^(0+128),w
  5331  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5332  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5333  0D99  00A4               	movwf	___fldiv@b
  5334  0D9A  120A  158A  265D  120A  158A  	fcall	___fldiv
  5335  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0DA1  0823               	movf	?___fldiv+3,w
  5338  0DA2  00DA               	movwf	___flsub@a+3
  5339  0DA3  0822               	movf	?___fldiv+2,w
  5340  0DA4  00D9               	movwf	___flsub@a+2
  5341  0DA5  0821               	movf	?___fldiv+1,w
  5342  0DA6  00D8               	movwf	___flsub@a+1
  5343  0DA7  0820               	movf	?___fldiv,w
  5344  0DA8  00D7               	movwf	___flsub@a
  5345  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  5346  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  5347  0DAB  084B               	movf	(_setPoint+3)^(0+128),w
  5348  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  5349  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  5350  0DAE  00DE               	movwf	___flsub@b+3
  5351  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  5352  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  5353  0DB1  084A               	movf	(_setPoint+2)^(0+128),w
  5354  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  5355  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  5356  0DB4  00DD               	movwf	___flsub@b+2
  5357  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  5358  0DB6  1303               	bcf	3,6	;RP1=0, select bank1
  5359  0DB7  0849               	movf	(_setPoint+1)^(0+128),w
  5360  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  5361  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  5362  0DBA  00DC               	movwf	___flsub@b+1
  5363  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  5364  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  5365  0DBD  0848               	movf	_setPoint^(0+128),w
  5366  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  5367  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  5368  0DC0  00DB               	movwf	___flsub@b
  5369  0DC1  160A  118A  2719  120A  158A  	fcall	___flsub
  5370  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0DC8  085A               	movf	?___flsub+3,w
  5373  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  5374  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  5375  0DCB  00B7               	movwf	(_error+3)^(0+128)
  5376  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0DCE  0859               	movf	?___flsub+2,w
  5379  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  5380  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  5381  0DD1  00B6               	movwf	(_error+2)^(0+128)
  5382  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  5383  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  5384  0DD4  0858               	movf	?___flsub+1,w
  5385  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  5386  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  5387  0DD7  00B5               	movwf	(_error+1)^(0+128)
  5388  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  5389  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  5390  0DDA  0857               	movf	?___flsub,w
  5391  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  5392  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  5393  0DDD  00B4               	movwf	_error^(0+128)
  5394                           
  5395                           ;pid.c: 52: activation = kProportional * error;
  5396  0DDE  0837               	movf	(_error+3)^(0+128),w
  5397  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  5398  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  5399  0DE1  00AC               	movwf	___flmul@b+3
  5400  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  5401  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  5402  0DE4  0836               	movf	(_error+2)^(0+128),w
  5403  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0DE7  00AB               	movwf	___flmul@b+2
  5406  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  5407  0DE9  1303               	bcf	3,6	;RP1=0, select bank1
  5408  0DEA  0835               	movf	(_error+1)^(0+128),w
  5409  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  5410  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  5411  0DED  00AA               	movwf	___flmul@b+1
  5412  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  5413  0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  5414  0DF0  0834               	movf	_error^(0+128),w
  5415  0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0DF3  00A9               	movwf	___flmul@b
  5418  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  5419  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  5420  0DF6  083F               	movf	(_kProportional+3)^(0+128),w
  5421  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0DF9  00B0               	movwf	___flmul@a+3
  5424  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  5425  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  5426  0DFC  083E               	movf	(_kProportional+2)^(0+128),w
  5427  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  5428  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  5429  0DFF  00AF               	movwf	___flmul@a+2
  5430  0E00  1683               	bsf	3,5	;RP0=1, select bank1
  5431  0E01  1303               	bcf	3,6	;RP1=0, select bank1
  5432  0E02  083D               	movf	(_kProportional+1)^(0+128),w
  5433  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5434  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5435  0E05  00AE               	movwf	___flmul@a+1
  5436  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  5437  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  5438  0E08  083C               	movf	_kProportional^(0+128),w
  5439  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  5440  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0E0B  00AD               	movwf	___flmul@a
  5442  0E0C  120A  118A  204B  120A  158A  	fcall	___flmul
  5443  0E11  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0E12  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0E13  082C               	movf	?___flmul+3,w
  5446  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  5447  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  5448  0E16  00BB               	movwf	(_activation+3)^(0+128)
  5449  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  5451  0E19  082B               	movf	?___flmul+2,w
  5452  0E1A  1683               	bsf	3,5	;RP0=1, select bank1
  5453  0E1B  1303               	bcf	3,6	;RP1=0, select bank1
  5454  0E1C  00BA               	movwf	(_activation+2)^(0+128)
  5455  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0E1F  082A               	movf	?___flmul+1,w
  5458  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  5459  0E21  1303               	bcf	3,6	;RP1=0, select bank1
  5460  0E22  00B9               	movwf	(_activation+1)^(0+128)
  5461  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  5462  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  5463  0E25  0829               	movf	?___flmul,w
  5464  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  5465  0E27  1303               	bcf	3,6	;RP1=0, select bank1
  5466  0E28  00B8               	movwf	_activation^(0+128)
  5467                           
  5468                           ;pid.c: 55: excitation = pid_scaleExcitation(activation);
  5469  0E29  083B               	movf	(_activation+3)^(0+128),w
  5470  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5471  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5472  0E2C  00AE               	movwf	pid_scaleExcitation@activation+3
  5473  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  5474  0E2E  1303               	bcf	3,6	;RP1=0, select bank1
  5475  0E2F  083A               	movf	(_activation+2)^(0+128),w
  5476  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0E32  00AD               	movwf	pid_scaleExcitation@activation+2
  5479  0E33  1683               	bsf	3,5	;RP0=1, select bank1
  5480  0E34  1303               	bcf	3,6	;RP1=0, select bank1
  5481  0E35  0839               	movf	(_activation+1)^(0+128),w
  5482  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  5483  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  5484  0E38  00AC               	movwf	pid_scaleExcitation@activation+1
  5485  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  5486  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  5487  0E3B  0838               	movf	_activation^(0+128),w
  5488  0E3C  1283               	bcf	3,5	;RP0=0, select bank0
  5489  0E3D  1303               	bcf	3,6	;RP1=0, select bank0
  5490  0E3E  00AB               	movwf	pid_scaleExcitation@activation
  5491  0E3F  120A  158A  214B  120A  158A  	fcall	_pid_scaleExcitation
  5492  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  5494  0E46  082C               	movf	?_pid_scaleExcitation+1,w
  5495  0E47  00EA               	movwf	_excitation+1
  5496  0E48  082B               	movf	?_pid_scaleExcitation,w
  5497  0E49  00E9               	movwf	_excitation
  5498                           
  5499                           ;pid.c: 56: GIE = 0;
  5500  0E4A  138B               	bcf	11,7	;volatile
  5501                           
  5502                           ;pid.c: 57: mot_setExcitation(excitation);
  5503  0E4B  086A               	movf	_excitation+1,w
  5504  0E4C  00A1               	movwf	mot_setExcitation@excitation+1
  5505  0E4D  0869               	movf	_excitation,w
  5506  0E4E  00A0               	movwf	mot_setExcitation@excitation
  5507  0E4F  120A  158A  20EA  120A  158A  	fcall	_mot_setExcitation
  5508                           
  5509                           ;pid.c: 58: GIE = 1;
  5510  0E54  178B               	bsf	11,7	;volatile
  5511                           
  5512                           ;pid.c: 59: if (RC5 == 0)
  5513  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  5514  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  5515  0E57  1A87               	btfsc	7,5	;volatile
  5516  0E58  2E5B               	goto	l107
  5517                           
  5518                           ;pid.c: 60: RC5 = 1;
  5519  0E59  1687               	bsf	7,5	;volatile
  5520  0E5A  0008               	return
  5521  0E5B                     l107:	
  5522                           
  5523                           ;pid.c: 61: else;pid.c: 62: RC5 = 0;
  5524  0E5B  1287               	bcf	7,5	;volatile
  5525  0E5C  0008               	return
  5526  0E5D                     __end_of_pid_pid:	
  5527                           
  5528                           	psect	text33
  5529  157E                     __ptext33:	
  5530 ;; *************** function _pos_getCurrentPosition *****************
  5531 ;; Defined at:
  5532 ;;		line 20 in file "position_sensor_implementation.h"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;		None
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  2    0[BANK0 ] int 
  5539 ;; Registers used:
  5540 ;;		wreg
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5546 ;;      Params:         0       2       0       0       0
  5547 ;;      Locals:         0       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0
  5549 ;;      Totals:         0       2       0       0       0
  5550 ;;Total ram usage:        2 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_pid_pid
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           
  5561                           ;psect for function _pos_getCurrentPosition
  5562  157E                     _pos_getCurrentPosition:	
  5563                           
  5564                           ;position_sensor_implementation.h: 21: return pos_currentPosition;
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in _pos_getCurrentPosition: [wreg]
  5568  157E  1683               	bsf	3,5	;RP0=1, select bank1
  5569  157F  1303               	bcf	3,6	;RP1=0, select bank1
  5570  1580  0855               	movf	(_pos_currentPosition+1)^(0+128),w	;volatile
  5571  1581  1283               	bcf	3,5	;RP0=0, select bank0
  5572  1582  1303               	bcf	3,6	;RP1=0, select bank0
  5573  1583  00A1               	movwf	?_pos_getCurrentPosition+1
  5574  1584  1683               	bsf	3,5	;RP0=1, select bank1
  5575  1585  1303               	bcf	3,6	;RP1=0, select bank1
  5576  1586  0854               	movf	_pos_currentPosition^(0+128),w	;volatile
  5577  1587  1283               	bcf	3,5	;RP0=0, select bank0
  5578  1588  1303               	bcf	3,6	;RP1=0, select bank0
  5579  1589  00A0               	movwf	?_pos_getCurrentPosition
  5580  158A  0008               	return
  5581  158B                     __end_of_pos_getCurrentPosition:	
  5582                           
  5583                           	psect	text34
  5584  094B                     __ptext34:	
  5585 ;; *************** function _pid_scaleExcitation *****************
  5586 ;; Defined at:
  5587 ;;		line 24 in file "pid.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  activation      4   11[BANK0 ] float 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  2   11[BANK0 ] int 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5601 ;;      Params:         0       4       0       0       0
  5602 ;;      Locals:         0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0
  5604 ;;      Totals:         0       4       0       0       0
  5605 ;;Total ram usage:        4 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    2
  5608 ;; This function calls:
  5609 ;;		___fltol
  5610 ;; This function is called by:
  5611 ;;		_pid_pid
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           
  5616                           ;psect for function _pid_scaleExcitation
  5617  094B                     _pid_scaleExcitation:	
  5618                           
  5619                           ;pid.c: 26: excitation = ( int ) activation;
  5620                           
  5621                           ;incstack = 0
  5622                           ; Regs used in _pid_scaleExcitation: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5623  094B  1283               	bcf	3,5	;RP0=0, select bank0
  5624  094C  1303               	bcf	3,6	;RP1=0, select bank0
  5625  094D  082E               	movf	pid_scaleExcitation@activation+3,w
  5626  094E  00A3               	movwf	___fltol@f1+3
  5627  094F  082D               	movf	pid_scaleExcitation@activation+2,w
  5628  0950  00A2               	movwf	___fltol@f1+2
  5629  0951  082C               	movf	pid_scaleExcitation@activation+1,w
  5630  0952  00A1               	movwf	___fltol@f1+1
  5631  0953  082B               	movf	pid_scaleExcitation@activation,w
  5632  0954  00A0               	movwf	___fltol@f1
  5633  0955  120A  158A  2216  120A  158A  	fcall	___fltol
  5634  095A  1283               	bcf	3,5	;RP0=0, select bank0
  5635  095B  1303               	bcf	3,6	;RP1=0, select bank0
  5636  095C  0821               	movf	?___fltol+1,w
  5637  095D  00EA               	movwf	_excitation+1
  5638  095E  0820               	movf	?___fltol,w
  5639  095F  00E9               	movwf	_excitation
  5640                           
  5641                           ;pid.c: 27: if (excitation > 0)
  5642  0960  086A               	movf	_excitation+1,w
  5643  0961  3A80               	xorlw	128
  5644  0962  00FF               	movwf	127
  5645  0963  3080               	movlw	128
  5646  0964  027F               	subwf	127,w
  5647  0965  1D03               	skipz
  5648  0966  2969               	goto	u2925
  5649  0967  3001               	movlw	1
  5650  0968  0269               	subwf	_excitation,w
  5651  0969                     u2925:	
  5652  0969  1C03               	skipc
  5653  096A  2975               	goto	l93
  5654                           
  5655                           ;pid.c: 28: excitation = 150 + excitation;
  5656  096B  1283               	bcf	3,5	;RP0=0, select bank0
  5657  096C  1303               	bcf	3,6	;RP1=0, select bank0
  5658  096D  0869               	movf	_excitation,w
  5659  096E  3E96               	addlw	150
  5660  096F  00E9               	movwf	_excitation
  5661  0970  086A               	movf	_excitation+1,w
  5662  0971  1803               	skipnc
  5663  0972  3E01               	addlw	1
  5664  0973  3E00               	addlw	0
  5665  0974  2980               	goto	L3
  5666  0975                     l93:	
  5667                           
  5668                           ;pid.c: 29: else if (excitation < 0)
  5669  0975  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0976  1303               	bcf	3,6	;RP1=0, select bank0
  5671  0977  1FEA               	btfss	_excitation+1,7
  5672  0978  2981               	goto	l2762
  5673                           
  5674                           ;pid.c: 30: excitation = -150 + excitation;
  5675  0979  0869               	movf	_excitation,w
  5676  097A  3E6A               	addlw	106
  5677  097B  00E9               	movwf	_excitation
  5678  097C  086A               	movf	_excitation+1,w
  5679  097D  1803               	skipnc
  5680  097E  3E01               	addlw	1
  5681  097F  3EFF               	addlw	255
  5682  0980                     L3:	
  5683  0980  00EA               	movwf	_excitation+1
  5684  0981                     l2762:	
  5685                           
  5686                           ;pid.c: 31: if (excitation > 1000)
  5687  0981  086A               	movf	_excitation+1,w
  5688  0982  3A80               	xorlw	128
  5689  0983  00FF               	movwf	127
  5690  0984  3083               	movlw	131
  5691  0985  027F               	subwf	127,w
  5692  0986  1D03               	skipz
  5693  0987  298A               	goto	u2945
  5694  0988  30E9               	movlw	233
  5695  0989  0269               	subwf	_excitation,w
  5696  098A                     u2945:	
  5697  098A  1C03               	skipc
  5698  098B  2992               	goto	l2766
  5699                           
  5700                           ;pid.c: 32: excitation = 1000;
  5701  098C  30E8               	movlw	232
  5702  098D  1283               	bcf	3,5	;RP0=0, select bank0
  5703  098E  1303               	bcf	3,6	;RP1=0, select bank0
  5704  098F  00E9               	movwf	_excitation
  5705  0990  3003               	movlw	3
  5706  0991  00EA               	movwf	_excitation+1
  5707  0992                     l2766:	
  5708                           
  5709                           ;pid.c: 33: if (excitation < -1000)
  5710  0992  1283               	bcf	3,5	;RP0=0, select bank0
  5711  0993  1303               	bcf	3,6	;RP1=0, select bank0
  5712  0994  086A               	movf	_excitation+1,w
  5713  0995  3A80               	xorlw	128
  5714  0996  00FF               	movwf	127
  5715  0997  307C               	movlw	124
  5716  0998  027F               	subwf	127,w
  5717  0999  1D03               	skipz
  5718  099A  299D               	goto	u2955
  5719  099B  3018               	movlw	24
  5720  099C  0269               	subwf	_excitation,w
  5721  099D                     u2955:	
  5722  099D  1803               	skipnc
  5723  099E  29A5               	goto	l97
  5724                           
  5725                           ;pid.c: 34: excitation = -1000;
  5726  099F  3018               	movlw	24
  5727  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  5728  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  5729  09A2  00E9               	movwf	_excitation
  5730  09A3  30FC               	movlw	252
  5731  09A4  00EA               	movwf	_excitation+1
  5732  09A5                     l97:	
  5733                           
  5734                           ;pid.c: 35: return excitation;
  5735  09A5  1283               	bcf	3,5	;RP0=0, select bank0
  5736  09A6  1303               	bcf	3,6	;RP1=0, select bank0
  5737  09A7  086A               	movf	_excitation+1,w
  5738  09A8  00AC               	movwf	?_pid_scaleExcitation+1
  5739  09A9  0869               	movf	_excitation,w
  5740  09AA  00AB               	movwf	?_pid_scaleExcitation
  5741  09AB  0008               	return
  5742  09AC                     __end_of_pid_scaleExcitation:	
  5743                           
  5744                           	psect	text35
  5745  0A16                     __ptext35:	
  5746 ;; *************** function ___fltol *****************
  5747 ;; Defined at:
  5748 ;;		line 43 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  f1              4    0[BANK0 ] int 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  exp1            1   10[BANK0 ] unsigned char 
  5753 ;;  sign1           1    9[BANK0 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  4    0[BANK0 ] long 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5763 ;;      Params:         0       4       0       0       0
  5764 ;;      Locals:         0       2       0       0       0
  5765 ;;      Temps:          0       5       0       0       0
  5766 ;;      Totals:         0      11       0       0       0
  5767 ;;Total ram usage:       11 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_pid_scaleExcitation
  5774 ;;		_sprintf
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           
  5779                           ;psect for function ___fltol
  5780  0A16                     ___fltol:	
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5784  0A16  1003               	clrc
  5785  0A17  1283               	bcf	3,5	;RP0=0, select bank0
  5786  0A18  1303               	bcf	3,6	;RP1=0, select bank0
  5787  0A19  0D22               	rlf	___fltol@f1+2,w
  5788  0A1A  0D23               	rlf	___fltol@f1+3,w
  5789  0A1B  00A4               	movwf	??___fltol
  5790  0A1C  0824               	movf	??___fltol,w
  5791  0A1D  00AA               	movwf	___fltol@exp1
  5792  0A1E  082A               	movf	___fltol@exp1,w
  5793  0A1F  1D03               	btfss	3,2
  5794  0A20  2A2A               	goto	l2484
  5795  0A21                     l2480:	
  5796  0A21  3000               	movlw	0
  5797  0A22  00A3               	movwf	?___fltol+3
  5798  0A23  3000               	movlw	0
  5799  0A24  00A2               	movwf	?___fltol+2
  5800  0A25  3000               	movlw	0
  5801  0A26  00A1               	movwf	?___fltol+1
  5802  0A27  3000               	movlw	0
  5803  0A28  00A0               	movwf	?___fltol
  5804  0A29  0008               	return
  5805  0A2A                     l2484:	
  5806  0A2A  0820               	movf	___fltol@f1,w
  5807  0A2B  00A4               	movwf	??___fltol
  5808  0A2C  0821               	movf	___fltol@f1+1,w
  5809  0A2D  00A5               	movwf	??___fltol+1
  5810  0A2E  0822               	movf	___fltol@f1+2,w
  5811  0A2F  00A6               	movwf	??___fltol+2
  5812  0A30  0823               	movf	___fltol@f1+3,w
  5813  0A31  00A7               	movwf	??___fltol+3
  5814  0A32  301F               	movlw	31
  5815  0A33                     u2315:	
  5816  0A33  1003               	clrc
  5817  0A34  0CA7               	rrf	??___fltol+3,f
  5818  0A35  0CA6               	rrf	??___fltol+2,f
  5819  0A36  0CA5               	rrf	??___fltol+1,f
  5820  0A37  0CA4               	rrf	??___fltol,f
  5821  0A38  3EFF               	addlw	-1
  5822  0A39  1D03               	skipz
  5823  0A3A  2A33               	goto	u2315
  5824  0A3B  0824               	movf	??___fltol,w
  5825  0A3C  00A8               	movwf	??___fltol+4
  5826  0A3D  0828               	movf	??___fltol+4,w
  5827  0A3E  00A9               	movwf	___fltol@sign1
  5828  0A3F  17A2               	bsf	___fltol@f1+2,7
  5829  0A40  30FF               	movlw	255
  5830  0A41  05A0               	andwf	___fltol@f1,f
  5831  0A42  30FF               	movlw	255
  5832  0A43  05A1               	andwf	___fltol@f1+1,f
  5833  0A44  30FF               	movlw	255
  5834  0A45  05A2               	andwf	___fltol@f1+2,f
  5835  0A46  3000               	movlw	0
  5836  0A47  05A3               	andwf	___fltol@f1+3,f
  5837  0A48  3096               	movlw	150
  5838  0A49  02AA               	subwf	___fltol@exp1,f
  5839  0A4A  1FAA               	btfss	___fltol@exp1,7
  5840  0A4B  2A61               	goto	l2502
  5841  0A4C  082A               	movf	___fltol@exp1,w
  5842  0A4D  3A80               	xorlw	128
  5843  0A4E  3E97               	addlw	151
  5844  0A4F  1C03               	btfss	3,0
  5845  0A50  2A21               	goto	l2480
  5846  0A51                     l2500:	
  5847  0A51  3001               	movlw	1
  5848  0A52                     u2345:	
  5849  0A52  1003               	clrc
  5850  0A53  0CA3               	rrf	___fltol@f1+3,f
  5851  0A54  0CA2               	rrf	___fltol@f1+2,f
  5852  0A55  0CA1               	rrf	___fltol@f1+1,f
  5853  0A56  0CA0               	rrf	___fltol@f1,f
  5854  0A57  3EFF               	addlw	-1
  5855  0A58  1D03               	skipz
  5856  0A59  2A52               	goto	u2345
  5857  0A5A  3001               	movlw	1
  5858  0A5B  00A4               	movwf	??___fltol
  5859  0A5C  0824               	movf	??___fltol,w
  5860  0A5D  07AA               	addwf	___fltol@exp1,f
  5861  0A5E  1903               	btfsc	3,2
  5862  0A5F  2A74               	goto	l2510
  5863  0A60  2A51               	goto	l2500
  5864  0A61                     l2502:	
  5865  0A61  3020               	movlw	32
  5866  0A62  022A               	subwf	___fltol@exp1,w
  5867  0A63  1803               	btfsc	3,0
  5868  0A64  2A21               	goto	l2480
  5869  0A65                     l874:	
  5870  0A65  082A               	movf	___fltol@exp1,w
  5871  0A66  1903               	btfsc	3,2
  5872  0A67  2A74               	goto	l2510
  5873  0A68  3001               	movlw	1
  5874  0A69  00A4               	movwf	??___fltol
  5875  0A6A                     u2375:	
  5876  0A6A  1003               	clrc
  5877  0A6B  0DA0               	rlf	___fltol@f1,f
  5878  0A6C  0DA1               	rlf	___fltol@f1+1,f
  5879  0A6D  0DA2               	rlf	___fltol@f1+2,f
  5880  0A6E  0DA3               	rlf	___fltol@f1+3,f
  5881  0A6F  0BA4               	decfsz	??___fltol,f
  5882  0A70  2A6A               	goto	u2375
  5883  0A71  3001               	movlw	1
  5884  0A72  02AA               	subwf	___fltol@exp1,f
  5885  0A73  2A65               	goto	l874
  5886  0A74                     l2510:	
  5887  0A74  0829               	movf	___fltol@sign1,w
  5888  0A75  1903               	btfsc	3,2
  5889  0A76  0008               	return
  5890  0A77  09A0               	comf	___fltol@f1,f
  5891  0A78  09A1               	comf	___fltol@f1+1,f
  5892  0A79  09A2               	comf	___fltol@f1+2,f
  5893  0A7A  09A3               	comf	___fltol@f1+3,f
  5894  0A7B  0AA0               	incf	___fltol@f1,f
  5895  0A7C  1903               	skipnz
  5896  0A7D  0AA1               	incf	___fltol@f1+1,f
  5897  0A7E  1903               	skipnz
  5898  0A7F  0AA2               	incf	___fltol@f1+2,f
  5899  0A80  1903               	skipnz
  5900  0A81  0AA3               	incf	___fltol@f1+3,f
  5901  0A82  0008               	return
  5902  0A83                     __end_of___fltol:	
  5903                           
  5904                           	psect	text36
  5905  08EA                     __ptext36:	
  5906 ;; *************** function _mot_setExcitation *****************
  5907 ;; Defined at:
  5908 ;;		line 9 in file "motor.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  excitation      2    0[BANK0 ] int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  value           2    4[BANK0 ] int 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         0       2       0       0       0
  5923 ;;      Locals:         0       2       0       0       0
  5924 ;;      Temps:          0       2       0       0       0
  5925 ;;      Totals:         0       6       0       0       0
  5926 ;;Total ram usage:        6 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_mot_init
  5933 ;;		_pid_pid
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           
  5938                           ;psect for function _mot_setExcitation
  5939  08EA                     _mot_setExcitation:	
  5940                           
  5941                           ;motor.c: 10: int value;;motor.c: 11: if (excitation >= 0) {
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in _mot_setExcitation: [wreg+status,2+status,0]
  5945  08EA  1283               	bcf	3,5	;RP0=0, select bank0
  5946  08EB  1303               	bcf	3,6	;RP1=0, select bank0
  5947  08EC  1BA1               	btfsc	mot_setExcitation@excitation+1,7
  5948  08ED  2919               	goto	l2738
  5949                           
  5950                           ;motor.c: 12: value = excitation & 0x3FC;
  5951  08EE  30FC               	movlw	252
  5952  08EF  0520               	andwf	mot_setExcitation@excitation,w
  5953  08F0  00A4               	movwf	mot_setExcitation@value
  5954  08F1  3003               	movlw	3
  5955  08F2  0521               	andwf	mot_setExcitation@excitation+1,w
  5956  08F3  00A5               	movwf	mot_setExcitation@value+1
  5957                           
  5958                           ;motor.c: 13: CCPR1L = (value >> 2);
  5959  08F4  0825               	movf	mot_setExcitation@value+1,w
  5960  08F5  00A3               	movwf	??_mot_setExcitation+1
  5961  08F6  0824               	movf	mot_setExcitation@value,w
  5962  08F7  00A2               	movwf	??_mot_setExcitation
  5963  08F8  0D23               	rlf	??_mot_setExcitation+1,w
  5964  08F9  0CA3               	rrf	??_mot_setExcitation+1,f
  5965  08FA  0CA2               	rrf	??_mot_setExcitation,f
  5966  08FB  0D23               	rlf	??_mot_setExcitation+1,w
  5967  08FC  0CA3               	rrf	??_mot_setExcitation+1,f
  5968  08FD  0CA2               	rrf	??_mot_setExcitation,f
  5969  08FE  0822               	movf	??_mot_setExcitation,w
  5970  08FF  0095               	movwf	21	;volatile
  5971                           
  5972                           ;motor.c: 14: value = excitation & 0x0003;
  5973  0900  3003               	movlw	3
  5974  0901  0520               	andwf	mot_setExcitation@excitation,w
  5975  0902  00A4               	movwf	mot_setExcitation@value
  5976  0903  3000               	movlw	0
  5977  0904  0521               	andwf	mot_setExcitation@excitation+1,w
  5978  0905  00A5               	movwf	mot_setExcitation@value+1
  5979                           
  5980                           ;motor.c: 15: CCP1Y = 0;
  5981  0906  1217               	bcf	23,4	;volatile
  5982                           
  5983                           ;motor.c: 16: CCP1X = 0;
  5984  0907  1297               	bcf	23,5	;volatile
  5985                           
  5986                           ;motor.c: 17: CCP1CON |= (value << 4);
  5987  0908  0824               	movf	mot_setExcitation@value,w
  5988  0909  00A2               	movwf	??_mot_setExcitation
  5989  090A  3003               	movlw	3
  5990  090B                     u2905:	
  5991  090B  1003               	clrc
  5992  090C  0DA2               	rlf	??_mot_setExcitation,f
  5993  090D  3EFF               	addlw	-1
  5994  090E  1D03               	skipz
  5995  090F  290B               	goto	u2905
  5996  0910  1003               	clrc
  5997  0911  0D22               	rlf	??_mot_setExcitation,w
  5998  0912  00A3               	movwf	??_mot_setExcitation+1
  5999  0913  0823               	movf	??_mot_setExcitation+1,w
  6000  0914  0497               	iorwf	23,f	;volatile
  6001                           
  6002                           ;motor.c: 18: CCPR2L = 0;
  6003  0915  019B               	clrf	27	;volatile
  6004                           
  6005                           ;motor.c: 19: CCP2Y = 0;
  6006  0916  121D               	bcf	29,4	;volatile
  6007                           
  6008                           ;motor.c: 20: CCP2X = 0;
  6009  0917  129D               	bcf	29,5	;volatile
  6010                           
  6011                           ;motor.c: 21: } else {
  6012  0918  0008               	return
  6013  0919                     l2738:	
  6014                           
  6015                           ;motor.c: 22: value = (-excitation) & 0x3FC;
  6016  0919  0920               	comf	mot_setExcitation@excitation,w
  6017  091A  00A2               	movwf	??_mot_setExcitation
  6018  091B  0921               	comf	mot_setExcitation@excitation+1,w
  6019  091C  00A3               	movwf	??_mot_setExcitation+1
  6020  091D  0AA2               	incf	??_mot_setExcitation,f
  6021  091E  1903               	skipnz
  6022  091F  0AA3               	incf	??_mot_setExcitation+1,f
  6023  0920  30FC               	movlw	252
  6024  0921  0522               	andwf	??_mot_setExcitation,w
  6025  0922  00A4               	movwf	mot_setExcitation@value
  6026  0923  3003               	movlw	3
  6027  0924  0523               	andwf	??_mot_setExcitation+1,w
  6028  0925  00A5               	movwf	mot_setExcitation@value+1
  6029                           
  6030                           ;motor.c: 23: CCPR2L = (value >> 2);
  6031  0926  0825               	movf	mot_setExcitation@value+1,w
  6032  0927  00A3               	movwf	??_mot_setExcitation+1
  6033  0928  0824               	movf	mot_setExcitation@value,w
  6034  0929  00A2               	movwf	??_mot_setExcitation
  6035  092A  0D23               	rlf	??_mot_setExcitation+1,w
  6036  092B  0CA3               	rrf	??_mot_setExcitation+1,f
  6037  092C  0CA2               	rrf	??_mot_setExcitation,f
  6038  092D  0D23               	rlf	??_mot_setExcitation+1,w
  6039  092E  0CA3               	rrf	??_mot_setExcitation+1,f
  6040  092F  0CA2               	rrf	??_mot_setExcitation,f
  6041  0930  0822               	movf	??_mot_setExcitation,w
  6042  0931  009B               	movwf	27	;volatile
  6043                           
  6044                           ;motor.c: 24: value = excitation & 0x0003;
  6045  0932  3003               	movlw	3
  6046  0933  0520               	andwf	mot_setExcitation@excitation,w
  6047  0934  00A4               	movwf	mot_setExcitation@value
  6048  0935  3000               	movlw	0
  6049  0936  0521               	andwf	mot_setExcitation@excitation+1,w
  6050  0937  00A5               	movwf	mot_setExcitation@value+1
  6051                           
  6052                           ;motor.c: 25: CCP2Y = 0;
  6053  0938  121D               	bcf	29,4	;volatile
  6054                           
  6055                           ;motor.c: 26: CCP2X = 0;
  6056  0939  129D               	bcf	29,5	;volatile
  6057                           
  6058                           ;motor.c: 27: CCP2CON |= (value << 4);
  6059  093A  0824               	movf	mot_setExcitation@value,w
  6060  093B  00A2               	movwf	??_mot_setExcitation
  6061  093C  3003               	movlw	3
  6062  093D                     u2915:	
  6063  093D  1003               	clrc
  6064  093E  0DA2               	rlf	??_mot_setExcitation,f
  6065  093F  3EFF               	addlw	-1
  6066  0940  1D03               	skipz
  6067  0941  293D               	goto	u2915
  6068  0942  1003               	clrc
  6069  0943  0D22               	rlf	??_mot_setExcitation,w
  6070  0944  00A3               	movwf	??_mot_setExcitation+1
  6071  0945  0823               	movf	??_mot_setExcitation+1,w
  6072  0946  049D               	iorwf	29,f	;volatile
  6073                           
  6074                           ;motor.c: 28: CCPR1L = 0;
  6075  0947  0195               	clrf	21	;volatile
  6076                           
  6077                           ;motor.c: 29: CCP1Y = 0;
  6078  0948  1217               	bcf	23,4	;volatile
  6079                           
  6080                           ;motor.c: 30: CCP1X = 0;
  6081  0949  1297               	bcf	23,5	;volatile
  6082  094A  0008               	return
  6083  094B                     __end_of_mot_setExcitation:	
  6084                           
  6085                           	psect	text37
  6086  0B10                     __ptext37:	
  6087 ;; *************** function ___xxtofl *****************
  6088 ;; Defined at:
  6089 ;;		line 10 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  sign            1    wreg     unsigned char 
  6092 ;;  val             4    2[BANK0 ] long 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;  sign            1   10[BANK0 ] unsigned char 
  6095 ;;  arg             4   12[BANK0 ] unsigned long 
  6096 ;;  exp             1   11[BANK0 ] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  4    2[BANK0 ] unsigned char 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6106 ;;      Params:         0       4       0       0       0
  6107 ;;      Locals:         0       6       0       0       0
  6108 ;;      Temps:          0       4       0       0       0
  6109 ;;      Totals:         0      14       0       0       0
  6110 ;;Total ram usage:       14 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    1
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_pid_pid
  6117 ;;		_convertToReal
  6118 ;;		_sprintf
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function ___xxtofl
  6124  0B10                     ___xxtofl:	
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6128                           ;___xxtofl@sign stored from wreg
  6129  0B10  1283               	bcf	3,5	;RP0=0, select bank0
  6130  0B11  1303               	bcf	3,6	;RP1=0, select bank0
  6131  0B12  00AA               	movwf	___xxtofl@sign
  6132  0B13  082A               	movf	___xxtofl@sign,w
  6133  0B14  1D03               	btfss	3,2
  6134  0B15  1FA5               	btfss	___xxtofl@val+3,7
  6135  0B16  2B27               	goto	l3224
  6136  0B17  0922               	comf	___xxtofl@val,w
  6137  0B18  00AC               	movwf	___xxtofl@arg
  6138  0B19  0923               	comf	___xxtofl@val+1,w
  6139  0B1A  00AD               	movwf	___xxtofl@arg+1
  6140  0B1B  0924               	comf	___xxtofl@val+2,w
  6141  0B1C  00AE               	movwf	___xxtofl@arg+2
  6142  0B1D  0925               	comf	___xxtofl@val+3,w
  6143  0B1E  00AF               	movwf	___xxtofl@arg+3
  6144  0B1F  0AAC               	incf	___xxtofl@arg,f
  6145  0B20  1903               	skipnz
  6146  0B21  0AAD               	incf	___xxtofl@arg+1,f
  6147  0B22  1903               	skipnz
  6148  0B23  0AAE               	incf	___xxtofl@arg+2,f
  6149  0B24  1903               	skipnz
  6150  0B25  0AAF               	incf	___xxtofl@arg+3,f
  6151  0B26  2B2F               	goto	l1125
  6152  0B27                     l3224:	
  6153  0B27  0825               	movf	___xxtofl@val+3,w
  6154  0B28  00AF               	movwf	___xxtofl@arg+3
  6155  0B29  0824               	movf	___xxtofl@val+2,w
  6156  0B2A  00AE               	movwf	___xxtofl@arg+2
  6157  0B2B  0823               	movf	___xxtofl@val+1,w
  6158  0B2C  00AD               	movwf	___xxtofl@arg+1
  6159  0B2D  0822               	movf	___xxtofl@val,w
  6160  0B2E  00AC               	movwf	___xxtofl@arg
  6161  0B2F                     l1125:	
  6162  0B2F  0825               	movf	___xxtofl@val+3,w
  6163  0B30  0424               	iorwf	___xxtofl@val+2,w
  6164  0B31  0423               	iorwf	___xxtofl@val+1,w
  6165  0B32  0422               	iorwf	___xxtofl@val,w
  6166  0B33  1D03               	skipz
  6167  0B34  2B3E               	goto	l3230
  6168  0B35  3000               	movlw	0
  6169  0B36  00A5               	movwf	?___xxtofl+3
  6170  0B37  3000               	movlw	0
  6171  0B38  00A4               	movwf	?___xxtofl+2
  6172  0B39  3000               	movlw	0
  6173  0B3A  00A3               	movwf	?___xxtofl+1
  6174  0B3B  3000               	movlw	0
  6175  0B3C  00A2               	movwf	?___xxtofl
  6176  0B3D  0008               	return
  6177  0B3E                     l3230:	
  6178  0B3E  3096               	movlw	150
  6179  0B3F  00A6               	movwf	??___xxtofl
  6180  0B40  0826               	movf	??___xxtofl,w
  6181  0B41  00AB               	movwf	___xxtofl@exp
  6182  0B42                     l3234:	
  6183  0B42  30FE               	movlw	254
  6184  0B43  052F               	andwf	___xxtofl@arg+3,w
  6185  0B44  1903               	btfsc	3,2
  6186  0B45  2B6F               	goto	l1131
  6187  0B46  3001               	movlw	1
  6188  0B47  00A6               	movwf	??___xxtofl
  6189  0B48  0826               	movf	??___xxtofl,w
  6190  0B49  07AB               	addwf	___xxtofl@exp,f
  6191  0B4A  3001               	movlw	1
  6192  0B4B                     u3885:	
  6193  0B4B  1003               	clrc
  6194  0B4C  0CAF               	rrf	___xxtofl@arg+3,f
  6195  0B4D  0CAE               	rrf	___xxtofl@arg+2,f
  6196  0B4E  0CAD               	rrf	___xxtofl@arg+1,f
  6197  0B4F  0CAC               	rrf	___xxtofl@arg,f
  6198  0B50  3EFF               	addlw	-1
  6199  0B51  1D03               	skipz
  6200  0B52  2B4B               	goto	u3885
  6201  0B53  2B42               	goto	l3234
  6202  0B54                     l3236:	
  6203  0B54  3001               	movlw	1
  6204  0B55  00A6               	movwf	??___xxtofl
  6205  0B56  0826               	movf	??___xxtofl,w
  6206  0B57  07AB               	addwf	___xxtofl@exp,f
  6207  0B58  3001               	movlw	1
  6208  0B59  07AC               	addwf	___xxtofl@arg,f
  6209  0B5A  3000               	movlw	0
  6210  0B5B  1803               	skipnc
  6211  0B5C  3001               	movlw	1
  6212  0B5D  07AD               	addwf	___xxtofl@arg+1,f
  6213  0B5E  3000               	movlw	0
  6214  0B5F  1803               	skipnc
  6215  0B60  3001               	movlw	1
  6216  0B61  07AE               	addwf	___xxtofl@arg+2,f
  6217  0B62  3000               	movlw	0
  6218  0B63  1803               	skipnc
  6219  0B64  3001               	movlw	1
  6220  0B65  07AF               	addwf	___xxtofl@arg+3,f
  6221  0B66  3001               	movlw	1
  6222  0B67                     u3905:	
  6223  0B67  1003               	clrc
  6224  0B68  0CAF               	rrf	___xxtofl@arg+3,f
  6225  0B69  0CAE               	rrf	___xxtofl@arg+2,f
  6226  0B6A  0CAD               	rrf	___xxtofl@arg+1,f
  6227  0B6B  0CAC               	rrf	___xxtofl@arg,f
  6228  0B6C  3EFF               	addlw	-1
  6229  0B6D  1D03               	skipz
  6230  0B6E  2B67               	goto	u3905
  6231  0B6F                     l1131:	
  6232  0B6F  30FF               	movlw	255
  6233  0B70  052F               	andwf	___xxtofl@arg+3,w
  6234  0B71  1903               	btfsc	3,2
  6235  0B72  2B83               	goto	l3244
  6236  0B73  2B54               	goto	l3236
  6237  0B74                     l3246:	
  6238  0B74  3002               	movlw	2
  6239  0B75  022B               	subwf	___xxtofl@exp,w
  6240  0B76  1C03               	btfss	3,0
  6241  0B77  2B85               	goto	l1138
  6242  0B78  3001               	movlw	1
  6243  0B79  02AB               	subwf	___xxtofl@exp,f
  6244  0B7A  3001               	movlw	1
  6245  0B7B  00A6               	movwf	??___xxtofl
  6246  0B7C                     u3925:	
  6247  0B7C  1003               	clrc
  6248  0B7D  0DAC               	rlf	___xxtofl@arg,f
  6249  0B7E  0DAD               	rlf	___xxtofl@arg+1,f
  6250  0B7F  0DAE               	rlf	___xxtofl@arg+2,f
  6251  0B80  0DAF               	rlf	___xxtofl@arg+3,f
  6252  0B81  0BA6               	decfsz	??___xxtofl,f
  6253  0B82  2B7C               	goto	u3925
  6254  0B83                     l3244:	
  6255  0B83  1FAE               	btfss	___xxtofl@arg+2,7
  6256  0B84  2B74               	goto	l3246
  6257  0B85                     l1138:	
  6258  0B85  182B               	btfsc	___xxtofl@exp,0
  6259  0B86  2B8F               	goto	l1139
  6260  0B87  30FF               	movlw	255
  6261  0B88  05AC               	andwf	___xxtofl@arg,f
  6262  0B89  30FF               	movlw	255
  6263  0B8A  05AD               	andwf	___xxtofl@arg+1,f
  6264  0B8B  307F               	movlw	127
  6265  0B8C  05AE               	andwf	___xxtofl@arg+2,f
  6266  0B8D  30FF               	movlw	255
  6267  0B8E  05AF               	andwf	___xxtofl@arg+3,f
  6268  0B8F                     l1139:	
  6269  0B8F  1003               	clrc
  6270  0B90  0CAB               	rrf	___xxtofl@exp,f
  6271  0B91  082B               	movf	___xxtofl@exp,w
  6272  0B92  00A6               	movwf	??___xxtofl
  6273  0B93  01A7               	clrf	??___xxtofl+1
  6274  0B94  01A8               	clrf	??___xxtofl+2
  6275  0B95  01A9               	clrf	??___xxtofl+3
  6276  0B96  3018               	movlw	24
  6277  0B97                     u3965:	
  6278  0B97  1003               	clrc
  6279  0B98  0DA6               	rlf	??___xxtofl,f
  6280  0B99  0DA7               	rlf	??___xxtofl+1,f
  6281  0B9A  0DA8               	rlf	??___xxtofl+2,f
  6282  0B9B  0DA9               	rlf	??___xxtofl+3,f
  6283  0B9C  3EFF               	addlw	-1
  6284  0B9D  1D03               	skipz
  6285  0B9E  2B97               	goto	u3965
  6286  0B9F  0826               	movf	??___xxtofl,w
  6287  0BA0  04AC               	iorwf	___xxtofl@arg,f
  6288  0BA1  0827               	movf	??___xxtofl+1,w
  6289  0BA2  04AD               	iorwf	___xxtofl@arg+1,f
  6290  0BA3  0828               	movf	??___xxtofl+2,w
  6291  0BA4  04AE               	iorwf	___xxtofl@arg+2,f
  6292  0BA5  0829               	movf	??___xxtofl+3,w
  6293  0BA6  04AF               	iorwf	___xxtofl@arg+3,f
  6294  0BA7  082A               	movf	___xxtofl@sign,w
  6295  0BA8  1D03               	btfss	3,2
  6296  0BA9  1FA5               	btfss	___xxtofl@val+3,7
  6297  0BAA  2BAC               	goto	l3258
  6298  0BAB  17AF               	bsf	___xxtofl@arg+3,7
  6299  0BAC                     l3258:	
  6300  0BAC  082F               	movf	___xxtofl@arg+3,w
  6301  0BAD  00A5               	movwf	?___xxtofl+3
  6302  0BAE  082E               	movf	___xxtofl@arg+2,w
  6303  0BAF  00A4               	movwf	?___xxtofl+2
  6304  0BB0  082D               	movf	___xxtofl@arg+1,w
  6305  0BB1  00A3               	movwf	?___xxtofl+1
  6306  0BB2  082C               	movf	___xxtofl@arg,w
  6307  0BB3  00A2               	movwf	?___xxtofl
  6308  0BB4  0008               	return
  6309  0BB5                     __end_of___xxtofl:	
  6310                           
  6311                           	psect	text38
  6312  1719                     __ptext38:	
  6313 ;; *************** function ___flsub *****************
  6314 ;; Defined at:
  6315 ;;		line 242 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  a               4   55[BANK0 ] unsigned char 
  6318 ;;  b               4   59[BANK0 ] unsigned char 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  4   55[BANK0 ] unsigned char 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6330 ;;      Params:         0       8       0       0       0
  6331 ;;      Locals:         0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0
  6333 ;;      Totals:         0       8       0       0       0
  6334 ;;Total ram usage:        8 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    2
  6337 ;; This function calls:
  6338 ;;		___fladd
  6339 ;; This function is called by:
  6340 ;;		_pid_pid
  6341 ;;		_sprintf
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function ___flsub
  6347  1719                     ___flsub:	
  6348                           
  6349                           ;incstack = 0
  6350                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6351  1719  3080               	movlw	128
  6352  171A  1283               	bcf	3,5	;RP0=0, select bank0
  6353  171B  1303               	bcf	3,6	;RP1=0, select bank0
  6354  171C  06DA               	xorwf	___flsub@a+3,f
  6355  171D  085E               	movf	___flsub@b+3,w
  6356  171E  00C6               	movwf	___fladd@b+3
  6357  171F  085D               	movf	___flsub@b+2,w
  6358  1720  00C5               	movwf	___fladd@b+2
  6359  1721  085C               	movf	___flsub@b+1,w
  6360  1722  00C4               	movwf	___fladd@b+1
  6361  1723  085B               	movf	___flsub@b,w
  6362  1724  00C3               	movwf	___fladd@b
  6363  1725  085A               	movf	___flsub@a+3,w
  6364  1726  00CA               	movwf	___fladd@a+3
  6365  1727  0859               	movf	___flsub@a+2,w
  6366  1728  00C9               	movwf	___fladd@a+2
  6367  1729  0858               	movf	___flsub@a+1,w
  6368  172A  00C8               	movwf	___fladd@a+1
  6369  172B  0857               	movf	___flsub@a,w
  6370  172C  00C7               	movwf	___fladd@a
  6371  172D  120A  118A  2360   	fcall	___fladd
  6372  1730  1283               	bcf	3,5	;RP0=0, select bank0
  6373  1731  1303               	bcf	3,6	;RP1=0, select bank0
  6374  1732  0846               	movf	?___fladd+3,w
  6375  1733  00DA               	movwf	?___flsub+3
  6376  1734  0845               	movf	?___fladd+2,w
  6377  1735  00D9               	movwf	?___flsub+2
  6378  1736  0844               	movf	?___fladd+1,w
  6379  1737  00D8               	movwf	?___flsub+1
  6380  1738  0843               	movf	?___fladd,w
  6381  1739  00D7               	movwf	?___flsub
  6382  173A  0008               	return
  6383  173B                     __end_of___flsub:	
  6384                           
  6385                           	psect	text39
  6386  0360                     __ptext39:	
  6387 ;; *************** function ___fladd *****************
  6388 ;; Defined at:
  6389 ;;		line 10 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;  b               4   35[BANK0 ] unsigned char 
  6392 ;;  a               4   39[BANK0 ] unsigned char 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;  grs             1   54[BANK0 ] unsigned char 
  6395 ;;  bexp            1   53[BANK0 ] unsigned char 
  6396 ;;  aexp            1   52[BANK0 ] unsigned char 
  6397 ;;  signs           1   51[BANK0 ] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  4   35[BANK0 ] unsigned char 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0, btemp+1
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         0       8       0       0       0
  6408 ;;      Locals:         0       4       0       0       0
  6409 ;;      Temps:          0       8       0       0       0
  6410 ;;      Totals:         0      20       0       0       0
  6411 ;;Total ram usage:       20 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    1
  6414 ;; This function calls:
  6415 ;;		Nothing
  6416 ;; This function is called by:
  6417 ;;		_convertToReal
  6418 ;;		___flsub
  6419 ;;		_sprintf
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           
  6424                           ;psect for function ___fladd
  6425  0360                     ___fladd:	
  6426                           
  6427                           ;incstack = 0
  6428                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6429  0360  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0361  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0362  0846               	movf	___fladd@b+3,w
  6432  0363  3980               	andlw	128
  6433  0364  00CB               	movwf	??___fladd
  6434  0365  084B               	movf	??___fladd,w
  6435  0366  00D3               	movwf	___fladd@signs
  6436  0367  0846               	movf	___fladd@b+3,w
  6437  0368  00CB               	movwf	??___fladd
  6438  0369  074B               	addwf	??___fladd,w
  6439  036A  00CC               	movwf	??___fladd+1
  6440  036B  084C               	movf	??___fladd+1,w
  6441  036C  00D5               	movwf	___fladd@bexp
  6442  036D  1BC5               	btfsc	___fladd@b+2,7
  6443  036E  1455               	bsf	___fladd@bexp,0
  6444  036F  0855               	movf	___fladd@bexp,w
  6445  0370  1903               	btfsc	3,2
  6446  0371  2B80               	goto	l2532
  6447  0372  0A55               	incf	___fladd@bexp,w
  6448  0373  1D03               	btfss	3,2
  6449  0374  2B7D               	goto	l2528
  6450  0375  3000               	movlw	0
  6451  0376  00C6               	movwf	___fladd@b+3
  6452  0377  3000               	movlw	0
  6453  0378  00C5               	movwf	___fladd@b+2
  6454  0379  3000               	movlw	0
  6455  037A  00C4               	movwf	___fladd@b+1
  6456  037B  3000               	movlw	0
  6457  037C  00C3               	movwf	___fladd@b
  6458  037D                     l2528:	
  6459  037D  17C5               	bsf	___fladd@b+2,7
  6460  037E  01C6               	clrf	___fladd@b+3
  6461  037F  2B88               	goto	l2534
  6462  0380                     l2532:	
  6463  0380  3000               	movlw	0
  6464  0381  00C6               	movwf	___fladd@b+3
  6465  0382  3000               	movlw	0
  6466  0383  00C5               	movwf	___fladd@b+2
  6467  0384  3000               	movlw	0
  6468  0385  00C4               	movwf	___fladd@b+1
  6469  0386  3000               	movlw	0
  6470  0387  00C3               	movwf	___fladd@b
  6471  0388                     l2534:	
  6472  0388  084A               	movf	___fladd@a+3,w
  6473  0389  3980               	andlw	128
  6474  038A  00CB               	movwf	??___fladd
  6475  038B  084B               	movf	??___fladd,w
  6476  038C  00D4               	movwf	___fladd@aexp
  6477  038D  0854               	movf	___fladd@aexp,w
  6478  038E  0653               	xorwf	___fladd@signs,w
  6479  038F  1D03               	btfss	3,2
  6480  0390  1753               	bsf	___fladd@signs,6
  6481  0391  084A               	movf	___fladd@a+3,w
  6482  0392  00CB               	movwf	??___fladd
  6483  0393  074B               	addwf	??___fladd,w
  6484  0394  00CC               	movwf	??___fladd+1
  6485  0395  084C               	movf	??___fladd+1,w
  6486  0396  00D4               	movwf	___fladd@aexp
  6487  0397  1BC9               	btfsc	___fladd@a+2,7
  6488  0398  1454               	bsf	___fladd@aexp,0
  6489  0399  0854               	movf	___fladd@aexp,w
  6490  039A  1903               	btfsc	3,2
  6491  039B  2BAA               	goto	l2556
  6492  039C  0A54               	incf	___fladd@aexp,w
  6493  039D  1D03               	btfss	3,2
  6494  039E  2BA7               	goto	l2552
  6495  039F  3000               	movlw	0
  6496  03A0  00CA               	movwf	___fladd@a+3
  6497  03A1  3000               	movlw	0
  6498  03A2  00C9               	movwf	___fladd@a+2
  6499  03A3  3000               	movlw	0
  6500  03A4  00C8               	movwf	___fladd@a+1
  6501  03A5  3000               	movlw	0
  6502  03A6  00C7               	movwf	___fladd@a
  6503  03A7                     l2552:	
  6504  03A7  17C9               	bsf	___fladd@a+2,7
  6505  03A8  01CA               	clrf	___fladd@a+3
  6506  03A9  2BB2               	goto	l991
  6507  03AA                     l2556:	
  6508  03AA  3000               	movlw	0
  6509  03AB  00CA               	movwf	___fladd@a+3
  6510  03AC  3000               	movlw	0
  6511  03AD  00C9               	movwf	___fladd@a+2
  6512  03AE  3000               	movlw	0
  6513  03AF  00C8               	movwf	___fladd@a+1
  6514  03B0  3000               	movlw	0
  6515  03B1  00C7               	movwf	___fladd@a
  6516  03B2                     l991:	
  6517  03B2  0855               	movf	___fladd@bexp,w
  6518  03B3  0254               	subwf	___fladd@aexp,w
  6519  03B4  1803               	skipnc
  6520  03B5  2BF8               	goto	l2592
  6521  03B6  1F53               	btfss	___fladd@signs,6
  6522  03B7  2BBC               	goto	l2562
  6523  03B8  3080               	movlw	128
  6524  03B9  00CB               	movwf	??___fladd
  6525  03BA  084B               	movf	??___fladd,w
  6526  03BB  06D3               	xorwf	___fladd@signs,f
  6527  03BC                     l2562:	
  6528  03BC  0855               	movf	___fladd@bexp,w
  6529  03BD  00CB               	movwf	??___fladd
  6530  03BE  084B               	movf	??___fladd,w
  6531  03BF  00D6               	movwf	___fladd@grs
  6532  03C0  0854               	movf	___fladd@aexp,w
  6533  03C1  00CB               	movwf	??___fladd
  6534  03C2  084B               	movf	??___fladd,w
  6535  03C3  00D5               	movwf	___fladd@bexp
  6536  03C4  0856               	movf	___fladd@grs,w
  6537  03C5  00CB               	movwf	??___fladd
  6538  03C6  084B               	movf	??___fladd,w
  6539  03C7  00D4               	movwf	___fladd@aexp
  6540  03C8  0843               	movf	___fladd@b,w
  6541  03C9  00CB               	movwf	??___fladd
  6542  03CA  084B               	movf	??___fladd,w
  6543  03CB  00D6               	movwf	___fladd@grs
  6544  03CC  0847               	movf	___fladd@a,w
  6545  03CD  00CB               	movwf	??___fladd
  6546  03CE  084B               	movf	??___fladd,w
  6547  03CF  00C3               	movwf	___fladd@b
  6548  03D0  0856               	movf	___fladd@grs,w
  6549  03D1  00CB               	movwf	??___fladd
  6550  03D2  084B               	movf	??___fladd,w
  6551  03D3  00C7               	movwf	___fladd@a
  6552  03D4  0844               	movf	___fladd@b+1,w
  6553  03D5  00CB               	movwf	??___fladd
  6554  03D6  084B               	movf	??___fladd,w
  6555  03D7  00D6               	movwf	___fladd@grs
  6556  03D8  0848               	movf	___fladd@a+1,w
  6557  03D9  00CB               	movwf	??___fladd
  6558  03DA  084B               	movf	??___fladd,w
  6559  03DB  00C4               	movwf	___fladd@b+1
  6560  03DC  0856               	movf	___fladd@grs,w
  6561  03DD  00CB               	movwf	??___fladd
  6562  03DE  084B               	movf	??___fladd,w
  6563  03DF  00C8               	movwf	___fladd@a+1
  6564  03E0  0845               	movf	___fladd@b+2,w
  6565  03E1  00CB               	movwf	??___fladd
  6566  03E2  084B               	movf	??___fladd,w
  6567  03E3  00D6               	movwf	___fladd@grs
  6568  03E4  0849               	movf	___fladd@a+2,w
  6569  03E5  00CB               	movwf	??___fladd
  6570  03E6  084B               	movf	??___fladd,w
  6571  03E7  00C5               	movwf	___fladd@b+2
  6572  03E8  0856               	movf	___fladd@grs,w
  6573  03E9  00CB               	movwf	??___fladd
  6574  03EA  084B               	movf	??___fladd,w
  6575  03EB  00C9               	movwf	___fladd@a+2
  6576  03EC  0846               	movf	___fladd@b+3,w
  6577  03ED  00CB               	movwf	??___fladd
  6578  03EE  084B               	movf	??___fladd,w
  6579  03EF  00D6               	movwf	___fladd@grs
  6580  03F0  084A               	movf	___fladd@a+3,w
  6581  03F1  00CB               	movwf	??___fladd
  6582  03F2  084B               	movf	??___fladd,w
  6583  03F3  00C6               	movwf	___fladd@b+3
  6584  03F4  0856               	movf	___fladd@grs,w
  6585  03F5  00CB               	movwf	??___fladd
  6586  03F6  084B               	movf	??___fladd,w
  6587  03F7  00CA               	movwf	___fladd@a+3
  6588  03F8                     l2592:	
  6589  03F8  01D6               	clrf	___fladd@grs
  6590  03F9  0854               	movf	___fladd@aexp,w
  6591  03FA  00CB               	movwf	??___fladd
  6592  03FB  01CC               	clrf	??___fladd+1
  6593  03FC  084C               	movf	??___fladd+1,w
  6594  03FD  00CE               	movwf	??___fladd+3
  6595  03FE  0855               	movf	___fladd@bexp,w
  6596  03FF  024B               	subwf	??___fladd,w
  6597  0400  00CD               	movwf	??___fladd+2
  6598  0401  1C03               	skipc
  6599  0402  03CE               	decf	??___fladd+3,f
  6600  0403  084E               	movf	??___fladd+3,w
  6601  0404  3A80               	xorlw	128
  6602  0405  00FF               	movwf	127
  6603  0406  3080               	movlw	128
  6604  0407  027F               	subwf	127,w
  6605  0408  1D03               	skipz
  6606  0409  2C0C               	goto	u2495
  6607  040A  301A               	movlw	26
  6608  040B  024D               	subwf	??___fladd+2,w
  6609  040C                     u2495:	
  6610  040C  1C03               	skipc
  6611  040D  2C45               	goto	l2610
  6612  040E  1283               	bcf	3,5	;RP0=0, select bank0
  6613  040F  1303               	bcf	3,6	;RP1=0, select bank0
  6614  0410  0846               	movf	___fladd@b+3,w
  6615  0411  0445               	iorwf	___fladd@b+2,w
  6616  0412  0444               	iorwf	___fladd@b+1,w
  6617  0413  0443               	iorwf	___fladd@b,w
  6618  0414  1903               	btfsc	3,2
  6619  0415  2C18               	goto	u2500
  6620  0416  3001               	movlw	1
  6621  0417  2C19               	goto	u2510
  6622  0418                     u2500:	
  6623  0418  3000               	movlw	0
  6624  0419                     u2510:	
  6625  0419  00CB               	movwf	??___fladd
  6626  041A  084B               	movf	??___fladd,w
  6627  041B  00D6               	movwf	___fladd@grs
  6628  041C  3000               	movlw	0
  6629  041D  00C6               	movwf	___fladd@b+3
  6630  041E  3000               	movlw	0
  6631  041F  00C5               	movwf	___fladd@b+2
  6632  0420  3000               	movlw	0
  6633  0421  00C4               	movwf	___fladd@b+1
  6634  0422  3000               	movlw	0
  6635  0423  00C3               	movwf	___fladd@b
  6636  0424  0854               	movf	___fladd@aexp,w
  6637  0425  00CB               	movwf	??___fladd
  6638  0426  084B               	movf	??___fladd,w
  6639  0427  00D5               	movwf	___fladd@bexp
  6640  0428  2C4B               	goto	l995
  6641  0429                     l997:	
  6642  0429  1C56               	btfss	___fladd@grs,0
  6643  042A  2C34               	goto	l2600
  6644  042B  0856               	movf	___fladd@grs,w
  6645  042C  00CB               	movwf	??___fladd
  6646  042D  1003               	clrc
  6647  042E  0C4B               	rrf	??___fladd,w
  6648  042F  3801               	iorlw	1
  6649  0430  00CC               	movwf	??___fladd+1
  6650  0431  084C               	movf	??___fladd+1,w
  6651  0432  00D6               	movwf	___fladd@grs
  6652  0433  2C36               	goto	l2602
  6653  0434                     l2600:	
  6654  0434  1003               	clrc
  6655  0435  0CD6               	rrf	___fladd@grs,f
  6656  0436                     l2602:	
  6657  0436  1843               	btfsc	___fladd@b,0
  6658  0437  17D6               	bsf	___fladd@grs,7
  6659  0438  3001               	movlw	1
  6660  0439  00CB               	movwf	??___fladd
  6661  043A                     u2545:	
  6662  043A  0D46               	rlf	___fladd@b+3,w
  6663  043B  0CC6               	rrf	___fladd@b+3,f
  6664  043C  0CC5               	rrf	___fladd@b+2,f
  6665  043D  0CC4               	rrf	___fladd@b+1,f
  6666  043E  0CC3               	rrf	___fladd@b,f
  6667  043F  0BCB               	decfsz	??___fladd& (0+127),f
  6668  0440  2C3A               	goto	u2545
  6669  0441  3001               	movlw	1
  6670  0442  00CB               	movwf	??___fladd
  6671  0443  084B               	movf	??___fladd,w
  6672  0444  07D5               	addwf	___fladd@bexp,f
  6673  0445                     l2610:	
  6674  0445  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0446  1303               	bcf	3,6	;RP1=0, select bank0
  6676  0447  0854               	movf	___fladd@aexp,w
  6677  0448  0255               	subwf	___fladd@bexp,w
  6678  0449  1C03               	skipc
  6679  044A  2C29               	goto	l997
  6680  044B                     l995:	
  6681  044B  1B53               	btfsc	___fladd@signs,6
  6682  044C  2C8C               	goto	l2636
  6683  044D  0855               	movf	___fladd@bexp,w
  6684  044E  1D03               	btfss	3,2
  6685  044F  2C59               	goto	l2618
  6686  0450  3000               	movlw	0
  6687  0451  00C6               	movwf	?___fladd+3
  6688  0452  3000               	movlw	0
  6689  0453  00C5               	movwf	?___fladd+2
  6690  0454  3000               	movlw	0
  6691  0455  00C4               	movwf	?___fladd+1
  6692  0456  3000               	movlw	0
  6693  0457  00C3               	movwf	?___fladd
  6694  0458  0008               	return
  6695  0459                     l2618:	
  6696  0459  0847               	movf	___fladd@a,w
  6697  045A  07C3               	addwf	___fladd@b,f
  6698  045B  0848               	movf	___fladd@a+1,w
  6699  045C  1103               	clrz
  6700  045D  1803               	skipnc
  6701  045E  3E01               	addlw	1
  6702  045F  1D03               	btfss	3,2
  6703  0460  07C4               	addwf	___fladd@b+1,f
  6704  0461  0849               	movf	___fladd@a+2,w
  6705  0462  1103               	clrz
  6706  0463  1803               	skipnc
  6707  0464  3E01               	addlw	1
  6708  0465  1D03               	btfss	3,2
  6709  0466  07C5               	addwf	___fladd@b+2,f
  6710  0467  084A               	movf	___fladd@a+3,w
  6711  0468  1103               	clrz
  6712  0469  1803               	skipnc
  6713  046A  3E01               	addlw	1
  6714  046B  1D03               	btfss	3,2
  6715  046C  07C6               	addwf	___fladd@b+3,f
  6716  046D  1C46               	btfss	___fladd@b+3,0
  6717  046E  2D2E               	goto	l2670
  6718  046F  1C56               	btfss	___fladd@grs,0
  6719  0470  2C7A               	goto	l2626
  6720  0471  0856               	movf	___fladd@grs,w
  6721  0472  00CB               	movwf	??___fladd
  6722  0473  1003               	clrc
  6723  0474  0C4B               	rrf	??___fladd,w
  6724  0475  3801               	iorlw	1
  6725  0476  00CC               	movwf	??___fladd+1
  6726  0477  084C               	movf	??___fladd+1,w
  6727  0478  00D6               	movwf	___fladd@grs
  6728  0479  2C7C               	goto	l2628
  6729  047A                     l2626:	
  6730  047A  1003               	clrc
  6731  047B  0CD6               	rrf	___fladd@grs,f
  6732  047C                     l2628:	
  6733  047C  1843               	btfsc	___fladd@b,0
  6734  047D  17D6               	bsf	___fladd@grs,7
  6735  047E  3001               	movlw	1
  6736  047F  00CB               	movwf	??___fladd
  6737  0480                     u2625:	
  6738  0480  0D46               	rlf	___fladd@b+3,w
  6739  0481  0CC6               	rrf	___fladd@b+3,f
  6740  0482  0CC5               	rrf	___fladd@b+2,f
  6741  0483  0CC4               	rrf	___fladd@b+1,f
  6742  0484  0CC3               	rrf	___fladd@b,f
  6743  0485  0BCB               	decfsz	??___fladd& (0+127),f
  6744  0486  2C80               	goto	u2625
  6745  0487  3001               	movlw	1
  6746  0488  00CB               	movwf	??___fladd
  6747  0489  084B               	movf	??___fladd,w
  6748  048A  07D5               	addwf	___fladd@bexp,f
  6749  048B  2D2E               	goto	l2670
  6750  048C                     l2636:	
  6751  048C  0846               	movf	___fladd@b+3,w
  6752  048D  3A80               	xorlw	128
  6753  048E  00FF               	movwf	127
  6754  048F  084A               	movf	___fladd@a+3,w
  6755  0490  3A80               	xorlw	128
  6756  0491  027F               	subwf	127,w
  6757  0492  1D03               	skipz
  6758  0493  2C9E               	goto	u2633
  6759  0494  0849               	movf	___fladd@a+2,w
  6760  0495  0245               	subwf	___fladd@b+2,w
  6761  0496  1D03               	skipz
  6762  0497  2C9E               	goto	u2633
  6763  0498  0848               	movf	___fladd@a+1,w
  6764  0499  0244               	subwf	___fladd@b+1,w
  6765  049A  1D03               	skipz
  6766  049B  2C9E               	goto	u2633
  6767  049C  0847               	movf	___fladd@a,w
  6768  049D  0243               	subwf	___fladd@b,w
  6769  049E                     u2633:	
  6770  049E  1803               	skipnc
  6771  049F  2CF6               	goto	l2646
  6772  04A0  30FF               	movlw	255
  6773  04A1  00CB               	movwf	??___fladd
  6774  04A2  30FF               	movlw	255
  6775  04A3  00CC               	movwf	??___fladd+1
  6776  04A4  30FF               	movlw	255
  6777  04A5  00CD               	movwf	??___fladd+2
  6778  04A6  30FF               	movlw	255
  6779  04A7  00CE               	movwf	??___fladd+3
  6780  04A8  0847               	movf	___fladd@a,w
  6781  04A9  00CF               	movwf	??___fladd+4
  6782  04AA  0848               	movf	___fladd@a+1,w
  6783  04AB  00D0               	movwf	??___fladd+5
  6784  04AC  0849               	movf	___fladd@a+2,w
  6785  04AD  00D1               	movwf	??___fladd+6
  6786  04AE  084A               	movf	___fladd@a+3,w
  6787  04AF  00D2               	movwf	??___fladd+7
  6788  04B0  0843               	movf	___fladd@b,w
  6789  04B1  02CF               	subwf	??___fladd+4,f
  6790  04B2  0844               	movf	___fladd@b+1,w
  6791  04B3  1C03               	skipc
  6792  04B4  0F44               	incfsz	___fladd@b+1,w
  6793  04B5  2CB7               	goto	u2641
  6794  04B6  2CB8               	goto	u2642
  6795  04B7                     u2641:	
  6796  04B7  02D0               	subwf	??___fladd+5,f
  6797  04B8                     u2642:	
  6798  04B8  0845               	movf	___fladd@b+2,w
  6799  04B9  1C03               	skipc
  6800  04BA  0F45               	incfsz	___fladd@b+2,w
  6801  04BB  2CBD               	goto	u2643
  6802  04BC  2CBE               	goto	u2644
  6803  04BD                     u2643:	
  6804  04BD  02D1               	subwf	??___fladd+6,f
  6805  04BE                     u2644:	
  6806  04BE  0846               	movf	___fladd@b+3,w
  6807  04BF  1C03               	skipc
  6808  04C0  0F46               	incfsz	___fladd@b+3,w
  6809  04C1  2CC3               	goto	u2645
  6810  04C2  2CC4               	goto	u2646
  6811  04C3                     u2645:	
  6812  04C3  02D2               	subwf	??___fladd+7,f
  6813  04C4                     u2646:	
  6814  04C4  084F               	movf	??___fladd+4,w
  6815  04C5  07CB               	addwf	??___fladd,f
  6816  04C6  0850               	movf	??___fladd+5,w
  6817  04C7  1803               	skipnc
  6818  04C8  0F50               	incfsz	??___fladd+5,w
  6819  04C9  2CCB               	goto	u2650
  6820  04CA  2CCC               	goto	u2651
  6821  04CB                     u2650:	
  6822  04CB  07CC               	addwf	??___fladd+1,f
  6823  04CC                     u2651:	
  6824  04CC  0851               	movf	??___fladd+6,w
  6825  04CD  1803               	skipnc
  6826  04CE  0F51               	incfsz	??___fladd+6,w
  6827  04CF  2CD1               	goto	u2652
  6828  04D0  2CD2               	goto	u2653
  6829  04D1                     u2652:	
  6830  04D1  07CD               	addwf	??___fladd+2,f
  6831  04D2                     u2653:	
  6832  04D2  0852               	movf	??___fladd+7,w
  6833  04D3  1803               	skipnc
  6834  04D4  0A52               	incf	??___fladd+7,w
  6835  04D5  07CE               	addwf	??___fladd+3,f
  6836  04D6  084E               	movf	??___fladd+3,w
  6837  04D7  00C6               	movwf	___fladd@b+3
  6838  04D8  084D               	movf	??___fladd+2,w
  6839  04D9  00C5               	movwf	___fladd@b+2
  6840  04DA  084C               	movf	??___fladd+1,w
  6841  04DB  00C4               	movwf	___fladd@b+1
  6842  04DC  084B               	movf	??___fladd,w
  6843  04DD  00C3               	movwf	___fladd@b
  6844  04DE  3080               	movlw	128
  6845  04DF  00CB               	movwf	??___fladd
  6846  04E0  084B               	movf	??___fladd,w
  6847  04E1  06D3               	xorwf	___fladd@signs,f
  6848  04E2  09D6               	comf	___fladd@grs,f
  6849  04E3  0AD6               	incf	___fladd@grs,f
  6850  04E4  0856               	movf	___fladd@grs,w
  6851  04E5  1D03               	btfss	3,2
  6852  04E6  2D04               	goto	l1012
  6853  04E7  3001               	movlw	1
  6854  04E8  07C3               	addwf	___fladd@b,f
  6855  04E9  3000               	movlw	0
  6856  04EA  1803               	skipnc
  6857  04EB  3001               	movlw	1
  6858  04EC  07C4               	addwf	___fladd@b+1,f
  6859  04ED  3000               	movlw	0
  6860  04EE  1803               	skipnc
  6861  04EF  3001               	movlw	1
  6862  04F0  07C5               	addwf	___fladd@b+2,f
  6863  04F1  3000               	movlw	0
  6864  04F2  1803               	skipnc
  6865  04F3  3001               	movlw	1
  6866  04F4  07C6               	addwf	___fladd@b+3,f
  6867  04F5  2D04               	goto	l1012
  6868  04F6                     l2646:	
  6869  04F6  0847               	movf	___fladd@a,w
  6870  04F7  02C3               	subwf	___fladd@b,f
  6871  04F8  0848               	movf	___fladd@a+1,w
  6872  04F9  1C03               	skipc
  6873  04FA  0F48               	incfsz	___fladd@a+1,w
  6874  04FB  02C4               	subwf	___fladd@b+1,f
  6875  04FC  0849               	movf	___fladd@a+2,w
  6876  04FD  1C03               	skipc
  6877  04FE  0F49               	incfsz	___fladd@a+2,w
  6878  04FF  02C5               	subwf	___fladd@b+2,f
  6879  0500  084A               	movf	___fladd@a+3,w
  6880  0501  1C03               	skipc
  6881  0502  0F4A               	incfsz	___fladd@a+3,w
  6882  0503  02C6               	subwf	___fladd@b+3,f
  6883  0504                     l1012:	
  6884  0504  0846               	movf	___fladd@b+3,w
  6885  0505  0445               	iorwf	___fladd@b+2,w
  6886  0506  0444               	iorwf	___fladd@b+1,w
  6887  0507  0443               	iorwf	___fladd@b,w
  6888  0508  1D03               	skipz
  6889  0509  2D2C               	goto	l2668
  6890  050A  0856               	movf	___fladd@grs,w
  6891  050B  1D03               	btfss	3,2
  6892  050C  2D2C               	goto	l2668
  6893  050D  3000               	movlw	0
  6894  050E  00C6               	movwf	?___fladd+3
  6895  050F  3000               	movlw	0
  6896  0510  00C5               	movwf	?___fladd+2
  6897  0511  3000               	movlw	0
  6898  0512  00C4               	movwf	?___fladd+1
  6899  0513  3000               	movlw	0
  6900  0514  00C3               	movwf	?___fladd
  6901  0515  0008               	return
  6902  0516                     l2654:	
  6903  0516  3001               	movlw	1
  6904  0517  00CB               	movwf	??___fladd
  6905  0518                     u2695:	
  6906  0518  1003               	clrc
  6907  0519  0DC3               	rlf	___fladd@b,f
  6908  051A  0DC4               	rlf	___fladd@b+1,f
  6909  051B  0DC5               	rlf	___fladd@b+2,f
  6910  051C  0DC6               	rlf	___fladd@b+3,f
  6911  051D  0BCB               	decfsz	??___fladd,f
  6912  051E  2D18               	goto	u2695
  6913  051F  1BD6               	btfsc	___fladd@grs,7
  6914  0520  1443               	bsf	___fladd@b,0
  6915  0521  1C56               	btfss	___fladd@grs,0
  6916  0522  2D25               	goto	l2662
  6917  0523  1403               	setc
  6918  0524  2D26               	goto	L4
  6919  0525                     l2662:	
  6920  0525  1003               	clrc
  6921  0526                     L4:	
  6922  0526  0DD6               	rlf	___fladd@grs,f
  6923  0527  0855               	movf	___fladd@bexp,w
  6924  0528  1903               	btfsc	3,2
  6925  0529  2D2C               	goto	l2668
  6926  052A  3001               	movlw	1
  6927  052B  02D5               	subwf	___fladd@bexp,f
  6928  052C                     l2668:	
  6929  052C  1FC5               	btfss	___fladd@b+2,7
  6930  052D  2D16               	goto	l2654
  6931  052E                     l2670:	
  6932  052E  01D4               	clrf	___fladd@aexp
  6933  052F  1FD6               	btfss	___fladd@grs,7
  6934  0530  2D39               	goto	l2680
  6935  0531  0856               	movf	___fladd@grs,w
  6936  0532  397F               	andlw	127
  6937  0533  1903               	btfsc	3,2
  6938  0534  1843               	btfsc	___fladd@b,0
  6939  0535  2D37               	goto	l2676
  6940  0536  2D39               	goto	l2680
  6941  0537                     l2676:	
  6942  0537  01D4               	clrf	___fladd@aexp
  6943  0538  0AD4               	incf	___fladd@aexp,f
  6944  0539                     l2680:	
  6945  0539  0854               	movf	___fladd@aexp,w
  6946  053A  1903               	btfsc	3,2
  6947  053B  2D6C               	goto	l1025
  6948  053C  3001               	movlw	1
  6949  053D  07C3               	addwf	___fladd@b,f
  6950  053E  3000               	movlw	0
  6951  053F  1803               	skipnc
  6952  0540  3001               	movlw	1
  6953  0541  07C4               	addwf	___fladd@b+1,f
  6954  0542  3000               	movlw	0
  6955  0543  1803               	skipnc
  6956  0544  3001               	movlw	1
  6957  0545  07C5               	addwf	___fladd@b+2,f
  6958  0546  3000               	movlw	0
  6959  0547  1803               	skipnc
  6960  0548  3001               	movlw	1
  6961  0549  07C6               	addwf	___fladd@b+3,f
  6962  054A  1C46               	btfss	___fladd@b+3,0
  6963  054B  2D6C               	goto	l1025
  6964  054C  0843               	movf	___fladd@b,w
  6965  054D  00CB               	movwf	??___fladd
  6966  054E  0844               	movf	___fladd@b+1,w
  6967  054F  00CC               	movwf	??___fladd+1
  6968  0550  0845               	movf	___fladd@b+2,w
  6969  0551  00CD               	movwf	??___fladd+2
  6970  0552  0846               	movf	___fladd@b+3,w
  6971  0553  00CE               	movwf	??___fladd+3
  6972  0554  3001               	movlw	1
  6973  0555  00CF               	movwf	??___fladd+4
  6974  0556                     u2795:	
  6975  0556  0D4E               	rlf	??___fladd+3,w
  6976  0557  0CCE               	rrf	??___fladd+3,f
  6977  0558  0CCD               	rrf	??___fladd+2,f
  6978  0559  0CCC               	rrf	??___fladd+1,f
  6979  055A  0CCB               	rrf	??___fladd,f
  6980  055B  0BCF               	decfsz	??___fladd+4,f
  6981  055C  2D56               	goto	u2795
  6982  055D  084E               	movf	??___fladd+3,w
  6983  055E  00C6               	movwf	___fladd@b+3
  6984  055F  084D               	movf	??___fladd+2,w
  6985  0560  00C5               	movwf	___fladd@b+2
  6986  0561  084C               	movf	??___fladd+1,w
  6987  0562  00C4               	movwf	___fladd@b+1
  6988  0563  084B               	movf	??___fladd,w
  6989  0564  00C3               	movwf	___fladd@b
  6990  0565  0A55               	incf	___fladd@bexp,w
  6991  0566  1903               	btfsc	3,2
  6992  0567  2D6C               	goto	l1025
  6993  0568  3001               	movlw	1
  6994  0569  00CB               	movwf	??___fladd
  6995  056A  084B               	movf	??___fladd,w
  6996  056B  07D5               	addwf	___fladd@bexp,f
  6997  056C                     l1025:	
  6998  056C  0A55               	incf	___fladd@bexp,w
  6999  056D  1D03               	btfss	3,2
  7000  056E  0855               	movf	___fladd@bexp,w
  7001  056F  1D03               	btfss	3,2
  7002  0570  2D7C               	goto	l2698
  7003  0571  3000               	movlw	0
  7004  0572  00C6               	movwf	___fladd@b+3
  7005  0573  3000               	movlw	0
  7006  0574  00C5               	movwf	___fladd@b+2
  7007  0575  3000               	movlw	0
  7008  0576  00C4               	movwf	___fladd@b+1
  7009  0577  3000               	movlw	0
  7010  0578  00C3               	movwf	___fladd@b
  7011  0579  0855               	movf	___fladd@bexp,w
  7012  057A  1903               	btfsc	3,2
  7013  057B  01D3               	clrf	___fladd@signs
  7014  057C                     l2698:	
  7015  057C  1C55               	btfss	___fladd@bexp,0
  7016  057D  2D80               	goto	l2702
  7017  057E  17C5               	bsf	___fladd@b+2,7
  7018  057F  2D84               	goto	l1033
  7019  0580                     l2702:	
  7020  0580  307F               	movlw	127
  7021  0581  00CB               	movwf	??___fladd
  7022  0582  084B               	movf	??___fladd,w
  7023  0583  05C5               	andwf	___fladd@b+2,f
  7024  0584                     l1033:	
  7025  0584  0855               	movf	___fladd@bexp,w
  7026  0585  00CB               	movwf	??___fladd
  7027  0586  1003               	clrc
  7028  0587  0C4B               	rrf	??___fladd,w
  7029  0588  00CC               	movwf	??___fladd+1
  7030  0589  084C               	movf	??___fladd+1,w
  7031  058A  00C6               	movwf	___fladd@b+3
  7032  058B  1FD3               	btfss	___fladd@signs,7
  7033  058C  0008               	return
  7034  058D  17C6               	bsf	___fladd@b+3,7
  7035  058E  0008               	return
  7036  058F                     __end_of___fladd:	
  7037                           
  7038                           	psect	text40
  7039  004B                     __ptext40:	
  7040 ;; *************** function ___flmul *****************
  7041 ;; Defined at:
  7042 ;;		line 8 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  b               4    9[BANK0 ] unsigned char 
  7045 ;;  a               4   13[BANK0 ] unsigned char 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  prod            4   29[BANK0 ] struct .
  7048 ;;  grs             4   23[BANK0 ] unsigned long 
  7049 ;;  temp            2   33[BANK0 ] struct .
  7050 ;;  bexp            1   28[BANK0 ] unsigned char 
  7051 ;;  aexp            1   27[BANK0 ] unsigned char 
  7052 ;;  sign            1   22[BANK0 ] unsigned char 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  4    9[BANK0 ] unsigned char 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7062 ;;      Params:         0       8       0       0       0
  7063 ;;      Locals:         0      13       0       0       0
  7064 ;;      Temps:          0       5       0       0       0
  7065 ;;      Totals:         0      26       0       0       0
  7066 ;;Total ram usage:       26 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    2
  7069 ;; This function calls:
  7070 ;;		__Umul8_16
  7071 ;; This function is called by:
  7072 ;;		_pid_pid
  7073 ;;		_convertToReal
  7074 ;;		_sprintf
  7075 ;;		_scale
  7076 ;;		_fround
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           
  7081                           ;psect for function ___flmul
  7082  004B                     ___flmul:	
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7086  004B  1283               	bcf	3,5	;RP0=0, select bank0
  7087  004C  1303               	bcf	3,6	;RP1=0, select bank0
  7088  004D  082C               	movf	___flmul@b+3,w
  7089  004E  3980               	andlw	128
  7090  004F  00B1               	movwf	??___flmul
  7091  0050  0831               	movf	??___flmul,w
  7092  0051  00B6               	movwf	___flmul@sign
  7093  0052  082C               	movf	___flmul@b+3,w
  7094  0053  00B1               	movwf	??___flmul
  7095  0054  0731               	addwf	??___flmul,w
  7096  0055  00B2               	movwf	??___flmul+1
  7097  0056  0832               	movf	??___flmul+1,w
  7098  0057  00BC               	movwf	___flmul@bexp
  7099  0058  1BAB               	btfsc	___flmul@b+2,7
  7100  0059  143C               	bsf	___flmul@bexp,0
  7101  005A  083C               	movf	___flmul@bexp,w
  7102  005B  1903               	btfsc	3,2
  7103  005C  286A               	goto	l3094
  7104  005D  0A3C               	incf	___flmul@bexp,w
  7105  005E  1D03               	btfss	3,2
  7106  005F  2868               	goto	l3092
  7107  0060  3000               	movlw	0
  7108  0061  00AC               	movwf	___flmul@b+3
  7109  0062  3000               	movlw	0
  7110  0063  00AB               	movwf	___flmul@b+2
  7111  0064  3000               	movlw	0
  7112  0065  00AA               	movwf	___flmul@b+1
  7113  0066  3000               	movlw	0
  7114  0067  00A9               	movwf	___flmul@b
  7115  0068                     l3092:	
  7116  0068  17AB               	bsf	___flmul@b+2,7
  7117  0069  2872               	goto	l3096
  7118  006A                     l3094:	
  7119  006A  3000               	movlw	0
  7120  006B  00AC               	movwf	___flmul@b+3
  7121  006C  3000               	movlw	0
  7122  006D  00AB               	movwf	___flmul@b+2
  7123  006E  3000               	movlw	0
  7124  006F  00AA               	movwf	___flmul@b+1
  7125  0070  3000               	movlw	0
  7126  0071  00A9               	movwf	___flmul@b
  7127  0072                     l3096:	
  7128  0072  0830               	movf	___flmul@a+3,w
  7129  0073  3980               	andlw	128
  7130  0074  00B1               	movwf	??___flmul
  7131  0075  0831               	movf	??___flmul,w
  7132  0076  06B6               	xorwf	___flmul@sign,f
  7133  0077  0830               	movf	___flmul@a+3,w
  7134  0078  00B1               	movwf	??___flmul
  7135  0079  0731               	addwf	??___flmul,w
  7136  007A  00B2               	movwf	??___flmul+1
  7137  007B  0832               	movf	??___flmul+1,w
  7138  007C  00BB               	movwf	___flmul@aexp
  7139  007D  1BAF               	btfsc	___flmul@a+2,7
  7140  007E  143B               	bsf	___flmul@aexp,0
  7141  007F  083B               	movf	___flmul@aexp,w
  7142  0080  1903               	btfsc	3,2
  7143  0081  288F               	goto	l3112
  7144  0082  0A3B               	incf	___flmul@aexp,w
  7145  0083  1D03               	btfss	3,2
  7146  0084  288D               	goto	l3110
  7147  0085  3000               	movlw	0
  7148  0086  00B0               	movwf	___flmul@a+3
  7149  0087  3000               	movlw	0
  7150  0088  00AF               	movwf	___flmul@a+2
  7151  0089  3000               	movlw	0
  7152  008A  00AE               	movwf	___flmul@a+1
  7153  008B  3000               	movlw	0
  7154  008C  00AD               	movwf	___flmul@a
  7155  008D                     l3110:	
  7156  008D  17AF               	bsf	___flmul@a+2,7
  7157  008E  2897               	goto	l3114
  7158  008F                     l3112:	
  7159  008F  3000               	movlw	0
  7160  0090  00B0               	movwf	___flmul@a+3
  7161  0091  3000               	movlw	0
  7162  0092  00AF               	movwf	___flmul@a+2
  7163  0093  3000               	movlw	0
  7164  0094  00AE               	movwf	___flmul@a+1
  7165  0095  3000               	movlw	0
  7166  0096  00AD               	movwf	___flmul@a
  7167  0097                     l3114:	
  7168  0097  083B               	movf	___flmul@aexp,w
  7169  0098  1D03               	btfss	3,2
  7170  0099  083C               	movf	___flmul@bexp,w
  7171  009A  1D03               	btfss	3,2
  7172  009B  28A5               	goto	l3122
  7173  009C  3000               	movlw	0
  7174  009D  00AC               	movwf	?___flmul+3
  7175  009E  3000               	movlw	0
  7176  009F  00AB               	movwf	?___flmul+2
  7177  00A0  3000               	movlw	0
  7178  00A1  00AA               	movwf	?___flmul+1
  7179  00A2  3000               	movlw	0
  7180  00A3  00A9               	movwf	?___flmul
  7181  00A4  0008               	return
  7182  00A5                     l3122:	
  7183  00A5  0829               	movf	___flmul@b,w
  7184  00A6  00B1               	movwf	??___flmul
  7185  00A7  0831               	movf	??___flmul,w
  7186  00A8  00A0               	movwf	__Umul8_16@multiplicand
  7187  00A9  082F               	movf	___flmul@a+2,w
  7188  00AA  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7189  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  7190  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  7191  00B1  0821               	movf	?__Umul8_16+1,w
  7192  00B2  00C2               	movwf	___flmul@temp+1
  7193  00B3  0820               	movf	?__Umul8_16,w
  7194  00B4  00C1               	movwf	___flmul@temp
  7195  00B5  0841               	movf	___flmul@temp,w
  7196  00B6  00B1               	movwf	??___flmul
  7197  00B7  01B2               	clrf	??___flmul+1
  7198  00B8  01B3               	clrf	??___flmul+2
  7199  00B9  01B4               	clrf	??___flmul+3
  7200  00BA  0834               	movf	??___flmul+3,w
  7201  00BB  00BA               	movwf	___flmul@grs+3
  7202  00BC  0833               	movf	??___flmul+2,w
  7203  00BD  00B9               	movwf	___flmul@grs+2
  7204  00BE  0832               	movf	??___flmul+1,w
  7205  00BF  00B8               	movwf	___flmul@grs+1
  7206  00C0  0831               	movf	??___flmul,w
  7207  00C1  00B7               	movwf	___flmul@grs
  7208  00C2  0842               	movf	___flmul@temp+1,w
  7209  00C3  00B1               	movwf	??___flmul
  7210  00C4  01B2               	clrf	??___flmul+1
  7211  00C5  01B3               	clrf	??___flmul+2
  7212  00C6  01B4               	clrf	??___flmul+3
  7213  00C7  0834               	movf	??___flmul+3,w
  7214  00C8  00C0               	movwf	___flmul@prod+3
  7215  00C9  0833               	movf	??___flmul+2,w
  7216  00CA  00BF               	movwf	___flmul@prod+2
  7217  00CB  0832               	movf	??___flmul+1,w
  7218  00CC  00BE               	movwf	___flmul@prod+1
  7219  00CD  0831               	movf	??___flmul,w
  7220  00CE  00BD               	movwf	___flmul@prod
  7221  00CF  082A               	movf	___flmul@b+1,w
  7222  00D0  00B1               	movwf	??___flmul
  7223  00D1  0831               	movf	??___flmul,w
  7224  00D2  00A0               	movwf	__Umul8_16@multiplicand
  7225  00D3  082E               	movf	___flmul@a+1,w
  7226  00D4  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7227  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  7228  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  7229  00DB  0821               	movf	?__Umul8_16+1,w
  7230  00DC  00C2               	movwf	___flmul@temp+1
  7231  00DD  0820               	movf	?__Umul8_16,w
  7232  00DE  00C1               	movwf	___flmul@temp
  7233  00DF  0841               	movf	___flmul@temp,w
  7234  00E0  00B1               	movwf	??___flmul
  7235  00E1  01B2               	clrf	??___flmul+1
  7236  00E2  01B3               	clrf	??___flmul+2
  7237  00E3  01B4               	clrf	??___flmul+3
  7238  00E4  0831               	movf	??___flmul,w
  7239  00E5  07B7               	addwf	___flmul@grs,f
  7240  00E6  0832               	movf	??___flmul+1,w
  7241  00E7  1103               	clrz
  7242  00E8  1803               	skipnc
  7243  00E9  3E01               	addlw	1
  7244  00EA  1D03               	btfss	3,2
  7245  00EB  07B8               	addwf	___flmul@grs+1,f
  7246  00EC  0833               	movf	??___flmul+2,w
  7247  00ED  1103               	clrz
  7248  00EE  1803               	skipnc
  7249  00EF  3E01               	addlw	1
  7250  00F0  1D03               	btfss	3,2
  7251  00F1  07B9               	addwf	___flmul@grs+2,f
  7252  00F2  0834               	movf	??___flmul+3,w
  7253  00F3  1103               	clrz
  7254  00F4  1803               	skipnc
  7255  00F5  3E01               	addlw	1
  7256  00F6  1D03               	btfss	3,2
  7257  00F7  07BA               	addwf	___flmul@grs+3,f
  7258  00F8  0842               	movf	___flmul@temp+1,w
  7259  00F9  00B1               	movwf	??___flmul
  7260  00FA  01B2               	clrf	??___flmul+1
  7261  00FB  01B3               	clrf	??___flmul+2
  7262  00FC  01B4               	clrf	??___flmul+3
  7263  00FD  0831               	movf	??___flmul,w
  7264  00FE  07BD               	addwf	___flmul@prod,f
  7265  00FF  0832               	movf	??___flmul+1,w
  7266  0100  1103               	clrz
  7267  0101  1803               	skipnc
  7268  0102  3E01               	addlw	1
  7269  0103  1D03               	btfss	3,2
  7270  0104  07BE               	addwf	___flmul@prod+1,f
  7271  0105  0833               	movf	??___flmul+2,w
  7272  0106  1103               	clrz
  7273  0107  1803               	skipnc
  7274  0108  3E01               	addlw	1
  7275  0109  1D03               	btfss	3,2
  7276  010A  07BF               	addwf	___flmul@prod+2,f
  7277  010B  0834               	movf	??___flmul+3,w
  7278  010C  1103               	clrz
  7279  010D  1803               	skipnc
  7280  010E  3E01               	addlw	1
  7281  010F  1D03               	btfss	3,2
  7282  0110  07C0               	addwf	___flmul@prod+3,f
  7283  0111  082B               	movf	___flmul@b+2,w
  7284  0112  00B1               	movwf	??___flmul
  7285  0113  0831               	movf	??___flmul,w
  7286  0114  00A0               	movwf	__Umul8_16@multiplicand
  7287  0115  082D               	movf	___flmul@a,w
  7288  0116  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7289  011B  1283               	bcf	3,5	;RP0=0, select bank0
  7290  011C  1303               	bcf	3,6	;RP1=0, select bank0
  7291  011D  0821               	movf	?__Umul8_16+1,w
  7292  011E  00C2               	movwf	___flmul@temp+1
  7293  011F  0820               	movf	?__Umul8_16,w
  7294  0120  00C1               	movwf	___flmul@temp
  7295  0121  0841               	movf	___flmul@temp,w
  7296  0122  00B1               	movwf	??___flmul
  7297  0123  01B2               	clrf	??___flmul+1
  7298  0124  01B3               	clrf	??___flmul+2
  7299  0125  01B4               	clrf	??___flmul+3
  7300  0126  0831               	movf	??___flmul,w
  7301  0127  07B7               	addwf	___flmul@grs,f
  7302  0128  0832               	movf	??___flmul+1,w
  7303  0129  1103               	clrz
  7304  012A  1803               	skipnc
  7305  012B  3E01               	addlw	1
  7306  012C  1D03               	btfss	3,2
  7307  012D  07B8               	addwf	___flmul@grs+1,f
  7308  012E  0833               	movf	??___flmul+2,w
  7309  012F  1103               	clrz
  7310  0130  1803               	skipnc
  7311  0131  3E01               	addlw	1
  7312  0132  1D03               	btfss	3,2
  7313  0133  07B9               	addwf	___flmul@grs+2,f
  7314  0134  0834               	movf	??___flmul+3,w
  7315  0135  1103               	clrz
  7316  0136  1803               	skipnc
  7317  0137  3E01               	addlw	1
  7318  0138  1D03               	btfss	3,2
  7319  0139  07BA               	addwf	___flmul@grs+3,f
  7320  013A  0842               	movf	___flmul@temp+1,w
  7321  013B  00B1               	movwf	??___flmul
  7322  013C  01B2               	clrf	??___flmul+1
  7323  013D  01B3               	clrf	??___flmul+2
  7324  013E  01B4               	clrf	??___flmul+3
  7325  013F  0831               	movf	??___flmul,w
  7326  0140  07BD               	addwf	___flmul@prod,f
  7327  0141  0832               	movf	??___flmul+1,w
  7328  0142  1103               	clrz
  7329  0143  1803               	skipnc
  7330  0144  3E01               	addlw	1
  7331  0145  1D03               	btfss	3,2
  7332  0146  07BE               	addwf	___flmul@prod+1,f
  7333  0147  0833               	movf	??___flmul+2,w
  7334  0148  1103               	clrz
  7335  0149  1803               	skipnc
  7336  014A  3E01               	addlw	1
  7337  014B  1D03               	btfss	3,2
  7338  014C  07BF               	addwf	___flmul@prod+2,f
  7339  014D  0834               	movf	??___flmul+3,w
  7340  014E  1103               	clrz
  7341  014F  1803               	skipnc
  7342  0150  3E01               	addlw	1
  7343  0151  1D03               	btfss	3,2
  7344  0152  07C0               	addwf	___flmul@prod+3,f
  7345  0153  3008               	movlw	8
  7346  0154  00B1               	movwf	??___flmul
  7347  0155                     u3605:	
  7348  0155  1003               	clrc
  7349  0156  0DB7               	rlf	___flmul@grs,f
  7350  0157  0DB8               	rlf	___flmul@grs+1,f
  7351  0158  0DB9               	rlf	___flmul@grs+2,f
  7352  0159  0DBA               	rlf	___flmul@grs+3,f
  7353  015A  0BB1               	decfsz	??___flmul,f
  7354  015B  2955               	goto	u3605
  7355  015C  082A               	movf	___flmul@b+1,w
  7356  015D  00B1               	movwf	??___flmul
  7357  015E  0831               	movf	??___flmul,w
  7358  015F  00A0               	movwf	__Umul8_16@multiplicand
  7359  0160  082D               	movf	___flmul@a,w
  7360  0161  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7361  0166  1283               	bcf	3,5	;RP0=0, select bank0
  7362  0167  1303               	bcf	3,6	;RP1=0, select bank0
  7363  0168  0821               	movf	?__Umul8_16+1,w
  7364  0169  00C2               	movwf	___flmul@temp+1
  7365  016A  0820               	movf	?__Umul8_16,w
  7366  016B  00C1               	movwf	___flmul@temp
  7367  016C  0841               	movf	___flmul@temp,w
  7368  016D  00B1               	movwf	??___flmul
  7369  016E  0842               	movf	___flmul@temp+1,w
  7370  016F  00B2               	movwf	??___flmul+1
  7371  0170  01B3               	clrf	??___flmul+2
  7372  0171  01B4               	clrf	??___flmul+3
  7373  0172  0831               	movf	??___flmul,w
  7374  0173  07B7               	addwf	___flmul@grs,f
  7375  0174  0832               	movf	??___flmul+1,w
  7376  0175  1103               	clrz
  7377  0176  1803               	skipnc
  7378  0177  3E01               	addlw	1
  7379  0178  1D03               	btfss	3,2
  7380  0179  07B8               	addwf	___flmul@grs+1,f
  7381  017A  0833               	movf	??___flmul+2,w
  7382  017B  1103               	clrz
  7383  017C  1803               	skipnc
  7384  017D  3E01               	addlw	1
  7385  017E  1D03               	btfss	3,2
  7386  017F  07B9               	addwf	___flmul@grs+2,f
  7387  0180  0834               	movf	??___flmul+3,w
  7388  0181  1103               	clrz
  7389  0182  1803               	skipnc
  7390  0183  3E01               	addlw	1
  7391  0184  1D03               	btfss	3,2
  7392  0185  07BA               	addwf	___flmul@grs+3,f
  7393  0186  0829               	movf	___flmul@b,w
  7394  0187  00B1               	movwf	??___flmul
  7395  0188  0831               	movf	??___flmul,w
  7396  0189  00A0               	movwf	__Umul8_16@multiplicand
  7397  018A  082E               	movf	___flmul@a+1,w
  7398  018B  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7399  0190  1283               	bcf	3,5	;RP0=0, select bank0
  7400  0191  1303               	bcf	3,6	;RP1=0, select bank0
  7401  0192  0821               	movf	?__Umul8_16+1,w
  7402  0193  00C2               	movwf	___flmul@temp+1
  7403  0194  0820               	movf	?__Umul8_16,w
  7404  0195  00C1               	movwf	___flmul@temp
  7405  0196  0841               	movf	___flmul@temp,w
  7406  0197  00B1               	movwf	??___flmul
  7407  0198  0842               	movf	___flmul@temp+1,w
  7408  0199  00B2               	movwf	??___flmul+1
  7409  019A  01B3               	clrf	??___flmul+2
  7410  019B  01B4               	clrf	??___flmul+3
  7411  019C  0831               	movf	??___flmul,w
  7412  019D  07B7               	addwf	___flmul@grs,f
  7413  019E  0832               	movf	??___flmul+1,w
  7414  019F  1103               	clrz
  7415  01A0  1803               	skipnc
  7416  01A1  3E01               	addlw	1
  7417  01A2  1D03               	btfss	3,2
  7418  01A3  07B8               	addwf	___flmul@grs+1,f
  7419  01A4  0833               	movf	??___flmul+2,w
  7420  01A5  1103               	clrz
  7421  01A6  1803               	skipnc
  7422  01A7  3E01               	addlw	1
  7423  01A8  1D03               	btfss	3,2
  7424  01A9  07B9               	addwf	___flmul@grs+2,f
  7425  01AA  0834               	movf	??___flmul+3,w
  7426  01AB  1103               	clrz
  7427  01AC  1803               	skipnc
  7428  01AD  3E01               	addlw	1
  7429  01AE  1D03               	btfss	3,2
  7430  01AF  07BA               	addwf	___flmul@grs+3,f
  7431  01B0  3008               	movlw	8
  7432  01B1  00B1               	movwf	??___flmul
  7433  01B2                     u3635:	
  7434  01B2  1003               	clrc
  7435  01B3  0DB7               	rlf	___flmul@grs,f
  7436  01B4  0DB8               	rlf	___flmul@grs+1,f
  7437  01B5  0DB9               	rlf	___flmul@grs+2,f
  7438  01B6  0DBA               	rlf	___flmul@grs+3,f
  7439  01B7  0BB1               	decfsz	??___flmul,f
  7440  01B8  29B2               	goto	u3635
  7441  01B9  0829               	movf	___flmul@b,w
  7442  01BA  00B1               	movwf	??___flmul
  7443  01BB  0831               	movf	??___flmul,w
  7444  01BC  00A0               	movwf	__Umul8_16@multiplicand
  7445  01BD  082D               	movf	___flmul@a,w
  7446  01BE  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7447  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  7448  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  7449  01C5  0821               	movf	?__Umul8_16+1,w
  7450  01C6  00C2               	movwf	___flmul@temp+1
  7451  01C7  0820               	movf	?__Umul8_16,w
  7452  01C8  00C1               	movwf	___flmul@temp
  7453  01C9  0841               	movf	___flmul@temp,w
  7454  01CA  00B1               	movwf	??___flmul
  7455  01CB  0842               	movf	___flmul@temp+1,w
  7456  01CC  00B2               	movwf	??___flmul+1
  7457  01CD  01B3               	clrf	??___flmul+2
  7458  01CE  01B4               	clrf	??___flmul+3
  7459  01CF  0831               	movf	??___flmul,w
  7460  01D0  07B7               	addwf	___flmul@grs,f
  7461  01D1  0832               	movf	??___flmul+1,w
  7462  01D2  1103               	clrz
  7463  01D3  1803               	skipnc
  7464  01D4  3E01               	addlw	1
  7465  01D5  1D03               	btfss	3,2
  7466  01D6  07B8               	addwf	___flmul@grs+1,f
  7467  01D7  0833               	movf	??___flmul+2,w
  7468  01D8  1103               	clrz
  7469  01D9  1803               	skipnc
  7470  01DA  3E01               	addlw	1
  7471  01DB  1D03               	btfss	3,2
  7472  01DC  07B9               	addwf	___flmul@grs+2,f
  7473  01DD  0834               	movf	??___flmul+3,w
  7474  01DE  1103               	clrz
  7475  01DF  1803               	skipnc
  7476  01E0  3E01               	addlw	1
  7477  01E1  1D03               	btfss	3,2
  7478  01E2  07BA               	addwf	___flmul@grs+3,f
  7479  01E3  082A               	movf	___flmul@b+1,w
  7480  01E4  00B1               	movwf	??___flmul
  7481  01E5  0831               	movf	??___flmul,w
  7482  01E6  00A0               	movwf	__Umul8_16@multiplicand
  7483  01E7  082F               	movf	___flmul@a+2,w
  7484  01E8  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7485  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  7486  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  7487  01EF  0821               	movf	?__Umul8_16+1,w
  7488  01F0  00C2               	movwf	___flmul@temp+1
  7489  01F1  0820               	movf	?__Umul8_16,w
  7490  01F2  00C1               	movwf	___flmul@temp
  7491  01F3  0841               	movf	___flmul@temp,w
  7492  01F4  00B1               	movwf	??___flmul
  7493  01F5  0842               	movf	___flmul@temp+1,w
  7494  01F6  00B2               	movwf	??___flmul+1
  7495  01F7  01B3               	clrf	??___flmul+2
  7496  01F8  01B4               	clrf	??___flmul+3
  7497  01F9  0831               	movf	??___flmul,w
  7498  01FA  07BD               	addwf	___flmul@prod,f
  7499  01FB  0832               	movf	??___flmul+1,w
  7500  01FC  1103               	clrz
  7501  01FD  1803               	skipnc
  7502  01FE  3E01               	addlw	1
  7503  01FF  1D03               	btfss	3,2
  7504  0200  07BE               	addwf	___flmul@prod+1,f
  7505  0201  0833               	movf	??___flmul+2,w
  7506  0202  1103               	clrz
  7507  0203  1803               	skipnc
  7508  0204  3E01               	addlw	1
  7509  0205  1D03               	btfss	3,2
  7510  0206  07BF               	addwf	___flmul@prod+2,f
  7511  0207  0834               	movf	??___flmul+3,w
  7512  0208  1103               	clrz
  7513  0209  1803               	skipnc
  7514  020A  3E01               	addlw	1
  7515  020B  1D03               	btfss	3,2
  7516  020C  07C0               	addwf	___flmul@prod+3,f
  7517  020D  082B               	movf	___flmul@b+2,w
  7518  020E  00B1               	movwf	??___flmul
  7519  020F  0831               	movf	??___flmul,w
  7520  0210  00A0               	movwf	__Umul8_16@multiplicand
  7521  0211  082E               	movf	___flmul@a+1,w
  7522  0212  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7523  0217  1283               	bcf	3,5	;RP0=0, select bank0
  7524  0218  1303               	bcf	3,6	;RP1=0, select bank0
  7525  0219  0821               	movf	?__Umul8_16+1,w
  7526  021A  00C2               	movwf	___flmul@temp+1
  7527  021B  0820               	movf	?__Umul8_16,w
  7528  021C  00C1               	movwf	___flmul@temp
  7529  021D  0841               	movf	___flmul@temp,w
  7530  021E  00B1               	movwf	??___flmul
  7531  021F  0842               	movf	___flmul@temp+1,w
  7532  0220  00B2               	movwf	??___flmul+1
  7533  0221  01B3               	clrf	??___flmul+2
  7534  0222  01B4               	clrf	??___flmul+3
  7535  0223  0831               	movf	??___flmul,w
  7536  0224  07BD               	addwf	___flmul@prod,f
  7537  0225  0832               	movf	??___flmul+1,w
  7538  0226  1103               	clrz
  7539  0227  1803               	skipnc
  7540  0228  3E01               	addlw	1
  7541  0229  1D03               	btfss	3,2
  7542  022A  07BE               	addwf	___flmul@prod+1,f
  7543  022B  0833               	movf	??___flmul+2,w
  7544  022C  1103               	clrz
  7545  022D  1803               	skipnc
  7546  022E  3E01               	addlw	1
  7547  022F  1D03               	btfss	3,2
  7548  0230  07BF               	addwf	___flmul@prod+2,f
  7549  0231  0834               	movf	??___flmul+3,w
  7550  0232  1103               	clrz
  7551  0233  1803               	skipnc
  7552  0234  3E01               	addlw	1
  7553  0235  1D03               	btfss	3,2
  7554  0236  07C0               	addwf	___flmul@prod+3,f
  7555  0237  082B               	movf	___flmul@b+2,w
  7556  0238  00B1               	movwf	??___flmul
  7557  0239  0831               	movf	??___flmul,w
  7558  023A  00A0               	movwf	__Umul8_16@multiplicand
  7559  023B  082F               	movf	___flmul@a+2,w
  7560  023C  160A  118A  273B  120A  118A  	fcall	__Umul8_16
  7561  0241  1283               	bcf	3,5	;RP0=0, select bank0
  7562  0242  1303               	bcf	3,6	;RP1=0, select bank0
  7563  0243  0821               	movf	?__Umul8_16+1,w
  7564  0244  00C2               	movwf	___flmul@temp+1
  7565  0245  0820               	movf	?__Umul8_16,w
  7566  0246  00C1               	movwf	___flmul@temp
  7567  0247  0841               	movf	___flmul@temp,w
  7568  0248  00B1               	movwf	??___flmul
  7569  0249  0842               	movf	___flmul@temp+1,w
  7570  024A  00B2               	movwf	??___flmul+1
  7571  024B  01B3               	clrf	??___flmul+2
  7572  024C  01B4               	clrf	??___flmul+3
  7573  024D  3008               	movlw	8
  7574  024E                     u3675:	
  7575  024E  1003               	clrc
  7576  024F  0DB1               	rlf	??___flmul,f
  7577  0250  0DB2               	rlf	??___flmul+1,f
  7578  0251  0DB3               	rlf	??___flmul+2,f
  7579  0252  0DB4               	rlf	??___flmul+3,f
  7580  0253  3EFF               	addlw	-1
  7581  0254  1D03               	skipz
  7582  0255  2A4E               	goto	u3675
  7583  0256  0831               	movf	??___flmul,w
  7584  0257  07BD               	addwf	___flmul@prod,f
  7585  0258  0832               	movf	??___flmul+1,w
  7586  0259  1103               	clrz
  7587  025A  1803               	skipnc
  7588  025B  3E01               	addlw	1
  7589  025C  1D03               	btfss	3,2
  7590  025D  07BE               	addwf	___flmul@prod+1,f
  7591  025E  0833               	movf	??___flmul+2,w
  7592  025F  1103               	clrz
  7593  0260  1803               	skipnc
  7594  0261  3E01               	addlw	1
  7595  0262  1D03               	btfss	3,2
  7596  0263  07BF               	addwf	___flmul@prod+2,f
  7597  0264  0834               	movf	??___flmul+3,w
  7598  0265  1103               	clrz
  7599  0266  1803               	skipnc
  7600  0267  3E01               	addlw	1
  7601  0268  1D03               	btfss	3,2
  7602  0269  07C0               	addwf	___flmul@prod+3,f
  7603  026A  0837               	movf	___flmul@grs,w
  7604  026B  00B1               	movwf	??___flmul
  7605  026C  0838               	movf	___flmul@grs+1,w
  7606  026D  00B2               	movwf	??___flmul+1
  7607  026E  0839               	movf	___flmul@grs+2,w
  7608  026F  00B3               	movwf	??___flmul+2
  7609  0270  083A               	movf	___flmul@grs+3,w
  7610  0271  00B4               	movwf	??___flmul+3
  7611  0272  3018               	movlw	24
  7612  0273                     u3695:	
  7613  0273  1003               	clrc
  7614  0274  0CB4               	rrf	??___flmul+3,f
  7615  0275  0CB3               	rrf	??___flmul+2,f
  7616  0276  0CB2               	rrf	??___flmul+1,f
  7617  0277  0CB1               	rrf	??___flmul,f
  7618  0278  3EFF               	addlw	-1
  7619  0279  1D03               	skipz
  7620  027A  2A73               	goto	u3695
  7621  027B  0831               	movf	??___flmul,w
  7622  027C  07BD               	addwf	___flmul@prod,f
  7623  027D  0832               	movf	??___flmul+1,w
  7624  027E  1103               	clrz
  7625  027F  1803               	skipnc
  7626  0280  3E01               	addlw	1
  7627  0281  1D03               	btfss	3,2
  7628  0282  07BE               	addwf	___flmul@prod+1,f
  7629  0283  0833               	movf	??___flmul+2,w
  7630  0284  1103               	clrz
  7631  0285  1803               	skipnc
  7632  0286  3E01               	addlw	1
  7633  0287  1D03               	btfss	3,2
  7634  0288  07BF               	addwf	___flmul@prod+2,f
  7635  0289  0834               	movf	??___flmul+3,w
  7636  028A  1103               	clrz
  7637  028B  1803               	skipnc
  7638  028C  3E01               	addlw	1
  7639  028D  1D03               	btfss	3,2
  7640  028E  07C0               	addwf	___flmul@prod+3,f
  7641  028F  3008               	movlw	8
  7642  0290  00B1               	movwf	??___flmul
  7643  0291                     u3715:	
  7644  0291  1003               	clrc
  7645  0292  0DB7               	rlf	___flmul@grs,f
  7646  0293  0DB8               	rlf	___flmul@grs+1,f
  7647  0294  0DB9               	rlf	___flmul@grs+2,f
  7648  0295  0DBA               	rlf	___flmul@grs+3,f
  7649  0296  0BB1               	decfsz	??___flmul,f
  7650  0297  2A91               	goto	u3715
  7651  0298  083C               	movf	___flmul@bexp,w
  7652  0299  073B               	addwf	___flmul@aexp,w
  7653  029A  00B1               	movwf	??___flmul
  7654  029B  01B2               	clrf	??___flmul+1
  7655  029C  0DB2               	rlf	??___flmul+1,f
  7656  029D  0831               	movf	??___flmul,w
  7657  029E  3E82               	addlw	130
  7658  029F  00C1               	movwf	___flmul@temp
  7659  02A0  0832               	movf	??___flmul+1,w
  7660  02A1  1803               	skipnc
  7661  02A2  3E01               	addlw	1
  7662  02A3  3EFF               	addlw	255
  7663  02A4  00C2               	movwf	___flmul@temp+1
  7664  02A5                     l3174:	
  7665  02A5  1BBF               	btfsc	___flmul@prod+2,7
  7666  02A6  2AC2               	goto	l3176
  7667  02A7  3001               	movlw	1
  7668  02A8  00B1               	movwf	??___flmul
  7669  02A9                     u3725:	
  7670  02A9  1003               	clrc
  7671  02AA  0DBD               	rlf	___flmul@prod,f
  7672  02AB  0DBE               	rlf	___flmul@prod+1,f
  7673  02AC  0DBF               	rlf	___flmul@prod+2,f
  7674  02AD  0DC0               	rlf	___flmul@prod+3,f
  7675  02AE  0BB1               	decfsz	??___flmul,f
  7676  02AF  2AA9               	goto	u3725
  7677  02B0  1BBA               	btfsc	___flmul@grs+3,7
  7678  02B1  143D               	bsf	___flmul@prod,0
  7679  02B2  3001               	movlw	1
  7680  02B3  00B1               	movwf	??___flmul
  7681  02B4                     u3745:	
  7682  02B4  1003               	clrc
  7683  02B5  0DB7               	rlf	___flmul@grs,f
  7684  02B6  0DB8               	rlf	___flmul@grs+1,f
  7685  02B7  0DB9               	rlf	___flmul@grs+2,f
  7686  02B8  0DBA               	rlf	___flmul@grs+3,f
  7687  02B9  0BB1               	decfsz	??___flmul,f
  7688  02BA  2AB4               	goto	u3745
  7689  02BB  30FF               	movlw	255
  7690  02BC  07C1               	addwf	___flmul@temp,f
  7691  02BD  1803               	skipnc
  7692  02BE  0AC2               	incf	___flmul@temp+1,f
  7693  02BF  30FF               	movlw	255
  7694  02C0  07C2               	addwf	___flmul@temp+1,f
  7695  02C1  2AA5               	goto	l3174
  7696  02C2                     l3176:	
  7697  02C2  01BB               	clrf	___flmul@aexp
  7698  02C3  1FBA               	btfss	___flmul@grs+3,7
  7699  02C4  2ADB               	goto	l3186
  7700  02C5  30FF               	movlw	255
  7701  02C6  0537               	andwf	___flmul@grs,w
  7702  02C7  00B1               	movwf	??___flmul
  7703  02C8  30FF               	movlw	255
  7704  02C9  0538               	andwf	___flmul@grs+1,w
  7705  02CA  00B2               	movwf	??___flmul+1
  7706  02CB  30FF               	movlw	255
  7707  02CC  0539               	andwf	___flmul@grs+2,w
  7708  02CD  00B3               	movwf	??___flmul+2
  7709  02CE  307F               	movlw	127
  7710  02CF  053A               	andwf	___flmul@grs+3,w
  7711  02D0  00B4               	movwf	??___flmul+3
  7712  02D1  0834               	movf	??___flmul+3,w
  7713  02D2  0433               	iorwf	??___flmul+2,w
  7714  02D3  0432               	iorwf	??___flmul+1,w
  7715  02D4  0431               	iorwf	??___flmul,w
  7716  02D5  1903               	skipnz
  7717  02D6  183D               	btfsc	___flmul@prod,0
  7718  02D7  2AD9               	goto	l3182
  7719  02D8  2ADB               	goto	l3186
  7720  02D9                     l3182:	
  7721  02D9  01BB               	clrf	___flmul@aexp
  7722  02DA  0ABB               	incf	___flmul@aexp,f
  7723  02DB                     l3186:	
  7724  02DB  083B               	movf	___flmul@aexp,w
  7725  02DC  1903               	btfsc	3,2
  7726  02DD  2B0D               	goto	l3196
  7727  02DE  3001               	movlw	1
  7728  02DF  07BD               	addwf	___flmul@prod,f
  7729  02E0  3000               	movlw	0
  7730  02E1  1803               	skipnc
  7731  02E2  3001               	movlw	1
  7732  02E3  07BE               	addwf	___flmul@prod+1,f
  7733  02E4  3000               	movlw	0
  7734  02E5  1803               	skipnc
  7735  02E6  3001               	movlw	1
  7736  02E7  07BF               	addwf	___flmul@prod+2,f
  7737  02E8  3000               	movlw	0
  7738  02E9  1803               	skipnc
  7739  02EA  3001               	movlw	1
  7740  02EB  07C0               	addwf	___flmul@prod+3,f
  7741  02EC  1C40               	btfss	___flmul@prod+3,0
  7742  02ED  2B0D               	goto	l3196
  7743  02EE  083D               	movf	___flmul@prod,w
  7744  02EF  00B1               	movwf	??___flmul
  7745  02F0  083E               	movf	___flmul@prod+1,w
  7746  02F1  00B2               	movwf	??___flmul+1
  7747  02F2  083F               	movf	___flmul@prod+2,w
  7748  02F3  00B3               	movwf	??___flmul+2
  7749  02F4  0840               	movf	___flmul@prod+3,w
  7750  02F5  00B4               	movwf	??___flmul+3
  7751  02F6  3001               	movlw	1
  7752  02F7  00B5               	movwf	??___flmul+4
  7753  02F8                     u3815:	
  7754  02F8  0D34               	rlf	??___flmul+3,w
  7755  02F9  0CB4               	rrf	??___flmul+3,f
  7756  02FA  0CB3               	rrf	??___flmul+2,f
  7757  02FB  0CB2               	rrf	??___flmul+1,f
  7758  02FC  0CB1               	rrf	??___flmul,f
  7759  02FD  0BB5               	decfsz	??___flmul+4,f
  7760  02FE  2AF8               	goto	u3815
  7761  02FF  0834               	movf	??___flmul+3,w
  7762  0300  00C0               	movwf	___flmul@prod+3
  7763  0301  0833               	movf	??___flmul+2,w
  7764  0302  00BF               	movwf	___flmul@prod+2
  7765  0303  0832               	movf	??___flmul+1,w
  7766  0304  00BE               	movwf	___flmul@prod+1
  7767  0305  0831               	movf	??___flmul,w
  7768  0306  00BD               	movwf	___flmul@prod
  7769  0307  3001               	movlw	1
  7770  0308  07C1               	addwf	___flmul@temp,f
  7771  0309  1803               	skipnc
  7772  030A  0AC2               	incf	___flmul@temp+1,f
  7773  030B  3000               	movlw	0
  7774  030C  07C2               	addwf	___flmul@temp+1,f
  7775  030D                     l3196:	
  7776  030D  0842               	movf	___flmul@temp+1,w
  7777  030E  3A80               	xorlw	128
  7778  030F  00FF               	movwf	127
  7779  0310  3080               	movlw	128
  7780  0311  027F               	subwf	127,w
  7781  0312  1D03               	skipz
  7782  0313  2B16               	goto	u3825
  7783  0314  30FF               	movlw	255
  7784  0315  0241               	subwf	___flmul@temp,w
  7785  0316                     u3825:	
  7786  0316  1C03               	skipc
  7787  0317  2B23               	goto	l3200
  7788  0318  307F               	movlw	127
  7789  0319  1283               	bcf	3,5	;RP0=0, select bank0
  7790  031A  1303               	bcf	3,6	;RP1=0, select bank0
  7791  031B  00C0               	movwf	___flmul@prod+3
  7792  031C  3080               	movlw	128
  7793  031D  00BF               	movwf	___flmul@prod+2
  7794  031E  3000               	movlw	0
  7795  031F  00BE               	movwf	___flmul@prod+1
  7796  0320  3000               	movlw	0
  7797  0321  00BD               	movwf	___flmul@prod
  7798  0322  2B53               	goto	l1099
  7799  0323                     l3200:	
  7800  0323  1283               	bcf	3,5	;RP0=0, select bank0
  7801  0324  1303               	bcf	3,6	;RP1=0, select bank0
  7802  0325  0842               	movf	___flmul@temp+1,w
  7803  0326  3A80               	xorlw	128
  7804  0327  00FF               	movwf	127
  7805  0328  3080               	movlw	128
  7806  0329  027F               	subwf	127,w
  7807  032A  1D03               	skipz
  7808  032B  2B2E               	goto	u3835
  7809  032C  3001               	movlw	1
  7810  032D  0241               	subwf	___flmul@temp,w
  7811  032E                     u3835:	
  7812  032E  1803               	skipnc
  7813  032F  2B3C               	goto	l3206
  7814  0330  3000               	movlw	0
  7815  0331  1283               	bcf	3,5	;RP0=0, select bank0
  7816  0332  1303               	bcf	3,6	;RP1=0, select bank0
  7817  0333  00C0               	movwf	___flmul@prod+3
  7818  0334  3000               	movlw	0
  7819  0335  00BF               	movwf	___flmul@prod+2
  7820  0336  3000               	movlw	0
  7821  0337  00BE               	movwf	___flmul@prod+1
  7822  0338  3000               	movlw	0
  7823  0339  00BD               	movwf	___flmul@prod
  7824  033A  01B6               	clrf	___flmul@sign
  7825  033B  2B53               	goto	l1099
  7826  033C                     l3206:	
  7827  033C  1283               	bcf	3,5	;RP0=0, select bank0
  7828  033D  1303               	bcf	3,6	;RP1=0, select bank0
  7829  033E  0841               	movf	___flmul@temp,w
  7830  033F  00B1               	movwf	??___flmul
  7831  0340  0831               	movf	??___flmul,w
  7832  0341  00BC               	movwf	___flmul@bexp
  7833  0342  30FF               	movlw	255
  7834  0343  05BD               	andwf	___flmul@prod,f
  7835  0344  30FF               	movlw	255
  7836  0345  05BE               	andwf	___flmul@prod+1,f
  7837  0346  307F               	movlw	127
  7838  0347  05BF               	andwf	___flmul@prod+2,f
  7839  0348  3000               	movlw	0
  7840  0349  05C0               	andwf	___flmul@prod+3,f
  7841  034A  183C               	btfsc	___flmul@bexp,0
  7842  034B  17BF               	bsf	___flmul@prod+2,7
  7843  034C  083C               	movf	___flmul@bexp,w
  7844  034D  00B1               	movwf	??___flmul
  7845  034E  1003               	clrc
  7846  034F  0C31               	rrf	??___flmul,w
  7847  0350  00B2               	movwf	??___flmul+1
  7848  0351  0832               	movf	??___flmul+1,w
  7849  0352  00C0               	movwf	___flmul@prod+3
  7850  0353                     l1099:	
  7851  0353  0836               	movf	___flmul@sign,w
  7852  0354  00B1               	movwf	??___flmul
  7853  0355  0831               	movf	??___flmul,w
  7854  0356  04C0               	iorwf	___flmul@prod+3,f
  7855  0357  0840               	movf	___flmul@prod+3,w
  7856  0358  00AC               	movwf	?___flmul+3
  7857  0359  083F               	movf	___flmul@prod+2,w
  7858  035A  00AB               	movwf	?___flmul+2
  7859  035B  083E               	movf	___flmul@prod+1,w
  7860  035C  00AA               	movwf	?___flmul+1
  7861  035D  083D               	movf	___flmul@prod,w
  7862  035E  00A9               	movwf	?___flmul
  7863  035F  0008               	return
  7864  0360                     __end_of___flmul:	
  7865                           
  7866                           	psect	text41
  7867  173B                     __ptext41:	
  7868 ;; *************** function __Umul8_16 *****************
  7869 ;; Defined at:
  7870 ;;		line 4 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  multiplier      1    wreg     unsigned char 
  7873 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  multiplier      1    8[BANK0 ] unsigned char 
  7876 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  7877 ;;  product         2    4[BANK0 ] unsigned int 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  2    0[BANK0 ] unsigned int 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7887 ;;      Params:         0       2       0       0       0
  7888 ;;      Locals:         0       5       0       0       0
  7889 ;;      Temps:          0       2       0       0       0
  7890 ;;      Totals:         0       9       0       0       0
  7891 ;;Total ram usage:        9 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    1
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		___flmul
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           
  7902                           ;psect for function __Umul8_16
  7903  173B                     __Umul8_16:	
  7904                           
  7905                           ;incstack = 0
  7906                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7907                           ;__Umul8_16@multiplier stored from wreg
  7908  173B  1283               	bcf	3,5	;RP0=0, select bank0
  7909  173C  1303               	bcf	3,6	;RP1=0, select bank0
  7910  173D  00A8               	movwf	__Umul8_16@multiplier
  7911  173E  01A4               	clrf	__Umul8_16@product
  7912  173F  01A5               	clrf	__Umul8_16@product+1
  7913  1740  0820               	movf	__Umul8_16@multiplicand,w
  7914  1741  00A2               	movwf	??__Umul8_16
  7915  1742  01A3               	clrf	??__Umul8_16+1
  7916  1743  0822               	movf	??__Umul8_16,w
  7917  1744  00A6               	movwf	__Umul8_16@word_mpld
  7918  1745  0823               	movf	??__Umul8_16+1,w
  7919  1746  00A7               	movwf	__Umul8_16@word_mpld+1
  7920  1747                     l2712:	
  7921  1747  1C28               	btfss	__Umul8_16@multiplier,0
  7922  1748  2F4F               	goto	l1148
  7923  1749  0826               	movf	__Umul8_16@word_mpld,w
  7924  174A  07A4               	addwf	__Umul8_16@product,f
  7925  174B  1803               	skipnc
  7926  174C  0AA5               	incf	__Umul8_16@product+1,f
  7927  174D  0827               	movf	__Umul8_16@word_mpld+1,w
  7928  174E  07A5               	addwf	__Umul8_16@product+1,f
  7929  174F                     l1148:	
  7930  174F  3001               	movlw	1
  7931  1750                     u2875:	
  7932  1750  1003               	clrc
  7933  1751  0DA6               	rlf	__Umul8_16@word_mpld,f
  7934  1752  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  7935  1753  3EFF               	addlw	-1
  7936  1754  1D03               	skipz
  7937  1755  2F50               	goto	u2875
  7938  1756  1003               	clrc
  7939  1757  0CA8               	rrf	__Umul8_16@multiplier,f
  7940  1758  0828               	movf	__Umul8_16@multiplier,w
  7941  1759  1D03               	btfss	3,2
  7942  175A  2F47               	goto	l2712
  7943  175B  0825               	movf	__Umul8_16@product+1,w
  7944  175C  00A1               	movwf	?__Umul8_16+1
  7945  175D  0824               	movf	__Umul8_16@product,w
  7946  175E  00A0               	movwf	?__Umul8_16
  7947  175F  0008               	return
  7948  1760                     __end_of__Umul8_16:	
  7949                           
  7950                           	psect	text42
  7951  0E5D                     __ptext42:	
  7952 ;; *************** function ___fldiv *****************
  7953 ;; Defined at:
  7954 ;;		line 8 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  a               4    0[BANK0 ] unsigned int 
  7957 ;;  b               4    4[BANK0 ] unsigned int 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  grs             4   20[BANK0 ] unsigned long 
  7960 ;;  rem             4   13[BANK0 ] unsigned long 
  7961 ;;  new_exp         2   18[BANK0 ] int 
  7962 ;;  aexp            1   25[BANK0 ] unsigned char 
  7963 ;;  bexp            1   24[BANK0 ] unsigned char 
  7964 ;;  sign            1   17[BANK0 ] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  4    0[BANK0 ] unsigned char 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, btemp+1
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7974 ;;      Params:         0       8       0       0       0
  7975 ;;      Locals:         0      13       0       0       0
  7976 ;;      Temps:          0       5       0       0       0
  7977 ;;      Totals:         0      26       0       0       0
  7978 ;;Total ram usage:       26 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; Hardware stack levels required when called:    1
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_pid_pid
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           
  7989                           ;psect for function ___fldiv
  7990  0E5D                     ___fldiv:	
  7991                           
  7992                           ;incstack = 0
  7993                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7994  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  7995  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  7996  0E5F  0827               	movf	___fldiv@b+3,w
  7997  0E60  3980               	andlw	128
  7998  0E61  00A8               	movwf	??___fldiv
  7999  0E62  0828               	movf	??___fldiv,w
  8000  0E63  00B1               	movwf	___fldiv@sign
  8001  0E64  0827               	movf	___fldiv@b+3,w
  8002  0E65  00A8               	movwf	??___fldiv
  8003  0E66  0728               	addwf	??___fldiv,w
  8004  0E67  00A9               	movwf	??___fldiv+1
  8005  0E68  0829               	movf	??___fldiv+1,w
  8006  0E69  00B8               	movwf	___fldiv@bexp
  8007  0E6A  1BA6               	btfsc	___fldiv@b+2,7
  8008  0E6B  1438               	bsf	___fldiv@bexp,0
  8009  0E6C  0838               	movf	___fldiv@bexp,w
  8010  0E6D  1903               	btfsc	3,2
  8011  0E6E  2E7D               	goto	l2954
  8012  0E6F  0A38               	incf	___fldiv@bexp,w
  8013  0E70  1D03               	btfss	3,2
  8014  0E71  2E7A               	goto	l2950
  8015  0E72  3000               	movlw	0
  8016  0E73  00A7               	movwf	___fldiv@b+3
  8017  0E74  3000               	movlw	0
  8018  0E75  00A6               	movwf	___fldiv@b+2
  8019  0E76  3000               	movlw	0
  8020  0E77  00A5               	movwf	___fldiv@b+1
  8021  0E78  3000               	movlw	0
  8022  0E79  00A4               	movwf	___fldiv@b
  8023  0E7A                     l2950:	
  8024  0E7A  17A6               	bsf	___fldiv@b+2,7
  8025  0E7B  01A7               	clrf	___fldiv@b+3
  8026  0E7C  2E85               	goto	l2956
  8027  0E7D                     l2954:	
  8028  0E7D  3000               	movlw	0
  8029  0E7E  00A7               	movwf	___fldiv@b+3
  8030  0E7F  3000               	movlw	0
  8031  0E80  00A6               	movwf	___fldiv@b+2
  8032  0E81  3000               	movlw	0
  8033  0E82  00A5               	movwf	___fldiv@b+1
  8034  0E83  3000               	movlw	0
  8035  0E84  00A4               	movwf	___fldiv@b
  8036  0E85                     l2956:	
  8037  0E85  0823               	movf	___fldiv@a+3,w
  8038  0E86  3980               	andlw	128
  8039  0E87  00A8               	movwf	??___fldiv
  8040  0E88  0828               	movf	??___fldiv,w
  8041  0E89  06B1               	xorwf	___fldiv@sign,f
  8042  0E8A  0823               	movf	___fldiv@a+3,w
  8043  0E8B  00A8               	movwf	??___fldiv
  8044  0E8C  0728               	addwf	??___fldiv,w
  8045  0E8D  00A9               	movwf	??___fldiv+1
  8046  0E8E  0829               	movf	??___fldiv+1,w
  8047  0E8F  00B9               	movwf	___fldiv@aexp
  8048  0E90  1BA2               	btfsc	___fldiv@a+2,7
  8049  0E91  1439               	bsf	___fldiv@aexp,0
  8050  0E92  0839               	movf	___fldiv@aexp,w
  8051  0E93  1903               	btfsc	3,2
  8052  0E94  2EA3               	goto	l2974
  8053  0E95  0A39               	incf	___fldiv@aexp,w
  8054  0E96  1D03               	btfss	3,2
  8055  0E97  2EA0               	goto	l2970
  8056  0E98  3000               	movlw	0
  8057  0E99  00A3               	movwf	___fldiv@a+3
  8058  0E9A  3000               	movlw	0
  8059  0E9B  00A2               	movwf	___fldiv@a+2
  8060  0E9C  3000               	movlw	0
  8061  0E9D  00A1               	movwf	___fldiv@a+1
  8062  0E9E  3000               	movlw	0
  8063  0E9F  00A0               	movwf	___fldiv@a
  8064  0EA0                     l2970:	
  8065  0EA0  17A2               	bsf	___fldiv@a+2,7
  8066  0EA1  01A3               	clrf	___fldiv@a+3
  8067  0EA2  2EAB               	goto	l1047
  8068  0EA3                     l2974:	
  8069  0EA3  3000               	movlw	0
  8070  0EA4  00A3               	movwf	___fldiv@a+3
  8071  0EA5  3000               	movlw	0
  8072  0EA6  00A2               	movwf	___fldiv@a+2
  8073  0EA7  3000               	movlw	0
  8074  0EA8  00A1               	movwf	___fldiv@a+1
  8075  0EA9  3000               	movlw	0
  8076  0EAA  00A0               	movwf	___fldiv@a
  8077  0EAB                     l1047:	
  8078  0EAB  0823               	movf	___fldiv@a+3,w
  8079  0EAC  0422               	iorwf	___fldiv@a+2,w
  8080  0EAD  0421               	iorwf	___fldiv@a+1,w
  8081  0EAE  0420               	iorwf	___fldiv@a,w
  8082  0EAF  1D03               	skipz
  8083  0EB0  2ECA               	goto	l2984
  8084  0EB1  3000               	movlw	0
  8085  0EB2  00A7               	movwf	___fldiv@b+3
  8086  0EB3  3000               	movlw	0
  8087  0EB4  00A6               	movwf	___fldiv@b+2
  8088  0EB5  3000               	movlw	0
  8089  0EB6  00A5               	movwf	___fldiv@b+1
  8090  0EB7  3000               	movlw	0
  8091  0EB8  00A4               	movwf	___fldiv@b
  8092  0EB9  3080               	movlw	128
  8093  0EBA  04A6               	iorwf	___fldiv@b+2,f
  8094  0EBB  307F               	movlw	127
  8095  0EBC  04A7               	iorwf	___fldiv@b+3,f
  8096  0EBD                     L5:	
  8097  0EBD  0831               	movf	___fldiv@sign,w
  8098  0EBE  00A8               	movwf	??___fldiv
  8099  0EBF  0828               	movf	??___fldiv,w
  8100  0EC0  04A7               	iorwf	___fldiv@b+3,f
  8101  0EC1  0827               	movf	___fldiv@b+3,w
  8102  0EC2  00A3               	movwf	?___fldiv+3
  8103  0EC3  0826               	movf	___fldiv@b+2,w
  8104  0EC4  00A2               	movwf	?___fldiv+2
  8105  0EC5  0825               	movf	___fldiv@b+1,w
  8106  0EC6  00A1               	movwf	?___fldiv+1
  8107  0EC7  0824               	movf	___fldiv@b,w
  8108  0EC8  00A0               	movwf	?___fldiv
  8109  0EC9  0008               	return
  8110  0ECA                     l2984:	
  8111  0ECA  0838               	movf	___fldiv@bexp,w
  8112  0ECB  1D03               	btfss	3,2
  8113  0ECC  2ED6               	goto	l2990
  8114  0ECD  3000               	movlw	0
  8115  0ECE  00A3               	movwf	?___fldiv+3
  8116  0ECF  3000               	movlw	0
  8117  0ED0  00A2               	movwf	?___fldiv+2
  8118  0ED1  3000               	movlw	0
  8119  0ED2  00A1               	movwf	?___fldiv+1
  8120  0ED3  3000               	movlw	0
  8121  0ED4  00A0               	movwf	?___fldiv
  8122  0ED5  0008               	return
  8123  0ED6                     l2990:	
  8124  0ED6  0838               	movf	___fldiv@bexp,w
  8125  0ED7  00A8               	movwf	??___fldiv
  8126  0ED8  01A9               	clrf	??___fldiv+1
  8127  0ED9  0829               	movf	??___fldiv+1,w
  8128  0EDA  00AB               	movwf	??___fldiv+3
  8129  0EDB  0839               	movf	___fldiv@aexp,w
  8130  0EDC  0228               	subwf	??___fldiv,w
  8131  0EDD  00AA               	movwf	??___fldiv+2
  8132  0EDE  1C03               	skipc
  8133  0EDF  03AB               	decf	??___fldiv+3,f
  8134  0EE0  082A               	movf	??___fldiv+2,w
  8135  0EE1  3E7F               	addlw	127
  8136  0EE2  00B2               	movwf	___fldiv@new_exp
  8137  0EE3  082B               	movf	??___fldiv+3,w
  8138  0EE4  1803               	skipnc
  8139  0EE5  3E01               	addlw	1
  8140  0EE6  3E00               	addlw	0
  8141  0EE7  00B3               	movwf	___fldiv@new_exp+1
  8142  0EE8  0827               	movf	___fldiv@b+3,w
  8143  0EE9  00B0               	movwf	___fldiv@rem+3
  8144  0EEA  0826               	movf	___fldiv@b+2,w
  8145  0EEB  00AF               	movwf	___fldiv@rem+2
  8146  0EEC  0825               	movf	___fldiv@b+1,w
  8147  0EED  00AE               	movwf	___fldiv@rem+1
  8148  0EEE  0824               	movf	___fldiv@b,w
  8149  0EEF  00AD               	movwf	___fldiv@rem
  8150  0EF0  3000               	movlw	0
  8151  0EF1  00A7               	movwf	___fldiv@b+3
  8152  0EF2  3000               	movlw	0
  8153  0EF3  00A6               	movwf	___fldiv@b+2
  8154  0EF4  3000               	movlw	0
  8155  0EF5  00A5               	movwf	___fldiv@b+1
  8156  0EF6  3000               	movlw	0
  8157  0EF7  00A4               	movwf	___fldiv@b
  8158  0EF8  3000               	movlw	0
  8159  0EF9  00B7               	movwf	___fldiv@grs+3
  8160  0EFA  3000               	movlw	0
  8161  0EFB  00B6               	movwf	___fldiv@grs+2
  8162  0EFC  3000               	movlw	0
  8163  0EFD  00B5               	movwf	___fldiv@grs+1
  8164  0EFE  3000               	movlw	0
  8165  0EFF  00B4               	movwf	___fldiv@grs
  8166  0F00  01B9               	clrf	___fldiv@aexp
  8167  0F01                     l3018:	
  8168  0F01  301A               	movlw	26
  8169  0F02  0239               	subwf	___fldiv@aexp,w
  8170  0F03  1803               	btfsc	3,0
  8171  0F04  2F49               	goto	l3020
  8172  0F05  0839               	movf	___fldiv@aexp,w
  8173  0F06  1903               	btfsc	3,2
  8174  0F07  2F25               	goto	l3010
  8175  0F08  3001               	movlw	1
  8176  0F09  00A8               	movwf	??___fldiv
  8177  0F0A                     u3285:	
  8178  0F0A  1003               	clrc
  8179  0F0B  0DAD               	rlf	___fldiv@rem,f
  8180  0F0C  0DAE               	rlf	___fldiv@rem+1,f
  8181  0F0D  0DAF               	rlf	___fldiv@rem+2,f
  8182  0F0E  0DB0               	rlf	___fldiv@rem+3,f
  8183  0F0F  0BA8               	decfsz	??___fldiv,f
  8184  0F10  2F0A               	goto	u3285
  8185  0F11  3001               	movlw	1
  8186  0F12  00A8               	movwf	??___fldiv
  8187  0F13                     u3295:	
  8188  0F13  1003               	clrc
  8189  0F14  0DA4               	rlf	___fldiv@b,f
  8190  0F15  0DA5               	rlf	___fldiv@b+1,f
  8191  0F16  0DA6               	rlf	___fldiv@b+2,f
  8192  0F17  0DA7               	rlf	___fldiv@b+3,f
  8193  0F18  0BA8               	decfsz	??___fldiv,f
  8194  0F19  2F13               	goto	u3295
  8195  0F1A  1BB7               	btfsc	___fldiv@grs+3,7
  8196  0F1B  1424               	bsf	___fldiv@b,0
  8197  0F1C  3001               	movlw	1
  8198  0F1D  00A8               	movwf	??___fldiv
  8199  0F1E                     u3315:	
  8200  0F1E  1003               	clrc
  8201  0F1F  0DB4               	rlf	___fldiv@grs,f
  8202  0F20  0DB5               	rlf	___fldiv@grs+1,f
  8203  0F21  0DB6               	rlf	___fldiv@grs+2,f
  8204  0F22  0DB7               	rlf	___fldiv@grs+3,f
  8205  0F23  0BA8               	decfsz	??___fldiv,f
  8206  0F24  2F1E               	goto	u3315
  8207  0F25                     l3010:	
  8208  0F25  0823               	movf	___fldiv@a+3,w
  8209  0F26  0230               	subwf	___fldiv@rem+3,w
  8210  0F27  1D03               	skipz
  8211  0F28  2F33               	goto	u3325
  8212  0F29  0822               	movf	___fldiv@a+2,w
  8213  0F2A  022F               	subwf	___fldiv@rem+2,w
  8214  0F2B  1D03               	skipz
  8215  0F2C  2F33               	goto	u3325
  8216  0F2D  0821               	movf	___fldiv@a+1,w
  8217  0F2E  022E               	subwf	___fldiv@rem+1,w
  8218  0F2F  1D03               	skipz
  8219  0F30  2F33               	goto	u3325
  8220  0F31  0820               	movf	___fldiv@a,w
  8221  0F32  022D               	subwf	___fldiv@rem,w
  8222  0F33                     u3325:	
  8223  0F33  1C03               	skipc
  8224  0F34  2F44               	goto	l3016
  8225  0F35  1737               	bsf	___fldiv@grs+3,6
  8226  0F36  0820               	movf	___fldiv@a,w
  8227  0F37  02AD               	subwf	___fldiv@rem,f
  8228  0F38  0821               	movf	___fldiv@a+1,w
  8229  0F39  1C03               	skipc
  8230  0F3A  0F21               	incfsz	___fldiv@a+1,w
  8231  0F3B  02AE               	subwf	___fldiv@rem+1,f
  8232  0F3C  0822               	movf	___fldiv@a+2,w
  8233  0F3D  1C03               	skipc
  8234  0F3E  0F22               	incfsz	___fldiv@a+2,w
  8235  0F3F  02AF               	subwf	___fldiv@rem+2,f
  8236  0F40  0823               	movf	___fldiv@a+3,w
  8237  0F41  1C03               	skipc
  8238  0F42  0F23               	incfsz	___fldiv@a+3,w
  8239  0F43  02B0               	subwf	___fldiv@rem+3,f
  8240  0F44                     l3016:	
  8241  0F44  3001               	movlw	1
  8242  0F45  00A8               	movwf	??___fldiv
  8243  0F46  0828               	movf	??___fldiv,w
  8244  0F47  07B9               	addwf	___fldiv@aexp,f
  8245  0F48  2F01               	goto	l3018
  8246  0F49                     l3020:	
  8247  0F49  0830               	movf	___fldiv@rem+3,w
  8248  0F4A  042F               	iorwf	___fldiv@rem+2,w
  8249  0F4B  042E               	iorwf	___fldiv@rem+1,w
  8250  0F4C  042D               	iorwf	___fldiv@rem,w
  8251  0F4D  1D03               	btfss	3,2
  8252  0F4E  1434               	bsf	___fldiv@grs,0
  8253  0F4F                     l3034:	
  8254  0F4F  1BA6               	btfsc	___fldiv@b+2,7
  8255  0F50  2F6C               	goto	l3036
  8256  0F51  3001               	movlw	1
  8257  0F52  00A8               	movwf	??___fldiv
  8258  0F53                     u3355:	
  8259  0F53  1003               	clrc
  8260  0F54  0DA4               	rlf	___fldiv@b,f
  8261  0F55  0DA5               	rlf	___fldiv@b+1,f
  8262  0F56  0DA6               	rlf	___fldiv@b+2,f
  8263  0F57  0DA7               	rlf	___fldiv@b+3,f
  8264  0F58  0BA8               	decfsz	??___fldiv,f
  8265  0F59  2F53               	goto	u3355
  8266  0F5A  1BB7               	btfsc	___fldiv@grs+3,7
  8267  0F5B  1424               	bsf	___fldiv@b,0
  8268  0F5C  3001               	movlw	1
  8269  0F5D  00A8               	movwf	??___fldiv
  8270  0F5E                     u3375:	
  8271  0F5E  1003               	clrc
  8272  0F5F  0DB4               	rlf	___fldiv@grs,f
  8273  0F60  0DB5               	rlf	___fldiv@grs+1,f
  8274  0F61  0DB6               	rlf	___fldiv@grs+2,f
  8275  0F62  0DB7               	rlf	___fldiv@grs+3,f
  8276  0F63  0BA8               	decfsz	??___fldiv,f
  8277  0F64  2F5E               	goto	u3375
  8278  0F65  30FF               	movlw	255
  8279  0F66  07B2               	addwf	___fldiv@new_exp,f
  8280  0F67  1803               	skipnc
  8281  0F68  0AB3               	incf	___fldiv@new_exp+1,f
  8282  0F69  30FF               	movlw	255
  8283  0F6A  07B3               	addwf	___fldiv@new_exp+1,f
  8284  0F6B  2F4F               	goto	l3034
  8285  0F6C                     l3036:	
  8286  0F6C  01B9               	clrf	___fldiv@aexp
  8287  0F6D  1FB7               	btfss	___fldiv@grs+3,7
  8288  0F6E  2F85               	goto	l3046
  8289  0F6F  30FF               	movlw	255
  8290  0F70  0534               	andwf	___fldiv@grs,w
  8291  0F71  00A8               	movwf	??___fldiv
  8292  0F72  30FF               	movlw	255
  8293  0F73  0535               	andwf	___fldiv@grs+1,w
  8294  0F74  00A9               	movwf	??___fldiv+1
  8295  0F75  30FF               	movlw	255
  8296  0F76  0536               	andwf	___fldiv@grs+2,w
  8297  0F77  00AA               	movwf	??___fldiv+2
  8298  0F78  307F               	movlw	127
  8299  0F79  0537               	andwf	___fldiv@grs+3,w
  8300  0F7A  00AB               	movwf	??___fldiv+3
  8301  0F7B  082B               	movf	??___fldiv+3,w
  8302  0F7C  042A               	iorwf	??___fldiv+2,w
  8303  0F7D  0429               	iorwf	??___fldiv+1,w
  8304  0F7E  0428               	iorwf	??___fldiv,w
  8305  0F7F  1903               	skipnz
  8306  0F80  1824               	btfsc	___fldiv@b,0
  8307  0F81  2F83               	goto	l3042
  8308  0F82  2F85               	goto	l3046
  8309  0F83                     l3042:	
  8310  0F83  01B9               	clrf	___fldiv@aexp
  8311  0F84  0AB9               	incf	___fldiv@aexp,f
  8312  0F85                     l3046:	
  8313  0F85  0839               	movf	___fldiv@aexp,w
  8314  0F86  1903               	btfsc	3,2
  8315  0F87  2FB7               	goto	l3056
  8316  0F88  3001               	movlw	1
  8317  0F89  07A4               	addwf	___fldiv@b,f
  8318  0F8A  3000               	movlw	0
  8319  0F8B  1803               	skipnc
  8320  0F8C  3001               	movlw	1
  8321  0F8D  07A5               	addwf	___fldiv@b+1,f
  8322  0F8E  3000               	movlw	0
  8323  0F8F  1803               	skipnc
  8324  0F90  3001               	movlw	1
  8325  0F91  07A6               	addwf	___fldiv@b+2,f
  8326  0F92  3000               	movlw	0
  8327  0F93  1803               	skipnc
  8328  0F94  3001               	movlw	1
  8329  0F95  07A7               	addwf	___fldiv@b+3,f
  8330  0F96  1C27               	btfss	___fldiv@b+3,0
  8331  0F97  2FB7               	goto	l3056
  8332  0F98  0824               	movf	___fldiv@b,w
  8333  0F99  00A8               	movwf	??___fldiv
  8334  0F9A  0825               	movf	___fldiv@b+1,w
  8335  0F9B  00A9               	movwf	??___fldiv+1
  8336  0F9C  0826               	movf	___fldiv@b+2,w
  8337  0F9D  00AA               	movwf	??___fldiv+2
  8338  0F9E  0827               	movf	___fldiv@b+3,w
  8339  0F9F  00AB               	movwf	??___fldiv+3
  8340  0FA0  3001               	movlw	1
  8341  0FA1  00AC               	movwf	??___fldiv+4
  8342  0FA2                     u3445:	
  8343  0FA2  0D2B               	rlf	??___fldiv+3,w
  8344  0FA3  0CAB               	rrf	??___fldiv+3,f
  8345  0FA4  0CAA               	rrf	??___fldiv+2,f
  8346  0FA5  0CA9               	rrf	??___fldiv+1,f
  8347  0FA6  0CA8               	rrf	??___fldiv,f
  8348  0FA7  0BAC               	decfsz	??___fldiv+4,f
  8349  0FA8  2FA2               	goto	u3445
  8350  0FA9  082B               	movf	??___fldiv+3,w
  8351  0FAA  00A7               	movwf	___fldiv@b+3
  8352  0FAB  082A               	movf	??___fldiv+2,w
  8353  0FAC  00A6               	movwf	___fldiv@b+2
  8354  0FAD  0829               	movf	??___fldiv+1,w
  8355  0FAE  00A5               	movwf	___fldiv@b+1
  8356  0FAF  0828               	movf	??___fldiv,w
  8357  0FB0  00A4               	movwf	___fldiv@b
  8358  0FB1  3001               	movlw	1
  8359  0FB2  07B2               	addwf	___fldiv@new_exp,f
  8360  0FB3  1803               	skipnc
  8361  0FB4  0AB3               	incf	___fldiv@new_exp+1,f
  8362  0FB5  3000               	movlw	0
  8363  0FB6  07B3               	addwf	___fldiv@new_exp+1,f
  8364  0FB7                     l3056:	
  8365  0FB7  0833               	movf	___fldiv@new_exp+1,w
  8366  0FB8  3A80               	xorlw	128
  8367  0FB9  00FF               	movwf	127
  8368  0FBA  3080               	movlw	128
  8369  0FBB  027F               	subwf	127,w
  8370  0FBC  1D03               	skipz
  8371  0FBD  2FC0               	goto	u3455
  8372  0FBE  30FF               	movlw	255
  8373  0FBF  0232               	subwf	___fldiv@new_exp,w
  8374  0FC0                     u3455:	
  8375  0FC0  1C03               	skipc
  8376  0FC1  2FD0               	goto	l3060
  8377  0FC2  30FF               	movlw	255
  8378  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  8379  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  8380  0FC5  00B2               	movwf	___fldiv@new_exp
  8381  0FC6  3000               	movlw	0
  8382  0FC7  00B3               	movwf	___fldiv@new_exp+1
  8383  0FC8  3000               	movlw	0
  8384  0FC9  00A7               	movwf	___fldiv@b+3
  8385  0FCA  3000               	movlw	0
  8386  0FCB  00A6               	movwf	___fldiv@b+2
  8387  0FCC  3000               	movlw	0
  8388  0FCD  00A5               	movwf	___fldiv@b+1
  8389  0FCE  3000               	movlw	0
  8390  0FCF  00A4               	movwf	___fldiv@b
  8391  0FD0                     l3060:	
  8392  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  8393  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  8394  0FD2  0833               	movf	___fldiv@new_exp+1,w
  8395  0FD3  3A80               	xorlw	128
  8396  0FD4  00FF               	movwf	127
  8397  0FD5  3080               	movlw	128
  8398  0FD6  027F               	subwf	127,w
  8399  0FD7  1D03               	skipz
  8400  0FD8  2FDB               	goto	u3465
  8401  0FD9  3001               	movlw	1
  8402  0FDA  0232               	subwf	___fldiv@new_exp,w
  8403  0FDB                     u3465:	
  8404  0FDB  1803               	skipnc
  8405  0FDC  2FEA               	goto	l1069
  8406  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  8407  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  8408  0FDF  01B2               	clrf	___fldiv@new_exp
  8409  0FE0  01B3               	clrf	___fldiv@new_exp+1
  8410  0FE1  3000               	movlw	0
  8411  0FE2  00A7               	movwf	___fldiv@b+3
  8412  0FE3  3000               	movlw	0
  8413  0FE4  00A6               	movwf	___fldiv@b+2
  8414  0FE5  3000               	movlw	0
  8415  0FE6  00A5               	movwf	___fldiv@b+1
  8416  0FE7  3000               	movlw	0
  8417  0FE8  00A4               	movwf	___fldiv@b
  8418  0FE9  01B1               	clrf	___fldiv@sign
  8419  0FEA                     l1069:	
  8420  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  8421  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  8422  0FEC  0832               	movf	___fldiv@new_exp,w
  8423  0FED  00A8               	movwf	??___fldiv
  8424  0FEE  0828               	movf	??___fldiv,w
  8425  0FEF  00B8               	movwf	___fldiv@bexp
  8426  0FF0  1C38               	btfss	___fldiv@bexp,0
  8427  0FF1  2FF4               	goto	l3072
  8428  0FF2  17A6               	bsf	___fldiv@b+2,7
  8429  0FF3  2FF8               	goto	l1071
  8430  0FF4                     l3072:	
  8431  0FF4  307F               	movlw	127
  8432  0FF5  00A8               	movwf	??___fldiv
  8433  0FF6  0828               	movf	??___fldiv,w
  8434  0FF7  05A6               	andwf	___fldiv@b+2,f
  8435  0FF8                     l1071:	
  8436  0FF8  0838               	movf	___fldiv@bexp,w
  8437  0FF9  00A8               	movwf	??___fldiv
  8438  0FFA  1003               	clrc
  8439  0FFB  0C28               	rrf	??___fldiv,w
  8440  0FFC  00A9               	movwf	??___fldiv+1
  8441  0FFD  0829               	movf	??___fldiv+1,w
  8442  0FFE  00A7               	movwf	___fldiv@b+3
  8443  0FFF  2EBD               	goto	L5
  8444  1000                     __end_of___fldiv:	
  8445                           
  8446                           	psect	text43
  8447  15D7                     __ptext43:	
  8448 ;; *************** function ___bmul *****************
  8449 ;; Defined at:
  8450 ;;		line 4 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;  multiplier      1    wreg     unsigned char 
  8453 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  multiplier      1    3[BANK0 ] unsigned char 
  8456 ;;  product         1    2[BANK0 ] unsigned char 
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      unsigned char 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2, status,0
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8466 ;;      Params:         0       1       0       0       0
  8467 ;;      Locals:         0       2       0       0       0
  8468 ;;      Temps:          0       1       0       0       0
  8469 ;;      Totals:         0       4       0       0       0
  8470 ;;Total ram usage:        4 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    1
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_createTask
  8477 ;;		_executeTasks
  8478 ;;		_putchdec
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           
  8483                           ;psect for function ___bmul
  8484  15D7                     ___bmul:	
  8485                           
  8486                           ;incstack = 0
  8487                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8488                           ;___bmul@multiplier stored from wreg
  8489  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  8490  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  8491  15D9  00A3               	movwf	___bmul@multiplier
  8492  15DA  01A2               	clrf	___bmul@product
  8493  15DB                     l2918:	
  8494  15DB  1C23               	btfss	___bmul@multiplier,0
  8495  15DC  2DE1               	goto	l2922
  8496  15DD  0820               	movf	___bmul@multiplicand,w
  8497  15DE  00A1               	movwf	??___bmul
  8498  15DF  0821               	movf	??___bmul,w
  8499  15E0  07A2               	addwf	___bmul@product,f
  8500  15E1                     l2922:	
  8501  15E1  1003               	clrc
  8502  15E2  0DA0               	rlf	___bmul@multiplicand,f
  8503  15E3  1003               	clrc
  8504  15E4  0CA3               	rrf	___bmul@multiplier,f
  8505  15E5  0823               	movf	___bmul@multiplier,w
  8506  15E6  1D03               	btfss	3,2
  8507  15E7  2DDB               	goto	l2918
  8508  15E8  0822               	movf	___bmul@product,w
  8509  15E9  0008               	return
  8510  15EA                     __end_of___bmul:	
  8511                           
  8512                           	psect	text44
  8513  07A0                     __ptext44:	
  8514 ;; *************** function _isr *****************
  8515 ;; Defined at:
  8516 ;;		line 89 in file "position_controller_main.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;		None
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;		None
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1    wreg      void 
  8523 ;; Registers used:
  8524 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8530 ;;      Params:         0       0       0       0       0
  8531 ;;      Locals:         0       0       0       0       0
  8532 ;;      Temps:          8       0       0       0       0
  8533 ;;      Totals:         8       0       0       0       0
  8534 ;;Total ram usage:        8 bytes
  8535 ;; Hardware stack levels used:    1
  8536 ;; This function calls:
  8537 ;;		Nothing
  8538 ;; This function is called by:
  8539 ;;		Interrupt level 1
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           
  8544                           ;psect for function _isr
  8545  07A0                     _isr:	
  8546                           
  8547                           ;position_controller_main.c: 91: if (T0IE && T0IF) {
  8548  07A0  1A8B               	btfsc	11,5	;volatile
  8549  07A1  1D0B               	btfss	11,2	;volatile
  8550  07A2  2FF1               	goto	i1l205
  8551                           
  8552                           ;position_controller_main.c: 95: pos_inA = 0;
  8553  07A3  01FC               	clrf	_pos_inA	;volatile
  8554                           
  8555                           ;position_controller_main.c: 96: pos_inB = 0;
  8556  07A4  01FB               	clrf	_pos_inB	;volatile
  8557                           
  8558                           ;position_controller_main.c: 98: if (RC4 == 1)
  8559  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  8560  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  8561  07A7  1E07               	btfss	7,4	;volatile
  8562  07A8  2FAD               	goto	i1l3680
  8563                           
  8564                           ;position_controller_main.c: 99: pos_inB = 1;
  8565  07A9  3001               	movlw	1
  8566  07AA  00F0               	movwf	??_isr
  8567  07AB  0870               	movf	??_isr,w
  8568  07AC  00FB               	movwf	_pos_inB	;volatile
  8569  07AD                     i1l3680:	
  8570                           
  8571                           ;position_controller_main.c: 100: if (RC3 == 1)
  8572  07AD  1D87               	btfss	7,3	;volatile
  8573  07AE  2FB3               	goto	i1l3684
  8574                           
  8575                           ;position_controller_main.c: 101: pos_inA = 2;
  8576  07AF  3002               	movlw	2
  8577  07B0  00F0               	movwf	??_isr
  8578  07B1  0870               	movf	??_isr,w
  8579  07B2  00FC               	movwf	_pos_inA	;volatile
  8580  07B3                     i1l3684:	
  8581                           
  8582                           ;position_controller_main.c: 102: pos_currentEncoder = pos_inA + pos_inB;
  8583  07B3  087B               	movf	_pos_inB,w	;volatile
  8584  07B4  077C               	addwf	_pos_inA,w	;volatile
  8585  07B5  00F0               	movwf	??_isr
  8586  07B6  0870               	movf	??_isr,w
  8587  07B7  00FD               	movwf	_pos_currentEncoder	;volatile
  8588                           
  8589                           ;position_controller_main.c: 103: pos_currentPosition += encoderStates[pos_previousEncod
      +                          er][pos_currentEncoder];
  8590  07B8  086D               	movf	_pos_previousEncoder,w	;volatile
  8591  07B9  00F0               	movwf	??_isr
  8592  07BA  3002               	movlw	2
  8593  07BB                     u470_25:	
  8594  07BB  1003               	clrc
  8595  07BC  0DF0               	rlf	??_isr,f
  8596  07BD  3EFF               	addlw	-1
  8597  07BE  1D03               	skipz
  8598  07BF  2FBB               	goto	u470_25
  8599  07C0  30A0               	movlw	(low (_encoderStates| 0))& (0+255)
  8600  07C1  0770               	addwf	??_isr,w
  8601  07C2  00F1               	movwf	??_isr+1
  8602  07C3  087D               	movf	_pos_currentEncoder,w
  8603  07C4  0771               	addwf	??_isr+1,w
  8604  07C5  00F2               	movwf	??_isr+2
  8605  07C6  0872               	movf	??_isr+2,w
  8606  07C7  0084               	movwf	4
  8607  07C8  1383               	bcf	3,7	;select IRP bank1
  8608  07C9  0800               	movf	0,w
  8609  07CA  00F3               	movwf	??_isr+3
  8610  07CB  01F4               	clrf	??_isr+4
  8611  07CC  1BF3               	btfsc	??_isr+3,7
  8612  07CD  03F4               	decf	??_isr+4,f
  8613  07CE  0873               	movf	??_isr+3,w
  8614  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  8615  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  8616  07D1  07D4               	addwf	_pos_currentPosition^(0+128),f	;volatile
  8617  07D2  1803               	skipnc
  8618  07D3  0AD5               	incf	(_pos_currentPosition+1)^(0+128),f	;volatile
  8619  07D4  0874               	movf	??_isr+4,w
  8620  07D5  07D5               	addwf	(_pos_currentPosition+1)^(0+128),f	;volatile
  8621                           
  8622                           ;position_controller_main.c: 104: pos_previousEncoder = pos_currentEncoder;
  8623  07D6  087D               	movf	_pos_currentEncoder,w	;volatile
  8624  07D7  00F0               	movwf	??_isr
  8625  07D8  0870               	movf	??_isr,w
  8626  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  8627  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  8628  07DB  00ED               	movwf	_pos_previousEncoder	;volatile
  8629                           
  8630                           ;position_controller_main.c: 107: interruptCounter++;
  8631  07DC  3001               	movlw	1
  8632  07DD  00F0               	movwf	??_isr
  8633  07DE  0870               	movf	??_isr,w
  8634  07DF  07FA               	addwf	_interruptCounter,f	;volatile
  8635                           
  8636                           ;position_controller_main.c: 108: if (interruptCounter > 14) {
  8637  07E0  300F               	movlw	15
  8638  07E1  027A               	subwf	_interruptCounter,w	;volatile
  8639  07E2  1C03               	skipc
  8640  07E3  2FED               	goto	i1l3698
  8641                           
  8642                           ;position_controller_main.c: 109: tsk_timeStamp++;
  8643  07E4  3001               	movlw	1
  8644  07E5  1683               	bsf	3,5	;RP0=1, select bank1
  8645  07E6  1303               	bcf	3,6	;RP1=0, select bank1
  8646  07E7  07D2               	addwf	_tsk_timeStamp^(0+128),f	;volatile
  8647  07E8  1803               	skipnc
  8648  07E9  0AD3               	incf	(_tsk_timeStamp+1)^(0+128),f	;volatile
  8649  07EA  3000               	movlw	0
  8650  07EB  07D3               	addwf	(_tsk_timeStamp+1)^(0+128),f	;volatile
  8651                           
  8652                           ;position_controller_main.c: 110: interruptCounter = 0;
  8653  07EC  01FA               	clrf	_interruptCounter	;volatile
  8654  07ED                     i1l3698:	
  8655                           
  8656                           ;position_controller_main.c: 111: };position_controller_main.c: 113: TMR0 = (0xff - 52);
  8657  07ED  30CB               	movlw	203
  8658  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  8659  07EF  0081               	movwf	1	;volatile
  8660                           
  8661                           ;position_controller_main.c: 114: T0IF = 0;
  8662  07F0  110B               	bcf	11,2	;volatile
  8663  07F1                     i1l205:	
  8664  07F1  0877               	movf	??_isr+7,w
  8665  07F2  008A               	movwf	10
  8666  07F3  0876               	movf	??_isr+6,w
  8667  07F4  0084               	movwf	4
  8668  07F5  0E75               	swapf	(??_isr+5)^(0+4294967168),w
  8669  07F6  0083               	movwf	3
  8670  07F7  0EFE               	swapf	126,f
  8671  07F8  0E7E               	swapf	126,w
  8672  07F9  0009               	retfie
  8673  07FA                     __end_of_isr:	
  8674  0006                     
  8675                           	psect	intentry
  8676  0004                     __pintentry:	
  8677                           ;incstack = 0
  8678                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  8679                           
  8680  0004                     interrupt_function:	
  8681  007E                     saved_w	set	btemp
  8682  0004  00FE               	movwf	btemp
  8683  0005  0E03               	swapf	3,w
  8684  0006  00F5               	movwf	??_isr+5
  8685  0007  0804               	movf	4,w
  8686  0008  00F6               	movwf	??_isr+6
  8687  0009  080A               	movf	10,w
  8688  000A  00F7               	movwf	??_isr+7
  8689  000B  120A  118A  2FA0   	ljmp	_isr
  8690                           
  8691                           	psect	functab
  8692  003C                     __pfunctab:	
  8693  003C                     __fptable:	
  8694  003C                     fptable:	
  8695  003C  00FF               	movwf	(btemp+1)& (0+127)
  8696  003D  3000               	movlw	high fptable
  8697  003E  008A               	movwf	10
  8698  003F  087F               	movf	(btemp+1)& (0+127),w
  8699  0040  0782               	addwf	2,f
  8700  0041                     fpbase:	
  8701  0041  2841               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  8702  0042                     fp__protocol_task:	
  8703  0042  120A  158A  2C6D   	ljmp	_protocol_task
  8704  0045                     fp__pid_task:	
  8705  0045  120A  118A  2FFA   	ljmp	_pid_task
  8706  0048                     fp__led_task:	
  8707  0048  160A  118A  2DB7   	ljmp	_led_task
  8708  004B                     __end_of__fptable:	
  8709  007E                     btemp	set	126	;btemp
  8710  007E                     wtemp0	set	126


Data Sizes:
    Strings     3
    Constant    144
    Data        2
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     73      80
    BANK1            80     19      78
    BANK3            96      0      78
    BANK2            96      0       0

Pointer List with Targets:

    convertToReal@chars	PTR unsigned char  size(1) Largest target is 8
		 -> message(BANK3[8]), 

    tsk_task	PTR FTN()void  size(1) Largest target is 1
		 -> Absolute function(), led_task(), protocol_task(), pid_task(), 

    S87$taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> led_task(), protocol_task(), pid_task(), 

    tsk_tasks.taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> led_task(), protocol_task(), pid_task(), 

    createTask@t	PTR FTN()void  size(1) Largest target is 1
		 -> led_task(), protocol_task(), pid_task(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_executeTasks
    _initSys->_initTasks
    _initTasks->_createTask
    _pro_init->_cleanupBuffer
    _mot_init->_mot_setExcitation
    _createTask->___bmul
    _executeTasks->_protocol_task
    _protocol_task->_convertToReal
    _pro_getMessage->_isValid
    _pro_getMessage->_isValidCmd
    _pro_getMessage->_toMsgType
    _framingError->_cleanupBuffer
    _convertToReal->___fladd
    _pid_pid->___flsub
    _pid_scaleExcitation->___fltol
    ___xxtofl->_pos_getCurrentPosition
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->__Umul8_16

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _protocol_task->_convertToReal

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22373
                       _executeTasks
                            _initSys
 ---------------------------------------------------------------------------------
 (1) _initSys                                              0     0      0    1822
                            _initPic
                          _initTasks
 ---------------------------------------------------------------------------------
 (2) _initTasks                                            1     1      0    1822
                                             11 BANK0      1     1      0
                         _createTask
                           _mot_init
                           _pid_init
                           _pos_init
                           _pro_init
                        _pro_setMyId
 ---------------------------------------------------------------------------------
 (3) _pro_setMyId                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _pro_init                                             0     0      0      90
                      _cleanupBuffer
                       _serial_setup
 ---------------------------------------------------------------------------------
 (4) _serial_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pos_init                                             5     5      0     136
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _pid_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mot_init                                             0     0      0     354
                  _mot_setExcitation
 ---------------------------------------------------------------------------------
 (3) _createTask                                           7     2      5    1220
                                              4 BANK0      7     2      5
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _executeTasks                                         5     5      0   20551
                                             68 BANK0      5     5      0
                   Absolute function *
                             ___bmul
                           _led_task *
                           _pid_task *
                      _protocol_task *
 ---------------------------------------------------------------------------------
 (2) _protocol_task                                        4     4      0    9521
                                             64 BANK0      4     4      0
                      _convertToReal
                     _pid_clearError
              _pid_setDerivativeGain
                _pid_setIntegralGain
                       _pid_setPoint
            _pid_setProportionalGain
             _pos_setCurrentPosition
                     _pro_getMessage
 ---------------------------------------------------------------------------------
 (3) _pro_getMessage                                      13     5      8     532
                                              4 BANK0     13     5      8
                _addToIncomingBuffer
                             _chkchr
                 _clear_usart_errors
                       _framingError
                            _isValid
                         _isValidCmd
                              _putch
                          _toMsgType
 ---------------------------------------------------------------------------------
 (4) _toMsgType                                            4     1      3     110
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _putch                                                2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _isValidCmd                                           4     1      3     110
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _isValid                                              4     1      3      88
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _framingError                                         0     0      0      90
                      _cleanupBuffer
 ---------------------------------------------------------------------------------
 (4) _cleanupBuffer                                        2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _clear_usart_errors                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _chkchr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _addToIncomingBuffer                                  2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _pos_setCurrentPosition                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _pid_setProportionalGain                              4     0      4      98
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setPoint                                         4     0      4      98
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setIntegralGain                                  4     0      4      98
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setDerivativeGain                                4     0      4      98
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_clearError                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _convertToReal                                       28    24      4    8499
                                             55 BANK0      9     5      4
                                              0 BANK1     19    19      0
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _pid_task                                             0     0      0   10470
                            _pid_pid
 ---------------------------------------------------------------------------------
 (3) _pid_pid                                              0     0      0   10470
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                  _mot_setExcitation
                _pid_scaleExcitation
             _pos_getCurrentPosition
 ---------------------------------------------------------------------------------
 (4) _pos_getCurrentPosition                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _pid_scaleExcitation                                  4     0      4     595
                                             11 BANK0      4     0      4
                            ___fltol
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     497
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (4) _mot_setExcitation                                    6     4      2     354
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     538
                                              2 BANK0     14    10      4
             _pos_getCurrentPosition (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2893
                                             55 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2568
                                             35 BANK0     20    12      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4817
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
 ---------------------------------------------------------------------------------
 (2) _led_task                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     426
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _executeTasks
     Absolute function(Fake) *
     ___bmul *
     _led_task *
     _pid_task *
       _pid_pid
         ___fldiv
         ___flmul
           __Umul8_16
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
           ___fldiv (ARG)
         ___xxtofl
           _pos_getCurrentPosition (ARG)
         _mot_setExcitation
         _pid_scaleExcitation
           ___fltol
         _pos_getCurrentPosition
     _protocol_task *
       _convertToReal
         ___fladd
           ___flmul (ARG)
             __Umul8_16
         ___flmul
           __Umul8_16
         ___xxtofl
           _pos_getCurrentPosition (ARG)
       _pid_clearError
       _pid_setDerivativeGain
       _pid_setIntegralGain
       _pid_setPoint
       _pid_setProportionalGain
       _pos_setCurrentPosition
       _pro_getMessage
         _addToIncomingBuffer
         _chkchr
         _clear_usart_errors
         _framingError
           _cleanupBuffer
         _isValid
         _isValidCmd
         _putch
         _toMsgType
   _initSys
     _initPic
     _initTasks
       _createTask
         ___bmul
       _mot_init
         _mot_setExcitation
       _pid_init
       _pos_init
       _pro_init
         _cleanupBuffer
         _serial_setup
       _pro_setMyId

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4E       9       81.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     13      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      FA      12        0.0%
ABS                  0      0      FA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 21 14:38:25 2019

                    ___fldiv@aexp 0039                      ___fldiv@bexp 0038                                 pc 0002  
                    ___fldiv@sign 0031                    ___bmul@product 0022                       __CFG_CP$OFF 0000  
                     fp__pid_task 0045                                l93 0975                                l97 09A5  
                              _ch 00D6                                fsr 0004               __Umul8_16@word_mpld 0026  
                             l105 0D49                               l107 0E5B               convertToReal@potDez 00E4  
                             l356 170A                               l357 1714                               l383 1633  
                             l464 0D42                               l485 05BD                               l469 15C1  
                             l874 0A65                               l991 03B2                               l995 044B  
                             _GIE 005F                               l997 0429               convertToReal@signal 00DB  
                             _RC3 003B                               _RB5 0035                               _RC4 003C  
                             _RC5 003D                               _PR2 0092                      __CFG_CPD$OFF 0000  
                             _RX9 00C6                               _TX9 04C6               _pid_scaleExcitation 094B  
            convertToReal@decimal 00DF                               _isr 07A0                               fsr0 0004  
                             indf 0000                      __CFG_FOSC$EC 0000               _pos_currentPosition 00D4  
                    ___flmul@aexp 003B                      ___flmul@bexp 003C                 _mot_setExcitation 08EA  
                    ___flmul@sign 0036                      ___flmul@temp 0041                      ___flmul@prod 003D  
                    __CFG_LVP$OFF 0000                      ___fltol@exp1 002A                ?_mot_setExcitation 0020  
                            l1012 0504                              l1033 0584                              l1025 056C  
                            l1131 0B6F                              l1125 0B2F                              l1071 0FF8  
                            l1047 0EAB                              l3010 0F25                              l1138 0B85  
                            l1139 0B8F                              l3020 0F49                              l1148 174F  
                            l1069 0FEA                              l3110 008D                              l3016 0F44  
                            l3200 0323                              l3112 008F                              l3042 0F83  
                            l3034 0F4F                              l3018 0F01                              l3122 00A5  
                            l3114 0097                              l1099 0353                              l3060 0FD0  
                            l3036 0F6C                              l2500 0A51                              l3046 0F85  
                            l3206 033C                              l3230 0B3E                              l2510 0A74  
                            l2502 0A61                              l3072 0FF4                              l3056 0FB7  
                            l2600 0434                              l3224 0B27                              l3400 0C67  
                            l2602 0436                              l2610 0445                              l3234 0B42  
                            l3322 09B5                              l3092 0068                              l2532 0380  
                            l3244 0B83                              l3236 0B54                              l3340 0C28  
                            l3500 0CF4                              l3316 09B4                              l3182 02D9  
                            l3174 02A5                              l3094 006A                              l2702 0580  
                            l2534 0388                              l3246 0B74                              l3502 0D10  
                            l2712 1747                              l3176 02C2                              l3096 0072  
                            l2552 03A7                              l2528 037D                              l2480 0A21  
                            l3440 05F3                              l2472 1600                              l3352 0BBE  
                            l3344 0C41                              l3186 02DB                              l2626 047A  
                            l2618 0459                              l2562 03BC                              l3258 0BAC  
                            l3506 0D2C                              l3196 030D                              l2628 047C  
                            l2636 048C                              l2556 03AA                              l2484 0A2A  
                            l3452 06A8                              l2820 177E                              l3372 0BE7  
                            l3364 0BD1                              l3356 0BC5                              l2662 0525  
                            l2654 0516                              l2646 04F6                              l2670 052E  
                            l3278 0D4A                              l3454 0759                              l3446 060D  
                            l2814 1775                              l3382 0BFE                              l3390 0C16  
                            l3358 0BCB                              l3534 0B05                              l3526 0A86  
                            l2680 0539                              l2592 03F8                              l2832 1790  
                            l2808 176C                              l2922 15E1                              l2738 0919  
                            l2762 0981                              l3458 0762                              l2850 16F4  
                            l2842 16F0                              l2826 1787                              l3706 1578  
                            l2676 0537                              l2668 052C                              l2844 16E1  
                            l2918 15DB                              l2950 0E7A                              l2766 0992  
                            l2838 16ED                              l2790 16D1                              l3494 0CAE  
                            l2864 154F                              l2880 1716                              l3496 0CCA  
                            l2970 0EA0                              l2954 0E7D                              l2698 057C  
                            l2794 16D6                              l3498 0CD8                              l2956 0E85  
                            l2990 0ED6                              l2974 0EA3                              l2878 16FC  
                            l2984 0ECA                              ?_isr 0070                              STR_1 0896  
                            _BRGH 04C2                              _T0IE 005D                              _T0IF 005A  
                            _CREN 00C4                              _FERR 00C2                              u2315 0A33  
                            u2500 0418                              u2510 0419                              u4015 09B8  
                            u2345 0A52                              u4050 0C32                              u4210 0C7C  
                            u3315 0F1E                     __CFG_DEBUG$ON 0000                              u3325 0F33  
                            u2375 0A6A                              u2641 04B7                              u2633 049E  
                            u2625 0480                              u2545 043A                              u2650 04CB  
                            u2642 04B8                              u3355 0F53                              u2651 04CC  
                            u2643 04BD                              u2652 04D1                              u2644 04BE  
                            u3445 0FA2                              u3285 0F0A                              u3605 0155  
                            u2653 04D2                              u2645 04C3                              u2646 04C4  
                            u3455 0FC0                              u3375 0F5E                              u3295 0F13  
                            u2495 040C                              u3465 0FDB                              u2905 090B  
                            u4265 0AD0                              u3715 0291                              u3635 01B2  
                            u2915 093D                              u3725 02A9                              u2925 0969  
                            u3815 02F8                              u2695 0518                              u3825 0316  
                            u3745 02B4                              u3905 0B67                              u2945 098A  
                            u2875 1750                              u3835 032E                              u3675 024E  
                            u2795 0556                              u2955 099D                              _RCIE 0465  
                            _RCIF 0065                              u3925 0B7C                              u3695 0273  
                            u3965 0B97                              u3885 0B4B                              _OERR 00C1  
                            _TMR0 0001                              _SPEN 00C7                              _SREN 00C5  
                            _TXIE 0464                              _TXEN 04C5                              _TXIF 0064  
                            _SYNC 04C4                      __CFG_WRT$OFF 0000                              _main 1572  
                            btemp 007E              ?_pid_scaleExcitation 002B       __end_of_addToIncomingBuffer 15B7  
             ??_mot_setExcitation 0022                   _completeMessage 01B2                              start 000E  
                   __CFG_IESO$OFF 0000                   ___fldiv@new_exp 0032                 ___bmul@multiplier 0023  
                   __CFG_MCLRE$ON 0000                     ?_framingError 0070                     _convertToReal 058F  
                   _protocol_task 0C6D                             ??_isr 0070                     ___fltol@sign1 0029  
                 __end_of___fladd 058F                             ?_main 0070                             _CCP1X 00BD  
                 __end_of___fldiv 1000                             _CCP1Y 00BC                             _CCP2X 00ED  
                           _CCP2Y 00EC                     pro_setMyId@id 0021                     __CFG_WDTE$OFF 0000  
                 __end_of___flmul 0360                   __end_of___flsub 173B                   __end_of___fltol 0A83  
                           _T2CON 0012                             i1l205 07F1                             _RCREG 001A  
       __end_of_mot_setExcitation 094B                             _SPBRG 0099                             _TRISB 0086  
                           _TRISC 0087       __size_of_clear_usart_errors 0017                             _TXREG 0019  
                ??_pid_clearError 0020        createTask@scheduleInterval 0027                  ??_pro_getMessage 002C  
                           _aChar 006B                    __CFG_FCMEN$OFF 0000                   __end_of_isValid 16F9  
                 __end_of_dpowers 0896                   __end_of_initPic 15A7                   __end_of_initSys 1572  
                           _dummy 00D8                             _error 00B4                   __end_of_pid_pid 0E5D  
                           _value 00B0                             _putch 16F9                             fpbase 0041  
                  __CFG_BOREN$OFF 0000                             pclath 000A                             status 0003  
           ??_pid_scaleExcitation 002F                             wtemp0 007E                    ??_framingError 0022  
                 __initialization 0011     pid_scaleExcitation@activation 002B                      __end_of_main 157E  
                  ?_convertToReal 0057                    ?_protocol_task 0070                      isValid@aChar 0023  
                          ??_main 0069                     _tsk_timeStamp 00D2                     ?_executeTasks 0070  
                          _CCPR1L 0015                            _CCPR2L 001B                            ?_putch 0070  
                          i1l3680 07AD                            i1l3684 07B3                            i1l3698 07ED  
                          u470_25 07BB  __size_of_pid_setProportionalGain 0019                            _TRISC2 043A  
                __end_of__fptable 004B                  __end_of___xxtofl 0BB5                    __CFG_PWRTE$OFF 0000  
                __end_of__powers_ 083A                            ___bmul 15D7                  __end_of_led_task 15C7  
                       ??___fladd 004B                         ??___fldiv 0028                         ??___flmul 0031  
                       ??___flsub 005F                         ??___fltol 0024                            _chkchr 1549  
           __end_of_cleanupBuffer 1612                            _buffer 01C2                            _menos1 006E  
                __end_of_pid_init 17C8                  __end_of_pid_task 07FE                   isValidCmd@aChar 0023  
                       ??_isValid 0023                            fptable 003C                    ??_executeTasks 0064  
                __end_of_mot_init 1627                         ??_initPic 0020        __size_of_mot_setExcitation 0061  
                       ??_initSys 002C                            fptotal 0006                         ??_pid_pid 005F  
              __size_of__Umul8_16 0025                  __end_of_pos_init 0A16                            saved_w 007E  
                __end_of_pro_init 15D7                   _currentPosition 00CC                            putch@c 0021  
                   ?_pid_setPoint 0020                      ?_pro_setMyId 0070                      ___xxtofl@arg 002C  
                    ___xxtofl@exp 002B                      ___xxtofl@val 0022           __end_of__initialization 0038  
                  cleanupBuffer@i 0021                        ___fltol@f1 0020               ___bmul@multiplicand 0020  
                 ??_convertToReal 005B                   ??_protocol_task 0060                    __pcstackCOMMON 0070  
                    __pidataBANK0 07FE          addToIncomingBuffer@aChar 0021                     __end_of_putch 1719  
     __end_of_pid_setIntegralGain 1688              __end_of_framingError 1559                    ??_pid_setPoint 0024  
           _pid_setDerivativeGain 1656                           ??_putch 0020                        __pbssBANK0 0069  
                      __pbssBANK1 00A0                        __pbssBANK3 0190                        _activation 00B8  
              __size_of_initTasks 0051                 __end_of__Umul8_16 1760                        __pmaintext 1572  
                         ?___bmul 0020                           ?_chkchr 0070                        __pintentry 0004  
              __size_of_toMsgType 0033                           _CCP1CON 0017                           _CCP2CON 001D  
                      _createTask 17C8                         ?___xxtofl 0022          ??_pos_getCurrentPosition 0022  
        ??_pos_setCurrentPosition 0022                        __stringtab 0800                        _isValidCmd 16BA  
                       ?_led_task 0070           _pid_setProportionalGain 16A1                        _led_status 00D7  
                       ?_pid_init 0070                         ?_pid_task 0070              __end_of_executeTasks 0B10  
               __end_of__npowers_ 086E                         ?_mot_init 0070                     _integralError 00C4  
                       ?_pos_init 0070                     ?_serial_setup 0070                         ?_pro_init 0070  
                 __size_of___bmul 0013                           ___fladd 0360                           ___fldiv 0E5D  
         pid_setIntegralGain@gain 0020                           ___flmul 004B                           ___flsub 1719  
                      _excitation 0069                           ___fltol 0A16      __size_of_addToIncomingBuffer 0010  
                 _tsk_elapsedTime 00D0                   __size_of_chkchr 0008        __end_of_clear_usart_errors 163E  
                         __ptext1 1569                           __ptext2 0899                           __ptext3 1559  
                         __ptext4 15C7                           __ptext5 163E                           __ptext6 09AC  
                         __ptext7 1793                           __ptext8 1612                           __ptext9 17C8  
                         _isValid 16D9                 __end_of_initTasks 08EA                           _dpowers 086E  
                         _initPic 1598                           _initSys 1569                      __size_of_isr 005A  
                      ??___xxtofl 0026                           _pid_pid 0D43                           _message 01D6  
                         _pos_inA 007C                           _pos_inB 007B            ?_pid_setDerivativeGain 0020  
                         _pro_ptr 0078       __end_of_pid_scaleExcitation 09AC            mot_setExcitation@value 0024  
                         clrloop0 1562              end_of_initialization 0038                        ??_led_task 0020  
               __end_of_toMsgType 1793              __size_of_pro_setMyId 0008                        ??_pid_init 0020  
                      ??_pid_task 005F                        ??_mot_init 0026                    ??_serial_setup 0020  
                      ??_pos_init 0020                        ??_pro_init 0022              __end_of_pid_setPoint 16A1  
           __size_of_framingError 0008                       ?_createTask 0024                       ___fladd@grs 0056  
                      _pro_status 006C                     ___xxtofl@sign 002A                _pos_currentEncoder 007D  
                     _kDerivative 01BA         ??_pid_setProportionalGain 0024                       ___fldiv@grs 0034  
                     ___fldiv@rem 002D               _pos_previousEncoder 006D   __size_of_pos_getCurrentPosition 000D  
              convertToReal@chars 00EC   __size_of_pos_setCurrentPosition 000D                       ?_isValidCmd 0020  
              convertToReal@value 00E8         pos_setCurrentPosition@pos 0020                       ___flmul@grs 0037  
         __size_of_pid_clearError 0013           __size_of_pro_getMessage 00B8                      _framingError 1551  
                  __end_of___bmul 15EA       mot_setExcitation@excitation 0020                    __end_of_chkchr 1551  
                _delayus_variable 00DA               start_initialization 0011                       __end_of_isr 07FA  
           __size_of_executeTasks 008D            __size_of_cleanupBuffer 0015               __size_of_createTask 0038  
 __end_of_pid_setProportionalGain 16BA                          ??___bmul 0021            _pos_getCurrentPosition 157E  
          _pos_setCurrentPosition 158B             __end_of_convertToReal 07A0             __end_of_protocol_task 0D43  
                        ??_chkchr 0020                         __Umul8_16 173B                       __pdataBANK0 006E  
             __size_of_isValidCmd 001F                         ___fladd@a 0047                         ___fladd@b 0043  
                       ___fldiv@a 0020                         ___fldiv@b 0024                         ___flmul@a 002D  
                       ___flmul@b 0029                       __pbssCOMMON 0078                         ___flsub@a 0057  
                       ___flsub@b 005B                      _executeTasks 0A83                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00DB                     _kProportional 00BC  
               __size_of__fptable 000F      __size_of_pid_setIntegralGain 0019                 __size_of___xxtofl 00A5  
            __end_of_serial_setup 1656               _addToIncomingBuffer 15A7                         _kIntegral 01BE  
     pid_setProportionalGain@gain 0020                 __size_of_led_task 0010             __size_of_pid_setPoint 0019  
               __size_of_pid_init 0035                 __size_of_pid_task 0004                         __pfunctab 003C  
                        ?___fladd 0043                          ?___fldiv 0020                          ?___flmul 0029  
               __size_of_mot_init 0015                          ?___flsub 0057                          ?___fltol 0020  
            ?_addToIncomingBuffer 0070                         __npowers_ 083A                        ?__Umul8_16 0020  
                   _cleanupBuffer 15FD                 __size_of_pos_init 006A                 __size_of_pro_init 0010  
                       __pstrings 0800                          ?_isValid 0020           ??_pid_setDerivativeGain 0024  
       pid_setDerivativeGain@gain 0020                          ?_initPic 0070                          ?_initSys 0070  
                        ?_pid_pid 0070                         _initTasks 0899                _clear_usart_errors 1627  
                  __size_of_putch 0020                      _pid_setPoint 1688                 interrupt_function 0004  
                  _pid_clearError 15EA                    _pro_getMessage 0BB5                         clear_ram0 1561  
                       _toMsgType 1760               ?_clear_usart_errors 0070             ??_addToIncomingBuffer 0020  
                  ?_cleanupBuffer 0070                       __stringbase 0805                 convertToReal@temp 00E0  
                    ??_createTask 0029              ??_clear_usart_errors 0020                         _tsk_tasks 0190  
                      ?_initTasks 0070                     ??_pro_setMyId 0020                      ??_isValidCmd 0023  
          __end_of_pid_clearError 15FD            __end_of_pro_getMessage 0C6D      __size_of_pid_scaleExcitation 0061  
                   executeTasks@i 0068                        ?_toMsgType 0020                __end_of_createTask 1800  
            pid_setPoint@position 0020                       ??__Umul8_16 0022                  __size_of___fladd 022F  
                __size_of___fldiv 01A3                  __size_of___flmul 0315                  __size_of___flsub 0022  
                __size_of___fltol 006D                __end_of__stringtab 0806                __end_of_isValidCmd 16D9  
           __size_of_serial_setup 0018                  _interruptCounter 007A                          __fptable 003C  
                __size_of_isValid 0020                          ___xxtofl 0B10                  __size_of_initPic 000F  
                __size_of_initSys 0009                  __size_of_pid_pid 011A                          __ptext10 1598  
                        __ptext11 0A83                          __ptext20 1551                          __ptext12 15B7  
                        __ptext21 15FD                          __ptext13 07FA                          __ptext30 15EA  
                        __ptext22 1627                          __ptext14 0C6D                          __ptext31 058F  
                        __ptext23 1549                          __ptext15 0BB5                          __ptext40 004B  
                        __ptext32 0D43                          __ptext24 15A7                          __ptext16 1760  
                        __ptext41 173B                          __ptext33 157E                          __ptext25 158B  
                        __ptext17 16F9                          __ptext42 0E5D                          __ptext34 094B  
                        __ptext26 16A1                          __ptext18 16BA                          __ptext43 15D7  
                        __ptext35 0A16                          __ptext27 1688                          __ptext19 16D9  
                        __ptext44 07A0                          __ptext36 08EA                          __ptext28 166F  
                        __ptext37 0B10                          __ptext29 1656                          __ptext38 1719  
                        __ptext39 0360                          __powers_ 0806                    convertToReal@i 00ED  
                        _led_task 15B7                   ?_pid_clearError 0070                   ?_pro_getMessage 0024  
                   __size_of_main 000C                          _pid_init 1793                          _pid_task 07FA  
         ?_pos_getCurrentPosition 0020               __end_of_pro_setMyId 1561           ?_pos_setCurrentPosition 0020  
                        _setPoint 00C8                          _mot_init 1612                   ??_cleanupBuffer 0020  
             _pid_setIntegralGain 166F                          _pos_init 09AC                          _pro_init 15C7  
                       pos_init@i 0023                         pos_init@j 0024                      _serial_setup 163E  
                        _tsk_task 00D9                     _pro_myAddress 0079          ?_pid_setProportionalGain 0020  
            ?_pid_setIntegralGain 0020                     _encoderStates 00A0                       ??_initTasks 002B  
                createTask@taskID 0024                          intlevel1 003C    __end_of_pos_getCurrentPosition 158B  
  __end_of_pos_setCurrentPosition 1598                       ??_toMsgType 0023                     _previousError 00C0  
                       stringcode 0800                      _pro_incoming 01A9                    toMsgType@aChar 0023  
          __Umul8_16@multiplicand 0020                        _OPTION_REG 0081                   pro_getMessage@i 0030  
  __size_of_pid_setDerivativeGain 0019                          stringdir 0800                          stringtab 0800  
   __end_of_pid_setDerivativeGain 166F             ??_pid_setIntegralGain 0024                       _printBuffer 019F  
                   ___fladd@signs 0053                       _pro_setMyId 1559            __size_of_convertToReal 0211  
          __size_of_protocol_task 00D6                  fp__protocol_task 0042                      ___fladd@aexp 0054  
                    ___fladd@bexp 0055              __Umul8_16@multiplier 0028                       createTask@t 0026  
                     fp__led_task 0048                 __Umul8_16@product 0024  
