Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=D:\Microchip\xc8\v2.05\pic\dat\en_msgs.txt -cs \
  -h+dist/default/production\Controle.production.sym \
  --cmf=dist/default/production\Controle.production.cmf -z -Q16F886 \
  -oC:\Users\Sanches\AppData\Local\Temp\sboc.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Controle.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Sanches\AppData\Local\Temp\sboc.o \
  dist/default/production\Controle.production.o 

Object code version is 3.11

Machine type is 16F886



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Sanches\AppData\Local\Temp\sboc.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Controle.production.o
                cinit                                15       15       23        8       0
                intentry                              4        4        E        8       0
                text22                              1DB      1DB      10C        8       0
                text21                              554      554       5B        8       0
                text20                              FB3      FB3       23     1F66       0
                text19                              66B      66B       3C      CD6       0
                text18                              3B9      3B9       8F        8       0
                text17                              5AF      5AF       41        8       0
                text16                              4D3      4D3       81        8       0
                text15                               38       38      1A3        8       0
                text14                              F71      F71        8     1EE2       0
                text13                              7DE      7DE       1A      CD6       0
                text12                              716      716       36      CD6       0
                text11                              F79      F79        F     1EF2       0
                text10                              FD6      FD6       2A     1FAC       0
                text9                               6E0      6E0       36      CD6       0
                text8                               5F0      5F0       3E        8       0
                text7                               780      780       34      CD6       0
                text6                               2E7      2E7       D2        8       0
                text5                               6A7      6A7       39      CD6       0
                text4                               F88      F88       13     1F10       0
                text3                               74C      74C       34      CD6       0
                text2                               7B4      7B4       2A      CD6       0
                text1                               F9B      F9B       18     1F36       0
                maintext                            448      448       8B        8       0
                cstackBANK0                          20       20       49       20       1
                cstackCOMMON                         77       77        7       70       1
                clrtext                             7F8      7F8        8      CD6       0
                bssBANK3                            190      190       2E      190       1
                bssBANK1                             A0       A0       4B       A0       1
                bssBANK0                             69       69        6       20       1
                bssCOMMON                            70       70        7       70       1
                strings                             62E      62E       3D      C5C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       23         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text22                              1DB      1DB      10C         0
                text21                              554      554       5B         0
                text20                              FB3      FB3       23         0
                text19                              66B      66B       3C         0
                text18                              3B9      3B9       8F         0
                text17                              5AF      5AF       41         0
                text16                              4D3      4D3       81         0
                text15                               38       38      1A3         0
                text14                              F71      F71        8         0
                text13                              7DE      7DE       1A         0
                text12                              716      716       36         0
                text11                              F79      F79        F         0
                text10                              FD6      FD6       2A         0
                text9                               6E0      6E0       36         0
                text8                               5F0      5F0       3E         0
                text7                               780      780       34         0
                text6                               2E7      2E7       D2         0
                text5                               6A7      6A7       39         0
                text4                               F88      F88       13         0
                text3                               74C      74C       34         0
                text2                               7B4      7B4       2A         0
                text1                               F9B      F9B       18         0
                maintext                            448      448       8B         0
                clrtext                             7F8      7F8        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             62E      62E       3D         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         77       77        7         1
                bssCOMMON                            70       70        7         1

        CLASS   BANK0          
                cstackBANK0                          20       20       49         1
                bssBANK0                             69       69        6         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       4B         1

        CLASS   BANK2          

        CLASS   BANK3          
                bssBANK3                            190      190       2E         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00062A  00062E         8       0  CODE        2
                cstackBANK0                    000020  00004F  00006F        20       1  BANK0       1
                bssCOMMON                      000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  00004B  0000EB        A0       1  BANK1       1
                bssBANK3                       000190  00002E  0001BE       190       1  BANK3       1
                strings                        00062E  00003D  00066B       C5C       0  STRING      2
                text19                         00066B  000195  000800       CD6       0  CODE        2
                text14                         000F71  000008  000F79      1EE2       0  CODE        2
                text11                         000F79  00000F  000F88      1EF2       0  CODE        2
                text4                          000F88  000013  000F9B      1F10       0  CODE        2
                text1                          000F9B  000018  000FB3      1F36       0  CODE        2
                text20                         000FB3  000023  000FD6      1F66       0  CODE        2
                text10                         000FD6  00002A  001000      1FAC       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00EB-00EF              5           1
        BANK2            0110-016F             60           1
        BANK3            01BE-01EF             32           1
        CODE             0003-0003              1           2
                         0800-0F70            771
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         0800-0F70            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0800-0F70            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00EB-00EF              5
                         0110-016F             60
                         01BE-01EF             32
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0800-0F70            771
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         0800-0F70            100
                         1000-1FFF            100

                                  Symbol Table

?___aldiv                 cstackBANK0  002D
?___awdiv                 cstackBANK0  0020
?___lmul                  cstackBANK0  0020
?___lwdiv                 cstackBANK0  0020
?___lwmod                 cstackBANK0  0028
?___wmul                  cstackBANK0  0020
?_constrain               cstackBANK0  0020
?_getServoCommand         cstackBANK0  0020
?_getServoState           cstackBANK0  0020
?_sprintf                 cstackBANK0  002E
SetMotor@D_Response       cstackBANK0  0050
SetMotor@I_Response       cstackBANK0  0052
SetMotor@P_Response       cstackBANK0  004E
SetMotor@derivative       bssBANK1     00E9
SetMotor@err              cstackBANK0  0058
SetMotor@integral         bssBANK1     00E5
SetMotor@last_err         bssBANK1     00DA
SetMotor@resp             cstackBANK0  0054
SetPoint@new_val          cstackBANK0  003B
SetPoint@sVar             cstackBANK0  0041
_ANS10                    (abs)        0C4A
_ANS11                    (abs)        0C4B
_ANS13                    (abs)        0C4D
_ANS4                     (abs)        0C44
_ANS8                     (abs)        0C48
_ANS9                     (abs)        0C49
_BRGH                     (abs)        04C2
_CCP1CONbits              (abs)        0017
_CCP2CONbits              (abs)        001D
_CCPR1L                   (abs)        0015
_CCPR2L                   (abs)        001B
_CREN                     (abs)        00C4
_FERR                     (abs)        00C2
_GIE                      (abs)        005F
_IOCB                     (abs)        0096
_OERR                     (abs)        00C1
_OPTION_REGbits           (abs)        0081
_PEIE                     (abs)        005E
_PIR1bits                 (abs)        000C
_PORTB                    (abs)        0006
_PR2                      (abs)        0092
_RA5                      (abs)        002D
_RA6                      (abs)        002E
_RB5                      (abs)        0035
_RBIE                     (abs)        005B
_RBIF                     (abs)        0058
_RC3                      (abs)        003B
_RC4                      (abs)        003C
_RC5                      (abs)        003D
_RCIE                     (abs)        0465
_RCIF                     (abs)        0065
_RCREG                    (abs)        001A
_RX9                      (abs)        00C6
_SPBRG                    (abs)        0099
_SPEN                     (abs)        00C7
_SREN                     (abs)        00C5
_SYNC                     (abs)        04C4
_SetMotor                 text15       0038
_SetPoint                 text5        06A7
_T0IE                     (abs)        005D
_T0IF                     (abs)        005A
_T2CONbits                (abs)        0012
_TMR0                     (abs)        0001
_TMR1IE                   (abs)        0460
_TRISA5                   (abs)        042D
_TRISA6                   (abs)        042E
_TRISB1                   (abs)        0431
_TRISB2                   (abs)        0432
_TRISB3                   (abs)        0433
_TRISB4                   (abs)        0434
_TRISB5                   (abs)        0435
_TRISB7                   (abs)        0437
_TRISC1                   (abs)        0439
_TRISC2                   (abs)        043A
_TRISC3                   (abs)        043B
_TRISC4                   (abs)        043C
_TRISC5                   (abs)        043D
_TX9                      (abs)        04C6
_TXEN                     (abs)        04C5
_TXIE                     (abs)        0464
_TXIF                     (abs)        0064
_TXREG                    (abs)        0019
__CFG_BOR4V$BOR21V        (abs)        0000
__CFG_BOREN$OFF           (abs)        0000
__CFG_CP$OFF              (abs)        0000
__CFG_CPD$OFF             (abs)        0000
__CFG_FCMEN$ON            (abs)        0000
__CFG_FOSC$EC             (abs)        0000
__CFG_IESO$ON             (abs)        0000
__CFG_LVP$OFF             (abs)        0000
__CFG_MCLRE$ON            (abs)        0000
__CFG_PWRTE$OFF           (abs)        0000
__CFG_WDTE$OFF            (abs)        0000
__CFG_WRT$OFF             (abs)        0000
__Habs1                   abs1         0000
__Hbank0                  bank0        0000
__Hbank1                  bank1        0000
__Hbank2                  bank2        0000
__Hbank3                  bank3        0000
__HbssBANK0               bssBANK0     0000
__HbssBANK1               bssBANK1     0000
__HbssBANK3               bssBANK3     0000
__HbssCOMMON              bssCOMMON    0000
__Hcinit                  cinit        0038
__Hclrtext                clrtext      0000
__Hcode                   code         0000
__Hcommon                 common       0000
__Hconfig                 config       2009
__HcstackBANK0            cstackBANK0  0000
__HcstackCOMMON           cstackCOMMON 0000
__Heeprom_data            eeprom_data  0000
__Hend_init               end_init     0015
__Hfunctab                functab      0000
__Hidloc                  idloc        0000
__Hinit                   init         0012
__Hintentry               intentry     0012
__Hmaintext               maintext     0000
__Hpowerup                powerup      0000
__Hram                    ram          0000
__Hreset_vec              reset_vec    0003
__Hsfr0                   sfr0         0000
__Hsfr1                   sfr1         0000
__Hsfr2                   sfr2         0000
__Hsfr3                   sfr3         0000
__Hspace_0                (abs)        2009
__Hspace_1                (abs)        01BE
__Hspace_2                (abs)        0000
__Hspace_3                (abs)        0000
__Hstack                  stack        0000
__Hstrings                strings      0000
__Htext                   text         0000
__Labs1                   abs1         0000
__Lbank0                  bank0        0000
__Lbank1                  bank1        0000
__Lbank2                  bank2        0000
__Lbank3                  bank3        0000
__LbssBANK0               bssBANK0     0000
__LbssBANK1               bssBANK1     0000
__LbssBANK3               bssBANK3     0000
__LbssCOMMON              bssCOMMON    0000
__Lcinit                  cinit        0015
__Lclrtext                clrtext      0000
__Lcode                   code         0000
__Lcommon                 common       0000
__Lconfig                 config       2007
__LcstackBANK0            cstackBANK0  0000
__LcstackCOMMON           cstackCOMMON 0000
__Leeprom_data            eeprom_data  0000
__Lend_init               end_init     0012
__Lfunctab                functab      0000
__Lidloc                  idloc        0000
__Linit                   init         0012
__Lintentry               intentry     0004
__Lmaintext               maintext     0000
__Lpowerup                powerup      0000
__Lram                    ram          0000
__Lreset_vec              reset_vec    0000
__Lsfr0                   sfr0         0000
__Lsfr1                   sfr1         0000
__Lsfr2                   sfr2         0000
__Lsfr3                   sfr3         0000
__Lspace_0                (abs)        0000
__Lspace_1                (abs)        0000
__Lspace_2                (abs)        0000
__Lspace_3                (abs)        0000
__Lstack                  stack        0000
__Lstrings                strings      0000
__Ltext                   text         0000
__S0                      (abs)        2009
__S1                      (abs)        01BE
__S2                      (abs)        0000
__S3                      (abs)        0000
___aldiv                  text18       03B9
___aldiv@counter          cstackBANK0  0036
___aldiv@dividend         cstackBANK0  0031
___aldiv@divisor          cstackBANK0  002D
___aldiv@quotient         cstackBANK0  0038
___aldiv@sign             cstackBANK0  0037
___awdiv                  text21       0554
___awdiv@counter          cstackBANK0  0025
___awdiv@dividend         cstackBANK0  0022
___awdiv@divisor          cstackBANK0  0020
___awdiv@quotient         cstackBANK0  0027
___awdiv@sign             cstackBANK0  0026
___int_sp                 stack        0000
___latbits                (abs)        0002
___lmul                   text17       05AF
___lmul@multiplicand      cstackBANK0  0024
___lmul@multiplier        cstackBANK0  0020
___lmul@product           cstackBANK0  0029
___lwdiv                  text8        05F0
___lwdiv@counter          cstackBANK0  0027
___lwdiv@dividend         cstackBANK0  0022
___lwdiv@divisor          cstackBANK0  0020
___lwdiv@quotient         cstackBANK0  0025
___lwmod                  text7        0780
___lwmod@counter          cstackBANK0  002D
___lwmod@dividend         cstackBANK0  002A
___lwmod@divisor          cstackBANK0  0028
___sp                     stack        0000
___stackhi                (abs)        0000
___stacklo                (abs)        0000
___wmul                   text20       0FB3
___wmul@multiplicand      cstackBANK0  0022
___wmul@multiplier        cstackBANK0  0020
___wmul@product           cstackBANK0  0024
__end_of_SetMotor         text15       01DB
__end_of_SetPoint         text5        06E0
__end_of___aldiv          text18       0448
__end_of___awdiv          text21       05AF
__end_of___lmul           text17       05F0
__end_of___lwdiv          text8        062E
__end_of___lwmod          text7        07B4
__end_of___wmul           text20       0FD6
__end_of__initialization  cinit        0034
__end_of__stringtab       strings      0634
__end_of_chkchr           text14       0F79
__end_of_constrain        text19       06A7
__end_of_dpowers          strings      063E
__end_of_encoders_init    text13       07F8
__end_of_getServoCommand  text12       074C
__end_of_getServoState    text11       0F88
__end_of_isr              text22       02E7
__end_of_main             maintext     04D3
__end_of_motor_reset      text3        0780
__end_of_putch            text10       1000
__end_of_putst            text9        0716
__end_of_pwm_init         text2        07DE
__end_of_pwm_set          text16       0554
__end_of_resetCounter     text4        0F9B
__end_of_serial_init      text1        0FB3
__end_of_sprintf          text6        03B9
__initialization          cinit        0015
__pbssBANK0               bssBANK0     0069
__pbssBANK1               bssBANK1     00A0
__pbssBANK3               bssBANK3     0190
__pbssCOMMON              bssCOMMON    0070
__pcstackBANK0            cstackBANK0  0020
__pcstackCOMMON           cstackCOMMON 0077
__pintentry               intentry     0004
__pmaintext               maintext     0448
__pstrings                strings      062E
__ptext1                  text1        0F9B
__ptext10                 text10       0FD6
__ptext11                 text11       0F79
__ptext12                 text12       0716
__ptext13                 text13       07DE
__ptext14                 text14       0F71
__ptext15                 text15       0038
__ptext16                 text16       04D3
__ptext17                 text17       05AF
__ptext18                 text18       03B9
__ptext19                 text19       066B
__ptext2                  text2        07B4
__ptext20                 text20       0FB3
__ptext21                 text21       0554
__ptext22                 text22       01DB
__ptext3                  text3        074C
__ptext4                  text4        0F88
__ptext5                  text5        06A7
__ptext6                  text6        02E7
__ptext7                  text7        0780
__ptext8                  text8        05F0
__ptext9                  text9        06E0
__size_of_SetMotor        (abs)        0000
__size_of_SetPoint        (abs)        0000
__size_of___aldiv         (abs)        0000
__size_of___awdiv         (abs)        0000
__size_of___lmul          (abs)        0000
__size_of___lwdiv         (abs)        0000
__size_of___lwmod         (abs)        0000
__size_of___wmul          (abs)        0000
__size_of_chkchr          (abs)        0000
__size_of_constrain       (abs)        0000
__size_of_encoders_init   (abs)        0000
__size_of_getServoCommand (abs)        0000
__size_of_getServoState   (abs)        0000
__size_of_isr             (abs)        0000
__size_of_main            (abs)        0000
__size_of_motor_reset     (abs)        0000
__size_of_putch           (abs)        0000
__size_of_putst           (abs)        0000
__size_of_pwm_init        (abs)        0000
__size_of_pwm_set         (abs)        0000
__size_of_resetCounter    (abs)        0000
__size_of_serial_init     (abs)        0000
__size_of_sprintf         (abs)        0000
__stringbase              strings      0633
__stringtab               strings      062E
_ab1                      bssCOMMON    0076
_chkchr                   text14       0F71
_com_time                 bssBANK1     00DE
_constrain                text19       066B
_delayus_variable         bssBANK1     00E4
_dpowers                  strings      0634
_dummy                    bssBANK1     00E3
_encoder1_counter         bssBANK1     00D2
_encoders_init            text13       07DE
_getServoCommand          text12       0716
_getServoState            text11       0F79
_isr                      text22       01DB
_last_pos                 bssBANK1     00CE
_main                     maintext     0448
_motor_pos                bssCOMMON    0070
_motor_reset              text3        074C
_onlyK                    bssBANK1     00DC
_pos_log1                 bssBANK1     00A0
_pos_log2                 bssBANK3     0190
_putch                    text10       0FD6
_putst                    text9        06E0
_pwm_init                 text2        07B4
_pwm_set                  text16       04D3
_resetCounter             text4        0F88
_samples                  bssCOMMON    0074
_sampling                 bssBANK0     006D
_serial_init              text1        0F9B
_set_motor_flag           bssBANK1     00E1
_set_point                bssBANK0     0069
_sprintf                  text6        02E7
_state1                   bssBANK0     006E
btemp                     (abs)        007E
clear_ram0                clrtext      07F8
constrain@lLimit          cstackBANK0  0024
constrain@uLimit          cstackBANK0  0028
constrain@value           cstackBANK0  0020
end_of_initialization     cinit        0034
getServoCommand@lStep     bssBANK1     00E0
interrupt_function        intentry     0004
intlevel0                 functab      0000
intlevel1                 functab      0000
intlevel2                 functab      0000
intlevel3                 functab      0000
intlevel4                 functab      0000
intlevel5                 functab      0000
isr@portB                 cstackCOMMON 007D
main@sVar                 cstackBANK0  005F
putch@c                   cstackBANK0  0021
putst@str                 cstackBANK0  0023
pwm_set@channel           cstackBANK0  003C
pwm_set@duty_cycle        cstackBANK0  003E
reset_vec                 reset_vec    0000
saved_w                   (abs)        007E
sprintf@ap                cstackBANK0  0034
sprintf@c                 cstackBANK0  003A
sprintf@f                 cstackBANK0  002E
sprintf@flag              cstackBANK0  0035
sprintf@prec              cstackBANK0  0036
sprintf@sp                cstackBANK0  0039
sprintf@val               cstackBANK0  0037
start                     init         0012
start_initialization      cinit        0015
wtemp0                    (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 290 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  sVar           10   63[BANK0 ] unsigned char [10]
  serialIn        1    0        unsigned char 
  i               2    0        int 
  enc1            2    0        int 
  serialIn        1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      16       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_SetMotor
		_SetPoint
		_chkchr
		_encoders_init
		_getServoCommand
		_getServoState
		_motor_reset
		_putst
		_pwm_init
		_pwm_set
		_resetCounter
		_serial_init
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _serial_init *****************
 Defined at:
		line 29 in file "serial.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_init *****************
 Defined at:
		line 25 in file "pwm.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_reset *****************
 Defined at:
		line 163 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SetPoint
		_pwm_set
		_resetCounter
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _resetCounter *****************
 Defined at:
		line 158 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_motor_reset
		_main
 This function uses a non-reentrant model


 *************** function _SetPoint *****************
 Defined at:
		line 149 in file "main.c"
 Parameters:    Size  Location     Type
  new_val         2   27[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sVar           20   33[BANK0 ] unsigned char [20]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      20       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_putst
		_sprintf
 This function is called by:
		_motor_reset
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 500 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> main@sVar(10), SetPoint@sVar(20), 
  f               1   14[BANK0 ] PTR const unsigned char 
		 -> STR_5(14), STR_4(4), STR_3(4), STR_2(11), 
		 -> STR_1(16), 
 Auto vars:     Size  Location     Type
  sp              1   25[BANK0 ] PTR unsigned char 
		 -> main@sVar(10), SetPoint@sVar(20), 
  tmpval          4    0        struct .
  val             2   23[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   26[BANK0 ] unsigned char 
  prec            1   22[BANK0 ] char 
  flag            1   21[BANK0 ] unsigned char 
  ap              1   20[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2   14[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_SetPoint
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    8[BANK0 ] unsigned int 
  dividend        2   10[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] unsigned int 
  dividend        2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    5[BANK0 ] unsigned int 
  counter         1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _putst *****************
 Defined at:
		line 211 in file "serial.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR const unsigned char 
		 -> main@sVar(10), SetPoint@sVar(20), 
 Auto vars:     Size  Location     Type
  str             1    3[BANK0 ] PTR const unsigned char 
		 -> main@sVar(10), SetPoint@sVar(20), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_putch
 This function is called by:
		_SetPoint
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 95 in file "serial.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_putst
		_putchhex
		_putchdec
 This function uses a non-reentrant model


 *************** function _getServoState *****************
 Defined at:
		line 18 in file "servoController.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getServoCommand *****************
 Defined at:
		line 22 in file "servoController.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _encoders_init *****************
 Defined at:
		line 253 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _chkchr *****************
 Defined at:
		line 142 in file "serial.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetMotor *****************
 Defined at:
		line 110 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  I_Response      2   50[BANK0 ] int 
  D_Response      2   48[BANK0 ] int 
  P_Response      2   46[BANK0 ] int 
  resp            4   52[BANK0 ] long 
  err             2   56[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      12       0       0       0
      Temps:          0       8       0       0       0
      Totals:         0      20       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___wmul
		_constrain
		_pwm_set
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_set *****************
 Defined at:
		line 72 in file "pwm.c"
 Parameters:    Size  Location     Type
  channel         2   28[BANK0 ] int 
  duty_cycle      4   30[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___aldiv
		___lmul
 This function is called by:
		_SetMotor
		_motor_reset
		_main
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[BANK0 ] unsigned long 
  multiplicand    4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_pwm_set
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4   13[BANK0 ] long 
  dividend        4   17[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   24[BANK0 ] long 
  sign            1   23[BANK0 ] unsigned char 
  counter         1   22[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   13[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_pwm_set
 This function uses a non-reentrant model


 *************** function _constrain *****************
 Defined at:
		line 98 in file "main.c"
 Parameters:    Size  Location     Type
  value           4    0[BANK0 ] long 
  lLimit          4    4[BANK0 ] long 
  uLimit          4    8[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0      12       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetMotor
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK0 ] unsigned int 
  multiplicand    2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetMotor
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] int 
  dividend        2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[BANK0 ] int 
  sign            1    6[BANK0 ] unsigned char 
  counter         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetMotor
		_putchdec
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 173 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  portB           1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          6       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
serial.c
		_putch         		CODE           	0FD6	0000	43
		_chkchr        		CODE           	0F71	0000	9
		_putst         		CODE           	06E0	0000	55
		_serial_init   		CODE           	0F9B	0000	25

serial.c estimated size: 132

D:\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	02E7	0000	211

D:\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c estimated size: 211

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	0FB3	0000	36

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c estimated size: 36

pwm.c
		_pwm_set       		CODE           	04D3	0000	130
		_pwm_init      		CODE           	07B4	0000	43

pwm.c estimated size: 173

D:\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	0780	0000	53

D:\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c estimated size: 53

servoController.c
		_getServoState 		CODE           	0F79	0000	16
		_getServoCommand		CODE           	0716	0000	55

servoController.c estimated size: 71

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	05AF	0000	66

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c estimated size: 66

shared
		__stringtab    		STRING         	062E	0000	7
		_dpowers       		STRING         	0634	0000	11
		__initialization		CODE           	0015	0000	32

shared estimated size: 50

D:\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	05F0	0000	63

D:\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c estimated size: 63

D:\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	0554	0000	92

D:\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c estimated size: 92

D:\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	03B9	0000	144

D:\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c estimated size: 144

main.c
		_constrain     		CODE           	066B	0000	61
		_SetMotor      		CODE           	0038	0000	420
		_main          		CODE           	0448	0000	140
		_resetCounter  		CODE           	0F88	0000	20
		_isr           		CODE           	01DB	0000	269
		_encoders_init 		CODE           	07DE	0000	27
		_SetPoint      		CODE           	06A7	0000	58
		_motor_reset   		CODE           	074C	0000	53

main.c estimated size: 1048

