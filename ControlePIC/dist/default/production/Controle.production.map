Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=D:\Microchip\xc8\v2.05\pic\dat\en_msgs.txt -cs \
  -h+dist/default/production\Controle.production.sym \
  --cmf=dist/default/production\Controle.production.cmf -z -Q16F886 \
  -oC:\Users\Sanches\AppData\Local\Temp\secg.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Controle.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Sanches\AppData\Local\Temp\secg.o \
  dist/default/production\Controle.production.o 

Object code version is 3.11

Machine type is 16F886



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Sanches\AppData\Local\Temp\secg.o
                end_init                              E        E        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Controle.production.o
                cinit                                11       11       10        8       0
                intentry                              4        4        A        8       0
                text15                              114      114       C1        8       0
                text14                              4BB      4BB       23        8       0
                text13                              3D0      3D0       3C        8       0
                text12                              27F      27F       8F        8       0
                text11                              38F      38F       41        8       0
                text10                              30E      30E       81        8       0
                text9                                21       21       F3        8       0
                text8                               516      516       18      9FC       0
                text7                               440      440       2C        8       0
                text6                               541      541        F      9FC       0
                text5                               496      496       25        8       0
                text4                               52E      52E       13      9FC       0
                text3                               40C      40C       34        8       0
                text2                               46C      46C       2A        8       0
                text1                               4FE      4FE       18      9FC       0
                maintext                            1D5      1D5       AA        8       0
                cstackBANK0                          20       20       30       20       1
                cstackCOMMON                         70       70        6       70       1
                clrtext                             550      550        8      9FC       0
                bssBANK0                             50       50       13       20       1
                bssCOMMON                            76       76        5       70       1
                strings                             4DE      4DE       20      9BC       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              E        E        3         0
                cinit                                11       11       10         0
                intentry                              4        4        A         0
                reset_vec                             0        0        3         0
                text15                              114      114       C1         0
                text14                              4BB      4BB       23         0
                text13                              3D0      3D0       3C         0
                text12                              27F      27F       8F         0
                text11                              38F      38F       41         0
                text10                              30E      30E       81         0
                text9                                21       21       F3         0
                text8                               516      516       18         0
                text7                               440      440       2C         0
                text6                               541      541        F         0
                text5                               496      496       25         0
                text4                               52E      52E       13         0
                text3                               40C      40C       34         0
                text2                               46C      46C       2A         0
                text1                               4FE      4FE       18         0
                maintext                            1D5      1D5       AA         0
                clrtext                             550      550        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             4DE      4DE       20         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        6         1
                bssCOMMON                            76       76        5         1

        CLASS   BANK0          
                cstackBANK0                          20       20       30         1
                bssBANK0                             50       50       13         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0004DA  0004DE         8       0  CODE        2
                cstackBANK0                    000020  000043  000063        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        0004DE  000020  0004FE       9BC       0  STRING      2
                text1                          0004FE  00005A  000558       9FC       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0063-006F              D           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0558-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         0558-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0558-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0063-006F              D           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0558-1FFF           1AA8
        STRING           0003-0003              1           2
                         0558-1FFF            100

                                  Symbol Table

?___aldiv                 cstackBANK0  002D
?___lmul                  cstackBANK0  0020
?___wmul                  cstackBANK0  0026
?_constrain               cstackBANK0  0020
?_getServoCommand         cstackBANK0  0020
?_getServoState           cstackBANK0  0020
SetMotor@D_Response       cstackBANK0  0048
SetMotor@P_Response       cstackBANK0  0046
SetMotor@derivative       bssBANK0     0061
SetMotor@err              cstackBANK0  004A
SetMotor@last_err         bssBANK0     005E
SetMotor@resp             cstackBANK0  004C
SetPoint@new_val          cstackBANK0  002C
_ANS10                    (abs)        0C4A
_ANS11                    (abs)        0C4B
_ANS13                    (abs)        0C4D
_ANS4                     (abs)        0C44
_ANS8                     (abs)        0C48
_ANS9                     (abs)        0C49
_BRGH                     (abs)        04C2
_CCP1CONbits              (abs)        0017
_CCP2CONbits              (abs)        001D
_CCPR1L                   (abs)        0015
_CCPR2L                   (abs)        001B
_CREN                     (abs)        00C4
_FERR                     (abs)        00C2
_GIE                      (abs)        005F
_IOCB                     (abs)        0096
_OERR                     (abs)        00C1
_OPTION_REGbits           (abs)        0081
_PEIE                     (abs)        005E
_PIR1bits                 (abs)        000C
_PORTB                    (abs)        0006
_PR2                      (abs)        0092
_RA5                      (abs)        002D
_RA6                      (abs)        002E
_RB5                      (abs)        0035
_RBIE                     (abs)        005B
_RBIF                     (abs)        0058
_RC3                      (abs)        003B
_RC4                      (abs)        003C
_RC5                      (abs)        003D
_RCIE                     (abs)        0465
_RCIF                     (abs)        0065
_RCREG                    (abs)        001A
_RX9                      (abs)        00C6
_SPBRG                    (abs)        0099
_SPEN                     (abs)        00C7
_SREN                     (abs)        00C5
_SYNC                     (abs)        04C4
_SetMotor                 text9        0021
_SetPoint                 text5        0496
_T0IE                     (abs)        005D
_T0IF                     (abs)        005A
_T2CONbits                (abs)        0012
_TMR0                     (abs)        0001
_TMR1IE                   (abs)        0460
_TRISA5                   (abs)        042D
_TRISA6                   (abs)        042E
_TRISB1                   (abs)        0431
_TRISB2                   (abs)        0432
_TRISB3                   (abs)        0433
_TRISB4                   (abs)        0434
_TRISB5                   (abs)        0435
_TRISB7                   (abs)        0437
_TRISC1                   (abs)        0439
_TRISC2                   (abs)        043A
_TRISC3                   (abs)        043B
_TRISC4                   (abs)        043C
_TRISC5                   (abs)        043D
_TX9                      (abs)        04C6
_TXEN                     (abs)        04C5
_TXIE                     (abs)        0464
_TXIF                     (abs)        0064
_TXREG                    (abs)        0019
__CFG_BOR4V$BOR21V        (abs)        0000
__CFG_BOREN$OFF           (abs)        0000
__CFG_CP$OFF              (abs)        0000
__CFG_CPD$OFF             (abs)        0000
__CFG_FCMEN$ON            (abs)        0000
__CFG_FOSC$EC             (abs)        0000
__CFG_IESO$ON             (abs)        0000
__CFG_LVP$OFF             (abs)        0000
__CFG_MCLRE$ON            (abs)        0000
__CFG_PWRTE$OFF           (abs)        0000
__CFG_WDTE$OFF            (abs)        0000
__CFG_WRT$OFF             (abs)        0000
__Habs1                   abs1         0000
__Hbank0                  bank0        0000
__Hbank1                  bank1        0000
__Hbank2                  bank2        0000
__Hbank3                  bank3        0000
__HbssBANK0               bssBANK0     0000
__HbssCOMMON              bssCOMMON    0000
__Hcinit                  cinit        0021
__Hclrtext                clrtext      0000
__Hcode                   code         0000
__Hcommon                 common       0000
__Hconfig                 config       2009
__HcstackBANK0            cstackBANK0  0000
__HcstackCOMMON           cstackCOMMON 0000
__Heeprom_data            eeprom_data  0000
__Hend_init               end_init     0011
__Hfunctab                functab      0000
__Hidloc                  idloc        0000
__Hinit                   init         000E
__Hintentry               intentry     000E
__Hmaintext               maintext     0000
__Hpowerup                powerup      0000
__Hram                    ram          0000
__Hreset_vec              reset_vec    0003
__Hsfr0                   sfr0         0000
__Hsfr1                   sfr1         0000
__Hsfr2                   sfr2         0000
__Hsfr3                   sfr3         0000
__Hspace_0                (abs)        2009
__Hspace_1                (abs)        007B
__Hspace_2                (abs)        0000
__Hspace_3                (abs)        0000
__Hstack                  stack        0000
__Hstrings                strings      0000
__Htext                   text         0000
__Labs1                   abs1         0000
__Lbank0                  bank0        0000
__Lbank1                  bank1        0000
__Lbank2                  bank2        0000
__Lbank3                  bank3        0000
__LbssBANK0               bssBANK0     0000
__LbssCOMMON              bssCOMMON    0000
__Lcinit                  cinit        0011
__Lclrtext                clrtext      0000
__Lcode                   code         0000
__Lcommon                 common       0000
__Lconfig                 config       2007
__LcstackBANK0            cstackBANK0  0000
__LcstackCOMMON           cstackCOMMON 0000
__Leeprom_data            eeprom_data  0000
__Lend_init               end_init     000E
__Lfunctab                functab      0000
__Lidloc                  idloc        0000
__Linit                   init         000E
__Lintentry               intentry     0004
__Lmaintext               maintext     0000
__Lpowerup                powerup      0000
__Lram                    ram          0000
__Lreset_vec              reset_vec    0000
__Lsfr0                   sfr0         0000
__Lsfr1                   sfr1         0000
__Lsfr2                   sfr2         0000
__Lsfr3                   sfr3         0000
__Lspace_0                (abs)        0000
__Lspace_1                (abs)        0000
__Lspace_2                (abs)        0000
__Lspace_3                (abs)        0000
__Lstack                  stack        0000
__Lstrings                strings      0000
__Ltext                   text         0000
__S0                      (abs)        2009
__S1                      (abs)        007B
__S2                      (abs)        0000
__S3                      (abs)        0000
___aldiv                  text12       027F
___aldiv@counter          cstackBANK0  0036
___aldiv@dividend         cstackBANK0  0031
___aldiv@divisor          cstackBANK0  002D
___aldiv@quotient         cstackBANK0  0038
___aldiv@sign             cstackBANK0  0037
___int_sp                 stack        0000
___latbits                (abs)        0002
___lmul                   text11       038F
___lmul@multiplicand      cstackBANK0  0024
___lmul@multiplier        cstackBANK0  0020
___lmul@product           cstackBANK0  0029
___sp                     stack        0000
___stackhi                (abs)        0000
___stacklo                (abs)        0000
___wmul                   text14       04BB
___wmul@multiplicand      cstackBANK0  0028
___wmul@multiplier        cstackBANK0  0026
___wmul@product           cstackBANK0  002A
__end_of_SetMotor         text9        0114
__end_of_SetPoint         text5        04BB
__end_of___aldiv          text12       030E
__end_of___lmul           text11       03D0
__end_of___wmul           text14       04DE
__end_of__initialization  cinit        001D
__end_of__stringtab       strings      04E4
__end_of_constrain        text13       040C
__end_of_dpowers          strings      04EE
__end_of_encoders_init    text8        052E
__end_of_getServoCommand  text7        046C
__end_of_getServoState    text6        0550
__end_of_isr              text15       01D5
__end_of_main             maintext     027F
__end_of_motor_reset      text3        0440
__end_of_pwm_init         text2        0496
__end_of_pwm_set          text10       038F
__end_of_resetCounter     text4        0541
__end_of_serial_init      text1        0516
__initialization          cinit        0011
__pbssBANK0               bssBANK0     0050
__pbssCOMMON              bssCOMMON    0076
__pcstackBANK0            cstackBANK0  0020
__pcstackCOMMON           cstackCOMMON 0070
__pintentry               intentry     0004
__pmaintext               maintext     01D5
__pstrings                strings      04DE
__ptext1                  text1        04FE
__ptext10                 text10       030E
__ptext11                 text11       038F
__ptext12                 text12       027F
__ptext13                 text13       03D0
__ptext14                 text14       04BB
__ptext15                 text15       0114
__ptext2                  text2        046C
__ptext3                  text3        040C
__ptext4                  text4        052E
__ptext5                  text5        0496
__ptext6                  text6        0541
__ptext7                  text7        0440
__ptext8                  text8        0516
__ptext9                  text9        0021
__size_of_SetMotor        (abs)        0000
__size_of_SetPoint        (abs)        0000
__size_of___aldiv         (abs)        0000
__size_of___lmul          (abs)        0000
__size_of___wmul          (abs)        0000
__size_of_constrain       (abs)        0000
__size_of_encoders_init   (abs)        0000
__size_of_getServoCommand (abs)        0000
__size_of_getServoState   (abs)        0000
__size_of_isr             (abs)        0000
__size_of_main            (abs)        0000
__size_of_motor_reset     (abs)        0000
__size_of_pwm_init        (abs)        0000
__size_of_pwm_set         (abs)        0000
__size_of_resetCounter    (abs)        0000
__size_of_serial_init     (abs)        0000
__stringbase              strings      04E3
__stringtab               strings      04DE
_ab1                      bssCOMMON    0077
_constrain                text13       03D0
_delayus_variable         bssCOMMON    007A
_dpowers                  strings      04E4
_dummy                    bssCOMMON    0079
_encoder1_counter         bssBANK0     0058
_encoders_init            text8        0516
_getServoCommand          text7        0440
_getServoState            text6        0541
_isr                      text15       0114
_lStep                    bssCOMMON    0076
_main                     maintext     01D5
_motor_pos                bssBANK0     0054
_motor_reset              text3        040C
_pwm_init                 text2        046C
_pwm_set                  text10       030E
_resetCounter             text4        052E
_serial_init              text1        04FE
_set_motor_flag           bssBANK0     0060
_set_point                bssBANK0     0050
_state1                   bssCOMMON    0078
btemp                     (abs)        007E
clear_ram0                clrtext      0550
constrain@lLimit          cstackBANK0  0024
constrain@uLimit          cstackBANK0  0028
constrain@value           cstackBANK0  0020
end_of_initialization     cinit        001D
interrupt_function        intentry     0004
intlevel0                 functab      0000
intlevel1                 functab      0000
intlevel2                 functab      0000
intlevel3                 functab      0000
intlevel4                 functab      0000
intlevel5                 functab      0000
isr@portB                 cstackCOMMON 0075
pwm_set@channel           cstackBANK0  003C
pwm_set@duty_cycle        cstackBANK0  003E
reset_vec                 reset_vec    0000
saved_w                   (abs)        007E
start                     init         000E
start_initialization      cinit        0011
wtemp0                    (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 214 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0        int 
  enc1            2    0        int 
  serialIn        1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_SetMotor
		_SetPoint
		___wmul
		_encoders_init
		_getServoCommand
		_getServoState
		_motor_reset
		_pwm_init
		_pwm_set
		_serial_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _serial_init *****************
 Defined at:
		line 29 in file "serial.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_init *****************
 Defined at:
		line 25 in file "pwm.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_reset *****************
 Defined at:
		line 129 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SetPoint
		_pwm_set
		_resetCounter
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _resetCounter *****************
 Defined at:
		line 124 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_motor_reset
 This function uses a non-reentrant model


 *************** function _SetPoint *****************
 Defined at:
		line 117 in file "main.c"
 Parameters:    Size  Location     Type
  new_val         2   12[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_motor_reset
		_main
 This function uses a non-reentrant model


 *************** function _getServoState *****************
 Defined at:
		line 19 in file "servoController.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getServoCommand *****************
 Defined at:
		line 23 in file "servoController.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _encoders_init *****************
 Defined at:
		line 205 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetMotor *****************
 Defined at:
		line 89 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  resp            4   44[BANK0 ] long 
  err             2   42[BANK0 ] int 
  D_Response      2   40[BANK0 ] int 
  P_Response      2   38[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
		_constrain
		_pwm_set
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _pwm_set *****************
 Defined at:
		line 72 in file "pwm.c"
 Parameters:    Size  Location     Type
  channel         2   28[BANK0 ] int 
  duty_cycle      4   30[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___aldiv
		___lmul
 This function is called by:
		_SetMotor
		_motor_reset
		_main
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[BANK0 ] unsigned long 
  multiplicand    4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_pwm_set
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4   13[BANK0 ] long 
  dividend        4   17[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   24[BANK0 ] long 
  sign            1   23[BANK0 ] unsigned char 
  counter         1   22[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   13[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_pwm_set
 This function uses a non-reentrant model


 *************** function _constrain *****************
 Defined at:
		line 71 in file "main.c"
 Parameters:    Size  Location     Type
  value           4    0[BANK0 ] long 
  lLimit          4    4[BANK0 ] long 
  uLimit          4    8[BANK0 ] long 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0      12       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetMotor
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_SetMotor
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 137 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  portB           1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
serial.c
		_serial_init   		CODE           	04FE	0000	25

serial.c estimated size: 25

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	04BB	0000	36

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c estimated size: 36

pwm.c
		_pwm_set       		CODE           	030E	0000	130
		_pwm_init      		CODE           	046C	0000	43

pwm.c estimated size: 173

servoController.c
		_getServoState 		CODE           	0541	0000	16
		_getServoCommand		CODE           	0440	0000	45

servoController.c estimated size: 61

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	038F	0000	66

D:\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c estimated size: 66

shared
		__stringtab    		STRING         	04DE	0000	7
		_dpowers       		STRING         	04E4	0000	11
		__initialization		CODE           	0011	0000	13

shared estimated size: 31

D:\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	027F	0000	144

D:\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c estimated size: 144

main.c
		_constrain     		CODE           	03D0	0000	61
		_SetMotor      		CODE           	0021	0000	244
		_main          		CODE           	01D5	0000	171
		_resetCounter  		CODE           	052E	0000	20
		_isr           		CODE           	0114	0000	194
		_encoders_init 		CODE           	0516	0000	25
		_SetPoint      		CODE           	0496	0000	38
		_motor_reset   		CODE           	040C	0000	53

main.c estimated size: 806

